<?xml version='1.0' encoding='utf-8' ?>

<workbook version='8.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8100.13.1231.1350                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='Pit Scouting 2014CASA(Pit Scouting.xlsx)' inline='true' name='excel.41706.516013356479' version='8.2'>
      <connection auto-extract='yes' class='excel' driver='Ace12' filename='C:\Users\Student\Documents\GoogleRepo\Scouting\Regional Scouting\Pit Scouting2014CASA.xlsx' header='yes' imex='1'>
        <relation name='Sheet1$' table='[Sheet1$]' type='table' />
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='real' name='[teamnum]' role='dimension' type='ordinal'>
      </column>
      <extract count='-1' enabled='false' units='records'>
        <connection class='dataengine' dbname='C:\Users\Student\Documents\GoogleRepo\Scouting\Regional Scouting\Pit Scouting (Pit Scouting.xlsx).tde' schema='Extract' tablename='Extract' update-time='3/31/2014 4:09:47 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='55' timestamp-start='2014-03-31 16:09:46.871000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Data#csv 2014CASA(Data.csv)' inline='true' name='csv.41692.410723206020' version='8.2'>
      <connection auto-extract='yes' character-set='65001' class='csv' directory='C:\Users\Student\Documents\GoogleRepo\Scouting\Regional Scouting\' driver='' filename='Data2014CASA.csv' force-character-set='no' force-header='no' force-separator='no' header='yes' separator=','>
        <relation name='Data2014CASA#csv' table='[Data2014CASA#csv]' type='table' />
      </connection>
      <aliases enabled='yes' />
      <column caption='Auto Total' datatype='integer' name='[Calculation_0590308094936153]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Auto_High]+&#13;&#10;[Auto_High_Hot]+&#13;&#10;[Auto_Low]+&#13;&#10;[Auto_Low_Hot]+&#13;&#10;[Auto_Missed_High]+&#13;&#10;[Auto_Missed_Low]' scope-isolation='false' />
      </column>
      <column caption='Auto Total Success' datatype='integer' name='[Calculation_1540308095801239]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Auto_High]+&#13;&#10;[Auto_High_Hot]+&#13;&#10;[Auto_Low]+&#13;&#10;[Auto_Low_Hot]' scope-isolation='false' />
      </column>
      <column caption='Assist Total' datatype='integer' name='[Calculation_1960308111118024]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[2_Assist]+&#13;&#10;[3_Assist]' scope-isolation='false' />
      </column>
      <column caption='Total Fouls' datatype='integer' name='[Calculation_3410308111631177]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Fouls]*20+&#13;&#10;[Tech_Fouls]*50' scope-isolation='false' />
      </column>
      <column caption='Auto Low Total' datatype='integer' name='[Calculation_3520308094912519]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Auto_Low]+[Auto_Low_Hot]' scope-isolation='false' />
      </column>
      <column caption='Auto Score' datatype='integer' name='[Calculation_5710308094248893]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Auto_High]*15+&#13;&#10;[Auto_High_Hot]*20+&#13;&#10;[Auto_Low]*6+&#13;&#10;[Auto_Low_Hot]*11+&#13;&#10;[Auto_Mobility]*5' scope-isolation='false' />
      </column>
      <column caption='Tele Accuracy' datatype='real' name='[Calculation_6390308101604122]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(([Tele_Low]+&#13;&#10;[Tele_High])/&#13;&#10;[Calculation_8470308100954074])*100' scope-isolation='false' />
      </column>
      <column caption='Tele Score' datatype='integer' name='[Calculation_7890308094604704]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[2_Assist]*10+&#13;&#10;[3_Assist]*30+&#13;&#10;[Catch]*10+&#13;&#10;[Fouls]*-20+&#13;&#10;[Tech_Fouls]*-50+&#13;&#10;[Tele_High]*10+&#13;&#10;[Tele_Low]*1+&#13;&#10;[Truss]*10' scope-isolation='false' />
      </column>
      <column caption='Tele Total' datatype='integer' name='[Calculation_8470308100954074]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Tele_High]+&#13;&#10;[Tele_Low]+&#13;&#10;[Tele_Low_Miss]+&#13;&#10;[Tele_High_Miss]' scope-isolation='false' />
      </column>
      <column caption='Auto Accuracy' datatype='real' name='[Calculation_9170308095316098]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_1540308095801239]/&#13;&#10;[Calculation_0590308094936153])*100' scope-isolation='false' />
      </column>
      <column caption='Auto High Total' datatype='integer' name='[Calculation_9570308094839934]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Auto_High]+[Auto_High_Hot]' scope-isolation='false' />
      </column>
      <column caption='Total Score' datatype='integer' name='[Calculation_9690308093447497]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[2_Assist]*10+&#13;&#10;[3_Assist]*30+&#13;&#10;[Auto_High]*15+&#13;&#10;[Auto_High_Hot]*20+&#13;&#10;[Auto_Low]*6+&#13;&#10;[Auto_Low_Hot]*11+&#13;&#10;[Auto_Mobility]*5+&#13;&#10;[Catch]*10+&#13;&#10;[Fouls]*-20+&#13;&#10;[Tech_Fouls]*-50+&#13;&#10;[Tele_High]*10+&#13;&#10;[Tele_Low]*1+&#13;&#10;[Truss]*10' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' datatype-customized='true' name='[Robot_Job]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;0&quot;' value='Unknown' />
          <alias key='&quot;1&quot;' value='Offensive' />
          <alias key='&quot;2&quot;' value='Defensive' />
          <alias key='&quot;3&quot;' value='Off and Def' />
          <alias key='&quot;4&quot;' value='Nothing' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='integer' name='[matchnum]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
      </column>
      <column-instance column='[Calculation_5710308094248893]' derivation='Avg' name='[avg:Calculation_5710308094248893:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_7890308094604704]' derivation='Avg' name='[avg:Calculation_7890308094604704:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_9690308093447497]' derivation='Avg' name='[avg:Calculation_9690308093447497:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_9690308093447497]' derivation='Max' name='[max:Calculation_9690308093447497:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_9690308093447497]' derivation='Min' name='[min:Calculation_9690308093447497:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_0590308094936153]' derivation='Sum' name='[sum:Calculation_0590308094936153:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5710308094248893]' derivation='Sum' name='[sum:Calculation_5710308094248893:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_7890308094604704]' derivation='Sum' name='[sum:Calculation_7890308094604704:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='false' units='records'>
        <connection class='dataengine' dbname='C:\Users\Student\Documents\Scouting\Scouting 2014.tde' schema='Extract' tablename='Extract' update-time='2/22/2014 5:52:38 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='18' timestamp-start='2014-02-22 17:52:38.253000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41692.410723206020]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[csv.41692.410723206020].[sum:Calculation_0590308094936153:qk]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[csv.41692.410723206020].[sum:Calculation_7890308094604704:qk]&quot;</bucket>
            </map>
            <map to='#c13c01'>
              <bucket>&quot;[csv.41692.410723206020].[max:Calculation_9690308093447497:qk]&quot;</bucket>
            </map>
            <map to='#fda25a'>
              <bucket>&quot;[csv.41692.410723206020].[min:Calculation_9690308093447497:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[csv.41692.410723206020].[avg:Calculation_9690308093447497:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[csv.41692.410723206020].[Multiple Values]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[csv.41692.410723206020].[sum:Calculation_5710308094248893:qk]&quot;</bucket>
            </map>
            <map to='#ff800e'>
              <bucket>&quot;[csv.41692.410723206020].[avg:Calculation_7890308094604704:qk]&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;[csv.41692.410723206020].[avg:Calculation_5710308094248893:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='csv.41692.410723206020'>
      <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
      </column>
    </datasource-dependencies>
    <datasource-dependencies datasource='excel.41706.516013356479'>
      <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
      <column aggregation='Sum' datatype='real' name='[teamnum]' role='dimension' type='ordinal'>
      </column>
    </datasource-dependencies>
    <datasource-relationship source='csv.41692.410723206020' target='excel.41706.516013356479'>
      <column-mapping>
        <map key='[csv.41692.410723206020].[none:teamnum:ok]' value='[excel.41706.516013356479].[none:teamnum:ok]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <shared-views>
    <shared-view name='csv.41692.410723206020'>
      <datasources>
        <datasource caption='Data#csv 2014CASA(Data.csv)' name='csv.41692.410723206020' />
      </datasources>
      <datasource-dependencies datasource='csv.41692.410723206020'>
        <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
        <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
        </column>
      </datasource-dependencies>
      <filter class='categorical' column='[csv.41692.410723206020].[none:teamnum:ok]'>
        <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:teamnum:ok]' />
          <groupfilter function='empty-level' member='[none:teamnum:ok]' />
        </groupfilter>
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Assist' tab-color='#fff6be'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data#csv 2014CASA(Data.csv)' name='csv.41692.410723206020' />
          </datasources>
          <datasource-dependencies datasource='csv.41692.410723206020'>
            <column caption='Assist Total' datatype='integer' name='[Calculation_1960308111118024]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[2_Assist]+&#13;&#10;[3_Assist]' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_1960308111118024]' derivation='Avg' name='[avg:Calculation_1960308111118024:qk]' pivot='key' type='quantitative' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <sort class='computed' column='[csv.41692.410723206020].[none:teamnum:ok]' direction='DESC' using='[csv.41692.410723206020].[avg:Calculation_1960308111118024:qk]'>
          </sort>
          <slices>
            <column>[csv.41692.410723206020].[none:teamnum:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f1923e' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41692.410723206020].[none:teamnum:ok]</rows>
        <cols>[csv.41692.410723206020].[avg:Calculation_1960308111118024:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Auto Accuracy/Mob' tab-color='#fff6be'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data#csv 2014CASA(Data.csv)' name='csv.41692.410723206020' />
          </datasources>
          <datasource-dependencies datasource='csv.41692.410723206020'>
            <column datatype='integer' name='[Auto_Mobility]' role='measure' type='quantitative'>
            </column>
            <column caption='Auto Total' datatype='integer' name='[Calculation_0590308094936153]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Auto_High]+&#13;&#10;[Auto_High_Hot]+&#13;&#10;[Auto_Low]+&#13;&#10;[Auto_Low_Hot]+&#13;&#10;[Auto_Missed_High]+&#13;&#10;[Auto_Missed_Low]' scope-isolation='false' />
            </column>
            <column caption='Auto Score' datatype='integer' name='[Calculation_5710308094248893]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Auto_High]*15+&#13;&#10;[Auto_High_Hot]*20+&#13;&#10;[Auto_Low]*6+&#13;&#10;[Auto_Low_Hot]*11+&#13;&#10;[Auto_Mobility]*5' scope-isolation='false' />
            </column>
            <column caption='Auto Accuracy' datatype='real' name='[Calculation_9170308095316098]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_1540308095801239]/&#13;&#10;[Calculation_0590308094936153])*100' scope-isolation='false' />
            </column>
            <column-instance column='[Auto_Mobility]' derivation='Avg' name='[avg:Auto_Mobility:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0590308094936153]' derivation='Avg' name='[avg:Calculation_0590308094936153:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5710308094248893]' derivation='Avg' name='[avg:Calculation_5710308094248893:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9170308095316098]' derivation='Avg' name='[avg:Calculation_9170308095316098:qk]' pivot='key' type='quantitative' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <slices>
            <column>[csv.41692.410723206020].[none:teamnum:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[csv.41692.410723206020].[avg:Auto_Mobility:qk]' palette='tableau-orange' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41692.410723206020].[avg:Auto_Mobility:qk]' />
              <size column='[csv.41692.410723206020].[avg:Calculation_0590308094936153:qk]' />
              <text column='[csv.41692.410723206020].[none:teamnum:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41692.410723206020].[avg:Calculation_5710308094248893:qk]</rows>
        <cols>[csv.41692.410723206020].[avg:Calculation_9170308095316098:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Auto/Tele' tab-color='#e5e4f6'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data#csv 2014CASA(Data.csv)' name='csv.41692.410723206020' />
          </datasources>
          <datasource-dependencies datasource='csv.41692.410723206020'>
            <column caption='Auto Score' datatype='integer' name='[Calculation_5710308094248893]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Auto_High]*15+&#13;&#10;[Auto_High_Hot]*20+&#13;&#10;[Auto_Low]*6+&#13;&#10;[Auto_Low_Hot]*11+&#13;&#10;[Auto_Mobility]*5' scope-isolation='false' />
            </column>
            <column caption='Tele Score' datatype='integer' name='[Calculation_7890308094604704]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[2_Assist]*10+&#13;&#10;[3_Assist]*30+&#13;&#10;[Catch]*10+&#13;&#10;[Fouls]*-20+&#13;&#10;[Tech_Fouls]*-50+&#13;&#10;[Tele_High]*10+&#13;&#10;[Tele_Low]*1+&#13;&#10;[Truss]*10' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_5710308094248893]' derivation='Avg' name='[avg:Calculation_5710308094248893:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7890308094604704]' derivation='Avg' name='[avg:Calculation_7890308094604704:qk]' pivot='key' type='quantitative' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_5710308094248893]' derivation='Sum' name='[sum:Calculation_5710308094248893:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41692.410723206020].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41692.410723206020].[avg:Calculation_7890308094604704:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41692.410723206020].[avg:Calculation_5710308094248893:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[csv.41692.410723206020].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[csv.41692.410723206020].[avg:Calculation_7890308094604704:qk]&quot;</bucket>
              <bucket>&quot;[csv.41692.410723206020].[sum:Calculation_5710308094248893:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[csv.41692.410723206020].[none:teamnum:ok]' direction='ASC'>
            <dictionary>
              <bucket>971</bucket>
              <bucket>1678</bucket>
              <bucket>1671</bucket>
              <bucket>2085</bucket>
              <bucket>2035</bucket>
              <bucket>2073</bucket>
              <bucket>2761</bucket>
              <bucket>4135</bucket>
              <bucket>1662</bucket>
              <bucket>3250</bucket>
              <bucket>1280</bucket>
              <bucket>1458</bucket>
              <bucket>701</bucket>
              <bucket>2144</bucket>
              <bucket>599</bucket>
              <bucket>3925</bucket>
              <bucket>3598</bucket>
              <bucket>2551</bucket>
              <bucket>692</bucket>
              <bucket>1351</bucket>
              <bucket>668</bucket>
              <bucket>114</bucket>
              <bucket>115</bucket>
              <bucket>3256</bucket>
              <bucket>1388</bucket>
              <bucket>766</bucket>
              <bucket>840</bucket>
              <bucket>3189</bucket>
              <bucket>2473</bucket>
              <bucket>5274</bucket>
              <bucket>1868</bucket>
              <bucket>253</bucket>
              <bucket>4498</bucket>
              <bucket>2489</bucket>
              <bucket>4669</bucket>
              <bucket>2141</bucket>
              <bucket>5134</bucket>
              <bucket>5250</bucket>
              <bucket>4643</bucket>
              <bucket>751</bucket>
              <bucket>4711</bucket>
              <bucket>3257</bucket>
              <bucket>2367</bucket>
              <bucket>4698</bucket>
              <bucket>2204</bucket>
              <bucket>4159</bucket>
              <bucket>4185</bucket>
              <bucket>3554</bucket>
              <bucket>3013</bucket>
              <bucket>100</bucket>
              <bucket>585</bucket>
              <bucket>3859</bucket>
              <bucket>2156</bucket>
              <bucket>5026</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41692.410723206020].[:Measure Names]</column>
            <column>[csv.41692.410723206020].[none:teamnum:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41692.410723206020].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41692.410723206020].[none:teamnum:ok]</rows>
        <cols>[csv.41692.410723206020].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='Catch/Truss' tab-color='#f2e6e6'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data#csv 2014CASA(Data.csv)' name='csv.41692.410723206020' />
          </datasources>
          <datasource-dependencies datasource='csv.41692.410723206020'>
            <column datatype='integer' name='[Catch]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Truss]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Catch]' derivation='Avg' name='[avg:Catch:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Truss]' derivation='Avg' name='[avg:Truss:qk]' pivot='key' type='quantitative' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <slices>
            <column>[csv.41692.410723206020].[none:teamnum:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[csv.41692.410723206020].[none:teamnum:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='190' />
                <format attr='mark-color' value='#f1923e' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41692.410723206020].[avg:Truss:qk]</rows>
        <cols>[csv.41692.410723206020].[avg:Catch:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Dead!/Fouls' tab-color='#e5e4f6'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data#csv 2014CASA(Data.csv)' name='csv.41692.410723206020' />
          </datasources>
          <datasource-dependencies datasource='csv.41692.410723206020'>
            <column caption='Total Fouls' datatype='integer' name='[Calculation_3410308111631177]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Fouls]*20+&#13;&#10;[Tech_Fouls]*50' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Dead_Bot]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_3410308111631177]' derivation='Avg' name='[avg:Calculation_3410308111631177:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dead_Bot]' derivation='Avg' name='[avg:Dead_Bot:qk]' pivot='key' type='quantitative' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <slices>
            <column>[csv.41692.410723206020].[none:teamnum:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[csv.41692.410723206020].[none:teamnum:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='188' />
                <format attr='mark-color' value='#f1923e' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41692.410723206020].[avg:Calculation_3410308111631177:qk]</rows>
        <cols>[csv.41692.410723206020].[avg:Dead_Bot:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Defense/Driver' tab-color='#d6f2f8'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data#csv 2014CASA(Data.csv)' name='csv.41692.410723206020' />
          </datasources>
          <datasource-dependencies datasource='csv.41692.410723206020'>
            <column datatype='integer' name='[Defense_Rating]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Driver_Rating]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Goal_Defense]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Defense_Rating]' derivation='Avg' name='[avg:Defense_Rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driver_Rating]' derivation='Avg' name='[avg:Driver_Rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Goal_Defense]' derivation='Avg' name='[avg:Goal_Defense:qk]' pivot='key' type='quantitative' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <slices>
            <column>[csv.41692.410723206020].[none:teamnum:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[csv.41692.410723206020].[avg:Goal_Defense:qk]' palette='tableau-orange' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41692.410723206020].[avg:Goal_Defense:qk]' />
              <text column='[csv.41692.410723206020].[none:teamnum:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='188' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41692.410723206020].[avg:Driver_Rating:qk]</rows>
        <cols>[csv.41692.410723206020].[avg:Defense_Rating:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Intake' tab-color='#eaeed3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data#csv 2014CASA(Data.csv)' name='csv.41692.410723206020' />
          </datasources>
          <datasource-dependencies datasource='csv.41692.410723206020'>
            <column datatype='integer' name='[Pickup_Rating]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Pickup_Rating]' derivation='Avg' name='[avg:Pickup_Rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <sort class='computed' column='[csv.41692.410723206020].[none:teamnum:ok]' direction='DESC' using='[csv.41692.410723206020].[avg:Pickup_Rating:qk]'>
          </sort>
          <slices>
            <column>[csv.41692.410723206020].[none:teamnum:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f1923e' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41692.410723206020].[none:teamnum:ok]</rows>
        <cols>[csv.41692.410723206020].[avg:Pickup_Rating:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Min/Max Total' tab-color='#eaeed3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data#csv 2014CASA(Data.csv)' name='csv.41692.410723206020' />
          </datasources>
          <datasource-dependencies datasource='csv.41692.410723206020'>
            <column caption='Total Score' datatype='integer' name='[Calculation_9690308093447497]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[2_Assist]*10+&#13;&#10;[3_Assist]*30+&#13;&#10;[Auto_High]*15+&#13;&#10;[Auto_High_Hot]*20+&#13;&#10;[Auto_Low]*6+&#13;&#10;[Auto_Low_Hot]*11+&#13;&#10;[Auto_Mobility]*5+&#13;&#10;[Catch]*10+&#13;&#10;[Fouls]*-20+&#13;&#10;[Tech_Fouls]*-50+&#13;&#10;[Tele_High]*10+&#13;&#10;[Tele_Low]*1+&#13;&#10;[Truss]*10' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_9690308093447497]' derivation='Avg' name='[avg:Calculation_9690308093447497:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9690308093447497]' derivation='Max' name='[max:Calculation_9690308093447497:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9690308093447497]' derivation='Min' name='[min:Calculation_9690308093447497:qk]' pivot='key' type='quantitative' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41692.410723206020].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41692.410723206020].[min:Calculation_9690308093447497:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41692.410723206020].[avg:Calculation_9690308093447497:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41692.410723206020].[max:Calculation_9690308093447497:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[csv.41692.410723206020].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[csv.41692.410723206020].[min:Calculation_9690308093447497:qk]&quot;</bucket>
              <bucket>&quot;[csv.41692.410723206020].[avg:Calculation_9690308093447497:qk]&quot;</bucket>
              <bucket>&quot;[csv.41692.410723206020].[max:Calculation_9690308093447497:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[csv.41692.410723206020].[none:teamnum:ok]' direction='ASC'>
            <dictionary>
              <bucket>971</bucket>
              <bucket>1678</bucket>
              <bucket>2085</bucket>
              <bucket>1671</bucket>
              <bucket>692</bucket>
              <bucket>2035</bucket>
              <bucket>3250</bucket>
              <bucket>2073</bucket>
              <bucket>2761</bucket>
              <bucket>3925</bucket>
              <bucket>4135</bucket>
              <bucket>1280</bucket>
              <bucket>701</bucket>
              <bucket>1458</bucket>
              <bucket>1388</bucket>
              <bucket>114</bucket>
              <bucket>1351</bucket>
              <bucket>3189</bucket>
              <bucket>3598</bucket>
              <bucket>2144</bucket>
              <bucket>599</bucket>
              <bucket>840</bucket>
              <bucket>668</bucket>
              <bucket>5274</bucket>
              <bucket>3256</bucket>
              <bucket>2551</bucket>
              <bucket>4669</bucket>
              <bucket>5134</bucket>
              <bucket>766</bucket>
              <bucket>1662</bucket>
              <bucket>1868</bucket>
              <bucket>115</bucket>
              <bucket>2473</bucket>
              <bucket>2489</bucket>
              <bucket>4498</bucket>
              <bucket>5250</bucket>
              <bucket>100</bucket>
              <bucket>2141</bucket>
              <bucket>253</bucket>
              <bucket>4643</bucket>
              <bucket>4711</bucket>
              <bucket>4698</bucket>
              <bucket>2204</bucket>
              <bucket>2367</bucket>
              <bucket>5026</bucket>
              <bucket>751</bucket>
              <bucket>3013</bucket>
              <bucket>4185</bucket>
              <bucket>3554</bucket>
              <bucket>3257</bucket>
              <bucket>4159</bucket>
              <bucket>585</bucket>
              <bucket>3859</bucket>
              <bucket>2156</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41692.410723206020].[:Measure Names]</column>
            <column>[csv.41692.410723206020].[none:teamnum:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41692.410723206020].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[csv.41692.410723206020].[none:teamnum:ok]</rows>
        <cols>[csv.41692.410723206020].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='Pit Scouting 1' tab-color='#eaeed3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Pit Scouting 2014CASA(Pit Scouting.xlsx)' name='excel.41706.516013356479' />
          </datasources>
          <datasource-dependencies datasource='excel.41706.516013356479'>
            <column datatype='real' name='[# of CIMs]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[# of mini CIMs]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Drive Train Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[Wheel Diameter (in)]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Wheel Type]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[# of CIMs]' derivation='None' name='[none:# of CIMs:ok]' pivot='key' type='ordinal' />
            <column-instance column='[# of mini CIMs]' derivation='None' name='[none:# of mini CIMs:nk]' pivot='key' type='nominal' />
            <column-instance column='[Drive Train Type]' derivation='None' name='[none:Drive Train Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Wheel Diameter (in)]' derivation='None' name='[none:Wheel Diameter (in):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Wheel Type]' derivation='None' name='[none:Wheel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='real' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([excel.41706.516013356479].[none:teamnum:ok] / ([excel.41706.516013356479].[none:# of CIMs:ok] / ([excel.41706.516013356479].[none:# of mini CIMs:nk] / ([excel.41706.516013356479].[none:Drive Train Type:nk] / ([excel.41706.516013356479].[none:Wheel Diameter (in):ok] / [excel.41706.516013356479].[none:Wheel Type:nk])))))</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Pit Scouting 2' tab-color='#d6f2f8'>
      <table>
        <view>
          <datasources>
            <datasource caption='Pit Scouting 2014CASA(Pit Scouting.xlsx)' name='excel.41706.516013356479' />
          </datasources>
          <datasource-dependencies datasource='excel.41706.516013356479'>
            <column datatype='string' name='[High Goal Distance]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Kitbot]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Pickup]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Shift]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Speed (ft/sec)]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[High Goal Distance]' derivation='None' name='[none:High Goal Distance:nk]' pivot='key' type='nominal' />
            <column-instance column='[Kitbot]' derivation='None' name='[none:Kitbot:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pickup]' derivation='None' name='[none:Pickup:nk]' pivot='key' type='nominal' />
            <column-instance column='[Shift]' derivation='None' name='[none:Shift:nk]' pivot='key' type='nominal' />
            <column-instance column='[Speed (ft/sec)]' derivation='None' name='[none:Speed (ft/sec):nk]' pivot='key' type='nominal' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='real' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([excel.41706.516013356479].[none:teamnum:ok] / ([excel.41706.516013356479].[none:High Goal Distance:nk] / ([excel.41706.516013356479].[none:Kitbot:nk] / ([excel.41706.516013356479].[none:Pickup:nk] / ([excel.41706.516013356479].[none:Shift:nk] / [excel.41706.516013356479].[none:Speed (ft/sec):nk])))))</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Possession' tab-color='#fae7c8'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data#csv 2014CASA(Data.csv)' name='csv.41692.410723206020' />
          </datasources>
          <datasource-dependencies datasource='csv.41692.410723206020'>
            <column datatype='integer' name='[Possession_Rating]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Possession_Rating]' derivation='Avg' name='[avg:Possession_Rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <sort class='computed' column='[csv.41692.410723206020].[none:teamnum:ok]' direction='DESC' using='[csv.41692.410723206020].[avg:Possession_Rating:qk]'>
          </sort>
          <slices>
            <column>[csv.41692.410723206020].[none:teamnum:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f1923e' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41692.410723206020].[none:teamnum:ok]</rows>
        <cols>[csv.41692.410723206020].[avg:Possession_Rating:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Robot Job' tab-color='#d7e9ff'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data#csv 2014CASA(Data.csv)' name='csv.41692.410723206020' />
          </datasources>
          <datasource-dependencies datasource='csv.41692.410723206020'>
            <column datatype='string' datatype-customized='true' name='[Robot_Job]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;0&quot;' value='Unknown' />
                <alias key='&quot;1&quot;' value='Offensive' />
                <alias key='&quot;2&quot;' value='Defensive' />
                <alias key='&quot;3&quot;' value='Off and Def' />
                <alias key='&quot;4&quot;' value='Nothing' />
              </aliases>
            </column>
            <column-instance column='[Robot_Job]' derivation='None' name='[none:Robot_Job:nk]' pivot='key' type='nominal' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <slices>
            <column>[csv.41692.410723206020].[none:teamnum:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[csv.41692.410723206020].[none:teamnum:ok]</rows>
        <cols>[csv.41692.410723206020].[none:Robot_Job:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Tele Accuracy' tab-color='#fae7c8'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data#csv 2014CASA(Data.csv)' name='csv.41692.410723206020' />
          </datasources>
          <datasource-dependencies datasource='csv.41692.410723206020'>
            <column caption='Auto Total' datatype='integer' name='[Calculation_0590308094936153]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Auto_High]+&#13;&#10;[Auto_High_Hot]+&#13;&#10;[Auto_Low]+&#13;&#10;[Auto_Low_Hot]+&#13;&#10;[Auto_Missed_High]+&#13;&#10;[Auto_Missed_Low]' scope-isolation='false' />
            </column>
            <column caption='Auto Total Success' datatype='integer' name='[Calculation_1540308095801239]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Auto_High]+&#13;&#10;[Auto_High_Hot]+&#13;&#10;[Auto_Low]+&#13;&#10;[Auto_Low_Hot]' scope-isolation='false' />
            </column>
            <column caption='Tele Accuracy' datatype='real' name='[Calculation_6390308101604122]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Tele_Low]+&#13;&#10;[Tele_High])/&#13;&#10;[Calculation_8470308100954074])*100' scope-isolation='false' />
            </column>
            <column caption='Tele Score' datatype='integer' name='[Calculation_7890308094604704]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[2_Assist]*10+&#13;&#10;[3_Assist]*30+&#13;&#10;[Catch]*10+&#13;&#10;[Fouls]*-20+&#13;&#10;[Tech_Fouls]*-50+&#13;&#10;[Tele_High]*10+&#13;&#10;[Tele_Low]*1+&#13;&#10;[Truss]*10' scope-isolation='false' />
            </column>
            <column caption='Tele Total' datatype='integer' name='[Calculation_8470308100954074]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Tele_High]+&#13;&#10;[Tele_Low]+&#13;&#10;[Tele_Low_Miss]+&#13;&#10;[Tele_High_Miss]' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_6390308101604122]' derivation='Avg' name='[avg:Calculation_6390308101604122:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7890308094604704]' derivation='Avg' name='[avg:Calculation_7890308094604704:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8470308100954074]' derivation='Avg' name='[avg:Calculation_8470308100954074:qk]' pivot='key' type='quantitative' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_0590308094936153]' derivation='Sum' name='[sum:Calculation_0590308094936153:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1540308095801239]' derivation='Sum' name='[sum:Calculation_1540308095801239:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41692.410723206020].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41692.410723206020].[sum:Calculation_0590308094936153:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41692.410723206020].[sum:Calculation_1540308095801239:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.41692.410723206020].[:Measure Names]</column>
            <column>[csv.41692.410723206020].[none:teamnum:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[csv.41692.410723206020].[avg:Calculation_8470308100954074:qk]' />
              <text column='[csv.41692.410723206020].[none:teamnum:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='180' />
                <format attr='mark-color' value='#f1923e' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41692.410723206020].[avg:Calculation_7890308094604704:qk]</rows>
        <cols>[csv.41692.410723206020].[avg:Calculation_6390308101604122:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Total Score' tab-color='#d7e9ff'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data#csv 2014CASA(Data.csv)' name='csv.41692.410723206020' />
          </datasources>
          <datasource-dependencies datasource='csv.41692.410723206020'>
            <column caption='Total Score' datatype='integer' name='[Calculation_9690308093447497]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[2_Assist]*10+&#13;&#10;[3_Assist]*30+&#13;&#10;[Auto_High]*15+&#13;&#10;[Auto_High_Hot]*20+&#13;&#10;[Auto_Low]*6+&#13;&#10;[Auto_Low_Hot]*11+&#13;&#10;[Auto_Mobility]*5+&#13;&#10;[Catch]*10+&#13;&#10;[Fouls]*-20+&#13;&#10;[Tech_Fouls]*-50+&#13;&#10;[Tele_High]*10+&#13;&#10;[Tele_Low]*1+&#13;&#10;[Truss]*10' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_9690308093447497]' derivation='Avg' name='[avg:Calculation_9690308093447497:qk]' pivot='key' type='quantitative' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <sort class='computed' column='[csv.41692.410723206020].[none:teamnum:ok]' direction='DESC' using='[csv.41692.410723206020].[avg:Calculation_9690308093447497:qk]'>
          </sort>
          <slices>
            <column>[csv.41692.410723206020].[none:teamnum:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f1923e' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41692.410723206020].[none:teamnum:ok]</rows>
        <cols>[csv.41692.410723206020].[avg:Calculation_9690308093447497:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Total Score Trend' tab-color='#f2e6e6'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data#csv 2014CASA(Data.csv)' name='csv.41692.410723206020' />
          </datasources>
          <datasource-dependencies datasource='csv.41692.410723206020'>
            <column caption='Total Score' datatype='integer' name='[Calculation_9690308093447497]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[2_Assist]*10+&#13;&#10;[3_Assist]*30+&#13;&#10;[Auto_High]*15+&#13;&#10;[Auto_High_Hot]*20+&#13;&#10;[Auto_Low]*6+&#13;&#10;[Auto_Low_Hot]*11+&#13;&#10;[Auto_Mobility]*5+&#13;&#10;[Catch]*10+&#13;&#10;[Fouls]*-20+&#13;&#10;[Tech_Fouls]*-50+&#13;&#10;[Tele_High]*10+&#13;&#10;[Tele_Low]*1+&#13;&#10;[Truss]*10' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_9690308093447497]' derivation='Avg' name='[avg:Calculation_9690308093447497:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[matchnum]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[matchnum]' derivation='None' name='[none:matchnum:qk]' pivot='key' type='quantitative' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <slices>
            <column>[csv.41692.410723206020].[none:teamnum:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f1923e' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41692.410723206020].[none:teamnum:ok] * [csv.41692.410723206020].[avg:Calculation_9690308093447497:qk])</rows>
        <cols>[csv.41692.410723206020].[none:matchnum:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='1' name='Pit Scouting 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41706.516013356479].[none:# of CIMs:nk]</field>
          <field>[excel.41706.516013356479].[none:# of mini CIMs:nk]</field>
          <field>[excel.41706.516013356479].[none:Drive Train Type:nk]</field>
          <field>[excel.41706.516013356479].[none:High Goal Distance:nk]</field>
          <field>[excel.41706.516013356479].[none:Speed (ft/sec):nk]</field>
          <field>[excel.41706.516013356479].[none:Team #:ok]</field>
          <field>[excel.41706.516013356479].[none:Wheel Diameter (in):nk]</field>
          <field>[excel.41706.516013356479].[none:Wheel Type:nk]</field>
          <field>[excel.41706.516013356479].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Pit Scouting 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41706.516013356479].[none:High Goal Distance:nk]</field>
          <field>[excel.41706.516013356479].[none:Kitbot:nk]</field>
          <field>[excel.41706.516013356479].[none:Pickup:nk]</field>
          <field>[excel.41706.516013356479].[none:Shift:nk]</field>
          <field>[excel.41706.516013356479].[none:Speed (ft/sec):nk]</field>
          <field>[excel.41706.516013356479].[none:Team #:ok]</field>
          <field>[excel.41706.516013356479].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Total Score'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41692.410723206020].[none:teamnum:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41692.410723206020].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Assist'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41692.410723206020].[none:teamnum:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41692.410723206020].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Possession'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41692.410723206020].[none:teamnum:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41692.410723206020].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Intake'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41692.410723206020].[none:teamnum:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41692.410723206020].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Robot Job'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41692.410723206020].[none:teamnum:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41692.410723206020].[none:Robot_Job:nk]</field>
          <field>[csv.41692.410723206020].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Catch/Truss'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41692.410723206020].[none:teamnum:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41692.410723206020].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Dead!/Fouls'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41692.410723206020].[none:teamnum:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41692.410723206020].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Tele Accuracy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41692.410723206020].[avg:Calculation_8470308100954074:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41692.410723206020].[none:teamnum:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41692.410723206020].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Auto/Tele'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[csv.41692.410723206020].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41692.410723206020].[none:teamnum:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41692.410723206020].[:Measure Names]</field>
          <field>[csv.41692.410723206020].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Min/Max Total'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[csv.41692.410723206020].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='127'>
            <card param='[csv.41692.410723206020].[none:teamnum:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41692.410723206020].[:Measure Names]</field>
          <field>[csv.41692.410723206020].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Auto Accuracy/Mob'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41692.410723206020].[avg:Auto_Mobility:qk]' type='color' />
            <card pane-specification-id='0' param='[csv.41692.410723206020].[avg:Calculation_0590308094936153:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41692.410723206020].[none:teamnum:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41692.410723206020].[avg:Auto_Mobility:qk]</field>
          <field>[csv.41692.410723206020].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Defense/Driver'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41692.410723206020].[avg:Goal_Defense:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41692.410723206020].[none:teamnum:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41692.410723206020].[avg:Goal_Defense:qk]</field>
          <field>[csv.41692.410723206020].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Total Score Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41692.410723206020].[none:teamnum:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41692.410723206020].[none:matchnum:ok]</field>
          <field>[csv.41692.410723206020].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Pit Scouting 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nO2995Mj15XvedNnIuFdwZWv6qqutjRNipRISZQ0
      kmJmN968ifcidjf2f5n/YmNX2pVipDfSzKOG3rNJNsk2Vd3lq1DwHkgg4U1mIu3dH4qiunq6
      e9hIUKyawOcXmo4+eQHcvPd87zn3HARCCCZMGBX0ux7AhLPNZAJNMMVkAk0wxWQCTTDFZAJN
      MMVkAk0wxWQCTTDFZAJNMMVkAk0wxWQCTTDFZAJNMMVkAk0wxWQCTTDFZAJNMMVkAk0wBX78
      D03TRFH8bocy4awAIUQQ5PjfkUlC2YQnZTAYMAyDYRj491uYLLTr7UE5G+eavWohVax1TD6s
      36y2BaXJ13UAAAB8rcI32qYsQr1QLEFNrDcHAABV7BVLFVHRzJiU+k2+LbT4+rEVnq/x9brJ
      F6tULOqazDe6AABdkSrlYldUzBjUhr0K3+nw9WMrrWadq/Lf+duPn/gvTXr9n39jX/mR2Crq
      ygGKIQDC8D/8A4qM/oByfHe3bwuiQ8rn8hBUshAnbJGf/uDa6BYN7cZ7bz7/4x8kopVzVy+0
      0tF0XXzpb34+Q+L/8d99BO1S8v299oqLMvyuaYI6qJZohPzJKz8afZAAbFx/e/H5l8opbv78
      olTniuX83LVfXJl1j2xw2Cm/+vruc/P+YcC9RDOHlYI6RH7xy5+O/rHHwcmnY/QPf/T93YqB
      ICiEBgQ4AnXTj8Bm/NbkPmdVxCFKaAAQpi06QwudUloV5XK12qp2AEaaNokuzPiS+3FGFTEE
      VyiUNm3R4o1oraIgiGWOE/i6aXsAAGT13Gx0/5AxJCtJi9AgADYOs6Y4OYEQxO6bPW8lpQaC
      OSPIgFNpv4nVBwAA/HPLU86gmyJwTGsPkIibwkmbKYsofmFtNegiPT2jwRWCV69ADHcypqal
      3T99PmAPO1iCRqq8dCnkIk3/NitrF4I+hz046De50NoaiRkOl8WMQdLmP39+anHKQTnoQqF1
      KexFDOQ7V9ETJ3rCE3O/Ez2R8WeA0/aSy7KsqiqKomCyAp0JNE3TNFMyc7yIokjT9PEEemAP
      hYM2V673xE6txHcNVYglCyYf1qnmax2pWiofe+PlYrZU5U1ZhHoikTLUQaXWBQAog1YynR3I
      pr5foV0t1rp8qaweD7JcKpcrJl+sdDKhqWKZawEANFnIZVLN/tCMQVVsZ0v1ZqUiAwAA4GuV
      QqlimBukeR6U8e/86Y/uCz/vxT6yrP2yvB/d5YnV5RkzD6hm4jvdYhBXEpWSn6Az1Qxpi0QC
      /tEtGtrdzz/W9OfTR+X21Qut5FGhI7/knrJSo+vZbjX30W5z2cUoldIsQUdbNQtChsKh0QcJ
      wN7tT7vD57lMtbkyL/LVGl+eu+b22EaXd3Kf/+CDvauzfqFaWaYtsQanD9FwxNQgzXNyBcIt
      r7zyAwynf/bjl3VtUG1J/WbDMLvHoQsRV6bYbNTrXKVi/lQAAOAIzAvVrKYMajW+1uyNwyS6
      vBhOpovNep2rVMayWzDuMDKoCqJQ4/kq3xqHSbCyuhA/SrUbDb5alfVT4Xs86AMN+422THlp
      lR/iIQ+TL9TmZiNmHtDlOcTu63AlBMhtEXU5KZywBP3e0S1CvVSuTTmp2kBvVIpOp9tAsalg
      iDWxAondhoSwUrOGkQbHD70BJ4GggUDAzBFGuVTye+xcS+w1KozNQ2IG6wm5rdQIpo59IFXq
      tkTU6LcIFi+WOt6gGzWQYCjw11fy9/tAEyf6DHCaneiJjD8DGIZhGN+5u/wXFEX5OiA/WYEm
      PDGPicbDNpfJcu1ONZcpN2O7G9uHSfMTrJBKmJTZJzC03Z09XenmSi0AgNzjD6LxrqSaMqkr
      B9t3N7b2VeMvn7ZbK3eGOgCgXau0RwikG9rRUXyM64YyqH96/bO7u0fZXP7rURqKmMsVGu0/
      KwkIjw4OtPt+s2wuBwBQh73N7ag2bN/bSXz9R5lk0vyv8qCM/+SDdx0rrwipz4jlHzej25df
      /BkAEIDRvUm5X//y5saP/uuMGZl9Aqgf7ayjmJyNlTtXLrYSUU7Q7cFph4lwGJfcV60hP2xX
      Crmde3dtDm9f6mnCgA3ODxqc2+mCONpu9Zxu37SH4ruDarXndOILq9cWI49UA4VkdDtaPHd+
      ZeRRPYAyaEqoXcglGza72CzmmkMotC2sNcf3V+YD653BpedeDjthtZBQLdb0xpY95EckodSo
      d3uDQZs7jFasYPmwJFNardQbDuuyorXqkn7t0qqZbIsHZfzLLz+P4vSPX3oBQLB0/nJ0e8Mw
      twLVKpwB5Uarb8rKSazeGbVV1qFa4yrN3hhcN4KkxH4nE4tu7e4PxD5XbS7OTcmA7bd5grHI
      ilrKF2gL47Ej99LtbrVss2CNgTYT9DzGJlfj++2mrI7l4OIY2G01Ll97ngAgXyy1GjzN0OJQ
      dVipSqngm16kMMDFD3u4MxPbwi0+KFQEaHE63QM+S9scs9OOm7FmyIoWiuVmg8MsdgaogqyZ
      DJY/6AMpYqevkg5Cayuo1q2qlHs64Db5jH6nTVjtND6m3ANo8PWW20a0JKPNV+02B0Qxl9fL
      ECbsQ1gppLsKNu2zVupdhmacToskqQZEWq1WKOCDwKjy3aWF6U5PYHEtXxe9Dsbj9aHI476b
      ZrPp9nhMfntfo8mDroR4HJZGqyW0G6jFpYtNiysg9rt2h71e42cWl6VB1+Vyd9q8ouAYDhWh
      KyNEMR67/ML3DVlWVBXH8UGLx60OAqVQoGE45nB7sCcc4v0+0MSJnvDEPGQCTWT8aQZCeNpk
      PEEQExl/ZjjNB4knnWhDvXvzs3sHic1bN/ZimZ2NL7cOkibnVy17mCy3M/GvFGPiaC+eMRfh
      N7T12+vqsJ3M1QEAww63ub03isy+j24te5Cq5OPJ40B3IhFLJFMmP/jm+m1p2EukKwAAVezs
      72yWW6bWeLlf2zrIlJOpYyuFXOoolvzO16UHUlrRubnwmx9toJpw+Xuhxdnpd77Yf+rCsgkV
      D9pcZa/X8iJKrFwIkky5X6NtkZUFExF+qOdTUYo2cvFSV7zUiB81FeCbW3JZRs+MFlr81n4z
      YiV3yoUFkknLAytCLi8vjT5IACq5uIYhfL7W7M1KtVp/0DRc82H36FmtqtjZ2dxf9Lk7XGmN
      tSX7HURBz60umxmkeU6sQFBX3/63N89deWrl/PnY4X651gaqAIHJVxE5txDMleqy0KvUGmPZ
      Ly2uEDKoAxzjisW+JI/DJLK8PJfPlTRJKHG1sbzWBOu1IYKkw0aVa/fH418unFspZjNAGRYr
      Vf10+B4nfCCoq8ViESGtDKoijAORewZp9zitZoSoNOghlFXqdxCoiQpiseAoStpt7OgWodHp
      9m0M3lfgoNOyWKwQQax2B4WPHpZWpIGKUKrYRzHY7atWO4MBxGa3m/ng3U7HytI9URkOugRt
      xRCDYh2WkU5Tj30gXR2KCoCKhBFoqyPa7CwCgd1hapCjMYnGnzFOsxM9icafAU6bjFdVFQAw
      kfETRuT+g0TsH//xH+/7I3jrsw/bkpHcv1doSrXMId/XAj7PY8/r/2P2761TrinaTKjhfgz1
      s08+DwXt8VzP57FKzeLGXtLi8lhMXG0e9vibtzZqXTkSMJEqeZLYzno0W4uEQ2ZClfdj6Mrm
      nZvxdCk4PY3fZ1TstiSIFZJxitbu7BTEHlcsNYLB+7LO9eFhLO/3jX6r+gGODxJPbGFfoQ1i
      icIK7SkUiohD19rF2Qsuk9H4fr1wlCx4Vq44x3CnGQAAADSafHH/AC8kSl3pUiMW60FsemUN
      mPDLNUVRDGiH4qef3zA0BIj8YboUCQZUkgkFw0K9nM/mZp768S9/cPmb26zVai2F0iHEzJyC
      3IdQTUuWmWfD7d/++vceLwUNiKGkrCo21rpy7SUGDO5uNgcQxXQ5sZcqVvK9ch64IqRQHaA2
      v8t65/MPn//Z319cDIxlMF9zUsZDbHl1KZNMYBSjycPF5ZVSLmMyGi+IQ13pjzcaT9kCtNpF
      GKaSy0rqGLxLw4BOp6tYrQuVoq53GYd/an7V72CCS88OKwlvOOiLLIZ8jieyqRoIgemaPjbf
      hbR7RD67n+ICbsvKufnIzJwoSovLy7IkGAb0hmcKleYFB1Asbl9kwUqopM2/OOPDLZ5zCxEM
      p8IBD98cT27//Zz0gSDs9zoIaQGKBEgGUSUDo60sbfINUuQhSlD4uJZyCEVpSJPoUAOyKJAk
      BRGEpmkcG13GQ0NrtzuUxYYYGoYhKEEPum3GwgIUB7pKUOSg26WtDupJduGhOJB1xG5lTToA
      940SikJf1lGWRAGGGRBoqkoQhKZpJMXgGJCGMk2gCsQMVUUQYKgyJBhUH+oIgaOILImMzflE
      H+FRTKLxE0wxicafMU5hUv0kGn+WOM0HiQ/IeOOzD97uyjC6dbvSUbKH9woNcSYcMLeLw3tf
      3qC8Icv4ZPz773wQDjsOky2/1zbgszc3o6zHb+ZiYTF1KOvI53e2KLkdzeSz6aQi9T+9s8tV
      azMzkcenHT6KvY0v91PlmZlp877fn1cgGNu+OSR9LIkYBgTQiEd3GccUbgjvvPNJZDb47oef
      Li/M6YYBDGNvd8vu9uEYevfGx6lCscnzEma1URiCAE0zsrGDjqyyLAsNiKBPPEBVVXEcP16B
      Tn7p6iBTqE4TjkajWcvwQTvKJSvfv3YFMzGDOlw2X2mFroxvBYaGJHQO9qPFZGmgXm4cxQSU
      WNJM2bfS5G70EJG1w7IMEfKXr/ywk9ls9oeooWoGGC3I1m63BiptQFOHIPdjqMOuSvQysfVM
      FGGcFlQVZK3SHBJGRxi0oweH9e4wF916dyMdsWo6hnFt9ac//F6r0SC9Pr5WVQnL7bc/Z9yh
      lgQCtKTQztThPusKPP/cU7iJAZ6YQBAQS0uz5UZnOhS0eEg/q5M9w6SIUA2gDbuNVj9koq7A
      AxCs145ImN1RTMZRwzBf7No5NVW8vvmzn1xeP+y60O76+h1Eai2sXvnpUzNg1M+vGRBAVdMN
      EhvP0tvm0s2OrIo8avP5bUS/20MQJOLFq/2g10fFY7mZiDuWSLMWira5aBoBiKIZkLK4nv/h
      T6Tcwc39JMI4KOcU3TrCPQFFBwiCIIjJY75/J+NVVUVQDEIdQXFgaADFzcjjYwxdByg62kbw
      ECDUdB1DER0CQ9dQFAMAoBhmzj7UNB3DUMMACICqphEEDiGCmfjsuqbqECFw3PznPvaBDEMH
      CAoMQ4cQRRAAoQ5hPn7gmj3vshDHV0WhYRgAQZHjaY+gKGroOorjwDAMaOi6gaKobhg4hhoG
      QFFgGAAnnngBmkTjzxin2YmeROPPAKftJdc0TZblyQo0YUQeGY2HuvzZR+/nat18bCdT6yV2
      7kRztXOLcyZl/JcffcAEplkT0fITGMobf3o9HHHuHta8Hmu3nLixfmDzBc1cnc7Fd0UVXv9i
      gxi2hoQVgVAbCrIm31nfmZkJbd66kcjkKbvHkCUMx/udNkCxXq9fTe23UaeLfXgutj7svfvR
      zaXl+fFlDMK9O9cF3E9CaagaUJN3tjZohx9Vu6+++u7sQuR/vv7OufnpgaToirSxsWF3e0mS
      +OL9N1PFUqVYGCAspskohvQHYnL3Hi/KVpoeKjpJEk86wkdG4zWhlShUAwGU5wqhBZvQ68oE
      CgFETLjp9XysVO/NKBpgR6mt9BAghEA7OoiWMlUFFY9lvGIuZumysXejhzYcjdV6zfV/GhCB
      AN5hAgvNeg/KrYZs/ZsfXi0mdnaKbZvd3S0fDjWq0hLn/JZpxzJ4RBrA7vaOJEtfObzjQFeE
      poS1kgf3SimSdeJAUTW9K93D9C4whvs7u6KKFJIH72+kQlaIYKA9RH/5k+/3ul3KRwt9AfKV
      7d2buD3UkzS/RVPr7UIy4Q/NPnX1ohkZf0Jl4Iw94LGLQ3XK6+51exiKIaY/PGGxWykoimNJ
      ff8KivV6KEC6vIV4VEMQDHvSu7kPYvcH6tXOpUthaDDeqfCl1cXp6UinL7EUCkkno/Jf3LhR
      6ymSKAC5zQ0QkmJ9LISEBWqPvPru9npkUdDGV4iuXckYuE3stDC7z+e04AiiaHDaSyJs2D8V
      zmS5ubAtmcxYGJq1e90enw3XFd2w2H0/+MnPn12bb1fSOmmlHR5i2KVsdgOiJIb0B4JJF2bi
      A51tUoe7nrnzj9pGvyUm0fgJpphE488Yuq6ftmg8juMTGX9mOM0HiSdlvCZ9+M47+Vp7/+6X
      uVq/lo1uHKRXzy2Z86SNj998nQ0vWMcn4//1938IzbjubRc9Hlszd/jxzR17IGynR8+5rpfS
      b/zbWxLJEqo01I1uva6j0pc39r1THkSo/uHN65VSgWbtjWq+IQEbYQxEqdkZ2FjmMSJDFVqv
      vXtjZXXJfBne42i8UE+/9t7tdDIzPR+s17sI0A1Nk5Vhvd7KRu/WRLyT323q9mGvhSJoo9Wk
      LSw2rizQkzwyGq+JnVy14YM0iWGJZOp///nTB58nTT6sktyrtMV5SZ4aqUTyQ4CQYpnEQbSe
      b+xYjMZRQkQJ3Vzmti+yuBDJr52b3r3xcbbTJzWHzSNHb6fPPX1pCtF80+cuudUP3ntrbmGu
      2c7nHUyTLw4G8O//z//DTT0yUHp3456sSLphYOh4KjlDQ5VlBQX41sY6oavpjnYl6D2qVPx2
      tt5pO/tas9Ww14Zuj/WDdzIXn1nItfUX10zV+P4mnJhAuMUxG/BIKGal2fPumddee2vxhb8z
      OYcd/um5EDfOFwFBrA5f0Il05RCXTtA0zeKU+VeNpGmoylyja7OxTmsYI7jzF1cafD0QxOul
      5H7fujAb9ni83pAlneYWwsGuSlsee36yuLLaGByM0UFAUXLl0lVCKKoAa/SGcz57qsg5PdZm
      vU3ZbNPhkG7oFGNp1lsuJ8U3+ksXTbUn+4ZMfKAzwGN8oCaXj+dqV555hiX/shZWMzEyuOxm
      vq1+hg+JxkMIJzPp1HLanGhJkiiKOhHKMAxjIuMnfEOO7+ofrziTLWzCE/PIaLyhSnduvP/W
      ZzvF5G682O5n1+8W4erclJmHxe98sFFS64lDxGoxhsObX36Uqw3mp010udLl3/2/vwnPeG5t
      pF0eWy25+/6NTUfIXKHx2J1375akYkqxWrDh8PP1W/l8aW5u1oxn/upv/297cGpjI+50WVvl
      3I3PrstsaMrBjGxwUD36p7e20HqpZ2VJRdnYvHN4lF1Ymv/rd+t5ZDQeJRgKRb7/4rVMMqb2
      W+G1UM50tS5oYIjSrveG3MZGmLKIusGYvCwNgMPnS0cP++XOoYtoHOV0lDBpEUKUAYMCP0hv
      bCxTlj5i2BGzH9zq9hfj0X59sBsDIlc1DPMlxRAXpSeKDXW4fsVqbyoKbmDf+fbx4PQVVWJh
      LmRFVU9kLhCadtnMSkGata9dPI9Cw8Pg/EBxOJw2qzmbCOLyBKanfO65+UYuwzgcbpeTNJe4
      TdDs8vk1CwHCDqbQHjhtdrvNXG9yAOwu7+JsxOqbEvgKZmEdTjdDmpJFKE7Pnltzsti8z5Gq
      tR12u8Nu++uXJ3uAiQ804Yl5SNtvwzB0fYxdHSb8Z0bXdVVVj+O7X00gCOGpOmmYcD+6rp+q
      X0eWZcMwHnI3HkJDlmWAYBgCDYCSBKbrEDfXJAVCQ5FVgiLHeC9M1TQcx3QD4BgKDV3TIYab
      uxcGoaoqEMFQBOD4o4O+ECqKbECEoigEgZpmPObL0XVN0yFJEOO6FwYNQ1YUBMUo8kG9qesa
      gmIAGgCgT35T+Yl5TDRe3tu48d7to3x0m7C5Y7fe2OKwtXlTNa3Kqf2dw5TFM2U1ES0/gaH8
      7le/Dk57bt9J2F3WSmz7o5vbrvCsGRnfrWU/v3tY5+vr924aBskS2kGqYiPVaLpCGGKyUIO6
      Lg76FgvxP//4qjRo1FrDWosrxItOr71eb6ZTKbvbT568An335qelei8YCpi5GP7VJz6OxvOJ
      1z/azifiU9PeeLIEDFkbyn2hm0zmsrF7qarYSN+ra7ZqLoOhSDqXtTm9hOlLoQ/lkdF4lKB1
      Wf7xD3+Q3bt5b2v3b59Zq+bNPqzKcUJ/UGsNAiaOQB7AE57OHR2K9X6iwDbiZYCanZrNGj9/
      4akZq1EpF3vF3Buxhh1lDvZEh8XebbLVhtDzOzWE/rHPaXMHnnvhqQ9ffQNZvoo0Kp9fb8i6
      oAMCsfqvngvfb7NSKWvEQH3qKkGOrcKUqkgSSWzf2w7b8PdvDp6N+PYKpbW5INcezoSlQnPI
      ivtLqzOv/su7P/3b5zaixR9dnRvTox/Jg8s1JB0hn7VMEJFIwOn1BfqmWkkCAJbPrTR3E17H
      +CLDCOoPhBe8KLTqrVLeOeW3Y6TJCp6R5ZXb65t12hGaiUxRtAVxNhrylXmab8keFzvUsJCL
      amARgKAUkL78cvv8tec6qBXBbYNuYXHx3G4043ZaH7B5fnW11NEIs/n+fwEjrU8/9z1K4mSA
      5fnOtXPhQp5fmg+nU1lHIOT3+3UICZrNJouL885YunrlmefH9ejHMJHx34hCJumfWaRNFMM3
      w+Oj8bna4PKltftnapsr4Z6Qjfy2RvuQaLyu64piquHNhG8PXddP1SGLLMsPhjIQBMHGVIVk
      wtg5bT8NhPDB4gooipIkCQ2t1WxBnLLgQMcoHCoqJGxWxuQ2LksSRtFjrNI6EATWQg8VyNCE
      oSniUKUZxkwZmqHQ7w5EnGI8Tvuf/58uiqrFQkNdbbbaGGlxOqy6IhsoQX6zjUwSegrE7VaL
      LPQHQ93tcZrcUQxNaTTb2IlBfoUyFFGCQQzFQMkxel2P4jiY+tC78Vo+vvnJRqyQOurJ+t69
      221Jn4uETZ2w6PLrf/gXz9KqbVxtvw3lD7/9rTfourseZxxsKbp14+6BOzJnRsZLg+6Njz5h
      g6F6Nt4UpFwsLgLp9qc7Nq+bUurvfHkoNQqNrlAp5SqtoRWVKnwzna9OTXkfc/iUTUY3Ng+X
      VpbXP35PwK0Bv9vkBBL4xEfrGS4ZcwbsB9GsqoiaKDXb9aOjVCa2mSj1qsm7ddVSTCUMTUuk
      k1anf2zdAU5yfzT+xIdCcbLb6rz4wrN9UcylM91+v5jLmfSy03sbvCjVx1po3B2aLSWPpFYx
      UyonMlXzBm1uf9A/FfI7Gw1+c+dOtQMz8YPE3jZCswAAtz+8EPId7m2jGNapFq/fS26u3+Ry
      6Z7yuIj97NwCRUBV1RfXLjZz0Z40hotd/Xajo4H9rX0nrF+/s1fOZj+7eY9EZL6neixGpavy
      qahnyvr6nz50OpnNWNH8E/9DHlwVaHtgZjrQX1kckm6r0esaFpPHYEtPvUQ7pqx+pykr94Og
      kZmZOQ9OevRGtRSYmYEYwZoLdAMAvIEADqCBEnORObslgOKk93+Z7/I1f9Cq9xJZ6HzuqcuM
      3emLzFfLvGfGUWyplseWtcimEy5/uN9p9/sdqydspcxqIpx2vPjSy5RcHUKsWOu8fHUhm61e
      PD+fPIh5ZxcCgSCCYQTN5lPltXO+wxT/3HPfM/nEb8JExp9tmly+2BxeunDu/vPubr2KO/0s
      8W3J+IdcbdZ1XZKkb+l5E/6TMRwOSZJ8UIUxzNhCDRPGi6Zpp+ocCEEQFEUfeg4E61wZYZxu
      K9Huy5gu6oTN4zDRRwkAAIDQ6xKszWTS4F+ARqPV8TjZvgTtVlpXxHZftjnslImsgX67Xmt2
      SYt9JvR1my2t05acLpuhyflCkWRdoSmPKg10jPnmiYWdTsfhdJpX1V9fuhJ6bdzipP58oVHo
      92jWjiE6X2/7vK56s+33fdXvrNfrslb7t3S1+f4JdLJSvTL402uvZat9jT/6PFqr5BLZbG71
      /KoZP9rQxNf++Cff8vkxyvhXf/87h8+5dfeItDH5g+3bu3HPtCkZbxj69q11/+J8Kb7HdXrp
      g+jAEO7e2LH6fIzauHFQQTqlHFevcpVyfWABgzzHp7LlYHDqMTK+zWXe+Hjj8qXVcd2NB1Df
      vHOjp9C1/FGB7w073K2NewZuGbZL77533R8J/tubH017mP10pcNlNnYPcIxwOF3fxhy6Pxp/
      4tPpmkqyDqld2U2Uew3eQHEEqiZ97OzhTk9RxtsvzBWa47NxuVvLlSuZYt28QYa1O+12h5Wq
      8bX9w63ukCrlEplYFFAMAMBqc0257dlUnCAJqVu/vpU93FpvlAt99XHKfHNzezjoyOrYth55
      0CjxQjx2UKi2hx3uKFPxO9lhh0tXWqHA1O76PX9kqlrl47FYkWt7aD1dqn9LK9D9nEznoKyL
      kSnMMX15yX+UqiJyQ6X9Jl+gxSsvsq6gZZwyHltYXJx2E2xQb1aLc8vLECPML2+BmWkSRRnW
      sToVtjI+FLOE/+t5udPE/A5UzFQIz4vXnqas9uCMpcG3XNRUoaFYHytzfvp3/zCbTI7xKG8o
      yj/52/8i8/mqpDlpdEoU6oLqYlHKFWbCarc3sDtord9dXFry2RkCRzAUlzWd+XbOEr9mIuPP
      AI+LxtdrDrcf//bDF/fzkGj8pELZaWZSoWzCfyruP0h8YBeHpUyiWm9F97b241lDGVQbPfPP
      6zYbw0eXw31ioFEuc1CTmm0BAKBJ/XKlKpnzVYeDVqMrdhqN432i0ag3Gk2TLxZXKRua3Gj1
      AAC6MqxylZ5kKuNKk/s7W1tHqcK//6Neqy4phix0RfmvfVx0wvfUB/Uvtg+ghv302tzNZKWy
      /V7P//3/9soVMw/Qlf7br7/14//+v4VsY2s498k7r33vlZcSUW7lqbVWKprkhZf+5uczrtGz
      ZlvFxPv7nRUnCQKeCEHtVwo0Qv7klR+ZGeatD99c/t7LpRS3uLYo1rlCMTd37RdXZkdv3j5s
      l3mRxEp7JCHlc0232+q1sG2pz1dbqtSQUDet1KwzV5QW73G72oPuyuXnQia+k2/IyWg844i4
      mP5QOTqIX+N3BP8AABo6SURBVHvhuR/98GXzD8jFozLUxivjncH5djGlCM0SVy1y7XGYROcj
      nlS+WioWK7n8WFIzWW9EbRbEQbdYqRRL/DhMwmIqWhb1XCIXskib0Wy1VNreT7hsZHcI56bs
      XRnplPLTC1M3Pr0bifhiudo4Hvof8EC/MH1vc4MNLOm9+vzaGiY247x+fs7/6L/+jahXSown
      YKaXxQkMLZkphF1kuac3uKLD7jZQbHphwWHi2lC/URFQe6eUIy1otSZ6wm4SweZmTVXnyCST
      wSlnnh/0mxxjdZOY7ggumKnOoQyaXA+htfYQYqVqazHsSudqTjt6+87+5eeemw14u70ugtN8
      uYyI7Rbl+f61Z76lAuSTQuP/eRD7na6oTfk995+JD4UBSrPkt6btJ4XGzxiTtt8TTHHaaiQ+
      pGPhV0CY2v2yR8/0i4eaxYcLvEy5bbCnUL6Xvvf0aHGVYnSjjk9TQm3p8iUCQfa2bkPa99TF
      c6MP31Dff/fjH73yTDynXFoNiY38xhF38Zln/CbqUDcL0aMG6UMGkcuXGATZ292GKHH1ymUz
      e8Cn773zzEsvZLKdyxfmlH5ze+9gauXZBf/oZYekdvFWtD1vBd5LF60AJOMHPRE+/cyV7/bG
      xskJpEvZXA4Nh69dXvnj+1tObKCQQhvQNJpWjacfXVP7cQidXqafdBjKUfndCM3W1S5jM+fZ
      QUMS2vt70WKy1Ff+3Pbb3DmQLAwK2YZA4Fvld8/RbB7R7IhZ93Modff3Dholvj2oi9Wapg8s
      M6au+eqKyOVTOmvbqJYvW+1pRcLV7/66z8mDRNxy9fIqVMVf/+q3S+dXAYLqGsD1noKxZpJ5
      1lbniyUe14eFWsvkcI8hWK8NkTC7o5SMy2NyDpZWVqrlkgXVU+OR3AAh7UEbIqNUvZQXlPFs
      QNNLay0ubyeReIEbi0HzPOgDQUPXDaBrCkAxFAEAQRFoQAQjRk3XMnQNoJihaQBA/biACoLg
      Zm7Kfd322wC6rqEoCgBisryLYegQIFDXAQJ0HR53+8ZwM538gKZpGIrqhmHoOoJiCIDHoxzN
      1HF5FwMCaBgICjTNGMsgR2PS9vuMcQac6ImMP82ctpd80vZ7gikeWWgcQGPv1vvZHp7avpnm
      +7mDux0FE0r7OyV1PuwZ7WG53S+jDdDMJiweN9D1zY0vyk0xEjARHjGUN/70eiTi2jmseT22
      bjl5Y33fZNvvenb3VqwpVfK4x43p+r2te5VKLRQOmXEvPnj9VVfAu39Q8HocYrt6+/YthfF5
      bPTIBsVG5p0v4qDJGR43aRgH+1vJTCkyEzlFhcaBIXf7fYWELzx79c0v9sGgJeKVMN7qISZi
      yMKwJuQZZZi6/vFXMt54sBbTkwEhhFr04HCMbb/VodyuVRVo7Nc/Pkez5XHIeAPqscPDRrkl
      qr1jGe9STJ01GJoyaFQSHbLXrF212rOKhKunrdA4xpxfWUQNZWNzBwFIOBjo9/or59fMFL5A
      UHTt/BLPNylDztXaGDaGKpCk1eOhIOnyFmJRDUEw1GzUB0HQxZWVTqNux41EsYb9+c6KGTDK
      FnEzGsnwhaykGShqvlYiMr18QWpXvQx2kCkdX6yZFBqfcPZ4TEbihAlPxiQafwaYJNVPMMUZ
      OEj8Cqjf+eg11XdV56Mi7tHaBYVyU8O6THr//n/9xWieanrz0wIyYxVrc5cuWFB0a/MmwgZ/
      cM1EnrWh/Os//+vf/O0P92O9p64s9MuJ9Vj12ssvh00k+9VSm+tFdIaQ/JcuOFH03t42ihDf
      f/EFMy7qW3/83XM/+2kixl+9uiS3a1t7+5ErP1wLj37BUqyn3l6vXnTjtotrPhQ9jO33RfjS
      yy+epmi8oeEkKWro9649/cZne5gsy7pgKIqsSxACMNLXqcr6YFgVhUHhi8/DNNtRJQY3l3MM
      IWWh44fReq6xw+iNo7hguu23ruraoFWQlaPO5+dotoFo5vuF4QyTjh42ue49VBarVU0XVM2U
      TcPQUbmbKkJxcPMya6+cxmg8Ri0szJKotnFvl2FohqFphqZpxmIZ/fgLJ+m1tXPCQLThsNwe
      MAxDkeaOWBCEdfgDdsYaCHGpBErTFoYxeQkcw8nF1fPaUPBZ8EytzVAUTZvtcs+wztmgG7c5
      21xBxwiGYU02HkBQYnrpPKYLIRuTKPE0TZsfpHkmPtAZ4Az4QJO236eZ05YTDQD4ejxfTaBJ
      ibsJ35zjY4VJ2+8JI/LoaLyhfvL677KSA+H33trI53ZvSoC5+eHr27HihbXV0fzU+J0P7pa0
      euIAsbLGUB5P2+//7zfhGc/tr9t+f77pCJps+73+3r2yWEgpVhYbyl+s38wXzLf9/n/sQf/d
      jbjTZW1Xcjc++0Rmg6baftdiv3trE62X+laWUpSNzTsHsezC4mlq+w0g9AeDZaF5PbpvWMJu
      OxmLRTGIGoZuQDDaORA0MKC06r0ht7EepiyirjOmt3OH15c+POyVOofOcbX9Rmg4KNYH6Y31
      ZcrSQww7NN/221uMR3t/bvut65rZducQOEktURwct/1uKAqun7poPBmORJxO79/93S9DU167
      1Wq3OxwOu8vlGvldpFnb2oXzCDQ8DF4byA67w8aabfvt9ASmp7yu2flGLj2mtt+WpfPnaRyE
      HUyhNXDabDabuZyT47bfM2Grzz/gKxgzlrbf1OzKBacFmfc6ktWWw2azT9p+TziLTNp+TzDF
      cRfpB9t+q6rZ7pYTviVOYcO5h7f9BgBAQzcgAg0dIigKDAOgCNQhguGj1nE0dA0iGIAGimEI
      ALqmAZPN7Y7vhWGoYQAMQ6Fh6IaBYqbvhUEEAPjVIHUNAOT430dG0zQMwwwDYhgKoaHrBoJi
      pu6FHf82APx5kDqEAPsr19cEADym7TcwlHf/+OucwEQ3v2gOlIPNW9XusFFIfL6+u7a2NtpI
      43c+uJMfNlNRnSJ1Ubx183qeFxZmwv/x33wUhvJPv/p1cMZ7+07C4bZWYlsffmm27TcXW3/r
      TkEuZwSKREXxi7t3CvnywvycKRn/m/+LDUzdXY/aHJZGMfPF558q1kjAOYqM/3Pb7/jv3trE
      W1ybJsnh8O7O3Vgi/53I+Ee2/QYAWVk7n2oPG81mZ4hq/VpTwl664D2s2kzMc4KGA743rO1s
      hymLDID5lhzu8HQueiDy/XjeMpa23wBgblrO13pZeXuZsogIeLAn4JNjn4pUk4diW4qmCJEb
      Q1MzAJCgg0gUG1CVAGvrqjoOvvto/MkJhBK+qdCApm1gcUg4rdDV1amNrcPVKy+NLNVYp+dC
      cCl6e521I60e9Pn8JGPu10HQqanQgheDrN4s5R1+vx0nTPZTpljH8tp8cW/b6mUqlYF/1s8i
      ZuupeX2BhYhLxTtSm2ecLhq32UzUUAMAYCQ7u3y+hx1aAq5cvuWb8WPad5+RPJHxZ4AzEI03
      DEOW5e90VBMeyWlTYZqmKYryoA902npLT/ia0/bTPLLtNwBAV2XFQKEq6QihDfs6QrrtlqEG
      LPSIaYTqUDQwCmoKxTAIAJIkAARnzKTSQTgQRNZC/aXtt6zRNG3m9qOmDFWIoYZGMAwKgCRJ
      ACA0Q5tRYYIwsDDMUNEZmjR0bTgc4hRDmmhqZujKUIEYMHCGwQCQh5JuAMZitin7CDyy7TfQ
      5bf/8KuyxB5u3uwrCKnU37qx18/c3m9Qa/OB0R6W3Lh+Oyd0ckkJhWp/sHH3i1JTMinj//Db
      33hDrrsbcYuDLUa3bmyYbftdTdx9+05WrRbbKET6g9u7m+USZ1LGv/H7X5Ee7/a9I4ql6vn0
      +p2bmm16NBl/jMDHf/v6BtHheRSQonh3fyuRKi4uL5ymaDyCXb56Jd6U+6Io5fIOH3zpZ7+Y
      Eg5vls18k7iDVKt1kY9GgySjjEXGh2ZLiSOpKaSL9kamClDz1ZCxKRuWLTcRRZRJRkKB+YMB
      m3+6lY+LXSmZo8TqWGp+o7N+ayzDoZqEW6y9Uynjcc9UOMLQbkKQKY+h9heCFqwTipioQGj3
      BpyB+aSsWFjQ7sFwKELSIxb6+AoEjUzPzHlwwq03q6Wp6RmIExZzgW7G7jnndFVRyLioakWY
      ng0wiNkpFApPz4ZdwNIVOjXnVIDBNJNlv3HavrDqGDCYJeAoZRuR2SCmm77Bb5qJjJ/wxDwk
      Gj/JiZ7wzRkOhxDCEzJ+0vb7NHPaDhKRPwP+XdtvoMqCpGGG1FExi9ytqyjjoBENZ31u+2iO
      tDToGLjVUETWbkcB6HXbACXtNhOtxKHRbHXcf2n7LXUGQ6vdQZmIZihSf2iQqC4zdjsGQK/X
      BQCx2Uf8yMe0mk2n0z4QVbvNYmhKt9enWIdlpDJqx5eudFXqS5AEOmm34QAIg76mQ7vD1CBH
      49Ftv/XhG//j11WFPdi6IwPCx6gfrycLsXuJXPXCxfOjJdWn7312O9Ptl3JdTVa7va2dda4t
      m5Txr/7+d06/c/Nu7Ku23ztm237XUttv307pDY7XZNDtrUf3axxvUsa/8y+/RR2u/a0YRhNc
      NrW9tWE4RpTxx9F4sZH+w9sb5KBd0RViMNiJH2Rz3CmLxqPEteeeifKaYsB8NmvpGC++8vPd
      j97AgGIYYFTNiHttaCndp5RUH6fUf5cAMAKu0FwtE5e7Ur7sbBTr45DxaMTLpjMFQhF1nJJx
      YP7OsNUXGVQyYk/MFopibSzFy5G5sCeeKeC6RNOWgW6cPhmPYC7/9AJLBa2KTHkZdTDnY6WF
      aZnyjrw/uIIzHt80CyFFGe0+WPBO4ZS5FuAItrCwMO0h2KDe4Epzy8sQw022/WbdUytep4fC
      aTterYpLEQ9tOho/O784HXASrp7Qqjlm5yhMc5uosAkAICyupRV32E7THrZcaM1HZjDddNU8
      00xk/BngtDnRk0LjZ4xTWKFM1/VJhbIJI/K4IpuK2Gl2hXI2Wa53mtVCvtKoFtN5rjHyLBu0
      +a6othrN4zeoWa82Wh0TgwcAGuXKibbfFa5muu13u9kVO43m8T7RbNQbTfNtvyuGJjdbfQCA
      rg5r42j7XWt0u43m8e2ZTrvJ10f/XcbFAzJe+tPvft0CrsPNm3mukY4daCgZ3byVKdZHlvGZ
      7S9vpVpitVQX+nKrvRfdrvc0kzL+jX/5Z4vbvnsvilro7P72ZjTtNSfj+fTuO7cSRrteEfpG
      q72ZijdqTZMy/sM//d5gbdHdmIEj5XTq8GAHOGfMROPFRuZ/vHaLHPbzYp/o9bYTR4VC7ZRF
      41HqpZdf2K+qpNUxHAoYRlVycRS34XCoG2DUVBYs7KWzhxWLIkoooYExBLqdwfl2IakIwxLH
      NbnWWGT8fNidiiZpVURQQiERU3oJAAAA640ojYI4EIsVTuTHI+PPLUWOoke0LrEULRgGcfpk
      POrwzSyz5IBVEHuQ0do9aKWVlkx6yFHnuXdm0e8OOXGcwLW2gKy6aZwcve0jAAAg2OrqSthN
      uub0BldcvXgRYriZnt8AAJsvsjplD9po0oJxNXEt5KYQs7/N8spqyO9g/YN+szp1bpXCdIeJ
      5QcAQFq9q+f98z4b5aSL+dZaxIsak2j8hDPIQ6LxExl/mjltL7ksy6qqTmT8meE0HySe3EOh
      kY7uZEp8PnFQrLXziYNsuZFP7G8fJEc+xurypUZP5jnuWGdz5QJXa5gaPtTTmSxUhWq9BwBQ
      hHYmVxBkU9+v2OW5Rr/BcccKmeMqXLVq8sXKZTO6KnG1NgBAk8VCPtsamLo4pUrdItdsVavH
      Vhr1arlS/c6PFx8sNI7RzMfvvumamjK01LMXF27fvoP0S0+/8l9GFrRcKrrTswQxBS+XfSSV
      KqdIWyQ45R19yIZ2+/r76ssvJKOVpasXWqlorjV86W+8rIlwWKeSeW+nteKhtXJ5mqSidY5B
      yEBgxHsEx2x//mH7mRcqmers6oLIV7lqce7aL9wmmtvLverb7+w9PecXq5Ul2hLjK9oQCYRM
      DdI8J1cgFD24/cXy1WePt13S6oFyZ3blyv7tT4ajv+HofMiZLbdqtWqlWB7L9ThncL5XyWjD
      HletcfXeOEyiywvBZLrM16pcsTSWOjeMJwJ6nCAOuGqtUmuOwyRYWZ2Px9INnuc5bmiux964
      OOEDGaq4vn6XcoWcqIQ6Q3q7pLNTmFBTad/KfHi0yG+nWkYc/mYpjyJqR0RcLgojWFMtL6Ge
      L3ABF1ntGw2u4HS4DRQLRqbNtLwU2ryIWgW+glOgykueoIsEqMmWl8V8fsrrKDeFXoNjbB4S
      022+yGgtL499IFXsNARU79UJK1kstn0hN2KgkUjor6/kJ22/zxin2YmeyPgzwGmrVK8oytdJ
      9ZMVaMIT85CDxK+A+uHOPcQewkQetYdEPt1SqLAd0dng6kJ4NIegVclI1BQYNKdmZ3AACtkk
      JG2zYRPaAeqHh/HVc5FKQ58OueR+I1PphGdn7SaiGYNmuT6kaU3wzM6QABQKOQiwmZlpMz5Q
      7PBgYXm+yoszEZ827OcKZUdgzmcfPcimCM1MTXZjmn12hgaAKxdEBc7Pz3630YwHC4073a53
      3v/AG5zS1fIvX1zJHvbOhSyfb+6M7ETzudRurzKFyoly0U8y+XqetEVMTSBD29v4EiDPpI9K
      7SsXW8mjcl9l/SEzE6jHlz7bbSw66b1ycY5k4t2GBSFnZqZHHyQA8e3bA02pZquN7rzEVxtN
      bo7ym5pAff76RzuXZ/z9SmnVwsaaNUNGZ7/rCXTi6RDA259cv3jteagbAEE272w9+8JTMqRR
      pa2OvgWji9OeTLHZabWqXHUsMt7mn5XqBV2Xa7VavTMYh0lkeWk6lSn12i2uwo3FX6WcQUKq
      i0OpzvN801wK1FcgK2vnEkfJfqdd46qy2cL34+EBGT/c399HWa+bVFB7EEg9fyTCZWI645sN
      jnihvd/kEaunV+cQqHQl1OEgMYzxe12jDxnqXK3hs1MN0WhWSw67G6Kox++3kKPLeKnfkhHL
      sNPAcKPWlF0+O4GgPp/PzBZW4ziPy8Z3pX6zxthcOGqwrimHZfTME23Yb4sIFDs4g5XKXW/A
      hRhIIOD/6+fV3+8DTZzoCU/MQybQRMafZk5bO0BZlr/OSJysQGeAM3CQ+BWGtrVxG7EFMamO
      OcN6pySTbovalknv1UvLo3n79XysTwZRoRFZWsQBSMUPAeVYmouMPnxDu3dv9+qVxXxNW5zx
      DrvVWK45d27ZyYzuXvT4XHlAWw3Bv7RIAZBKJQCCLy4umHEvdu7dXb24WuKEpfmAKnaT6awr
      ci7oGr1TkdLnj0qSn9SdiwsMAKVCRpDh8vLiaZLxAAlHAq+/c8MfmlKzFWPYVSkP0i+vPPcT
      MGrb72a5uNer+xAlVioEKabU4ShbxNQEgno6tktQWi5W6gqXGolofQjdM/NmJtCgWdvYb85Y
      yZ1SYYFikmLPipCLiwujDxKAYnJfQWAtX2t2ZyW+1u3V5+wzpiaQ2L63vr885e5Wy+cZa7Lf
      AjK6tLxoZpDmOSnjofbhm2+vPXNNV2SAYghpQVRh/tylXHRHGV1/I8vzgWypLvW7lWp9LAfy
      rDsMu1WIQq5c6grDcZhElpdmc7mSIvRLldpYBknY/KzRk1StXqu2umM5awCLK+cKmYwuCWWu
      arp/3Xg4KeM1JZvNILTDjmsI64ZCSyXsuNrVCHvA6xxtPRd7bYRxiJ0mgKogoyyLoxjlcpjI
      q4dGs911WoiubPRaDZa1QQSxu1y0iQKosthXEUoZdFEMtruKzcViAHE6R/zIx7SbTbvN0hFk
      sdcmGRuOGpTVZR3ptPPYB9IVcSAjUBYwCm00BLvLikDE5TI1yNGYROPPGGfAiZ7I+NPM1z22
      TwmKogAAJtH4CSPy6LvxhnL7xsd3tmNceu8gU1P6tc/u7DWLsa1YceSHcam9o0IzGT06zhM9
      2t+KJrNmRg8M7YsbXyjDVixdAwBIrfKdje2mYOraeYdLbceKmejRsUN+dHQYjcVNvljrX9wQ
      pe5RogQAUIT29r31YlMwY3DYrdzajBeiR8dWMsmj3f3od54l9MDNVHzl3NxrH9zrsqI+/WIt
      dlDsM0iVbzmeeXp1xNB0l68d9DpuoByVCiHKUhUbtE1fW54ffchQr5UyB1Y0Hy92xcuN+FFH
      R0PLKx4TVZjFTuvgoBG0ENulwhJlyWiSDSHPr66MPkgAGlx+d5+oF/hmjxdrVUnqoL7lac/o
      xSE1qXe4uyt6XK1y8ZLVlhR7qIJduLR2mqLxuvzqH1499/S1F649BY0hTjDNeuPa898zd4EW
      WVmK5Et1YyiUebMlL46hHQFy2EYoiivkBHk8rV6Xzy2UCiVUHeY5fiyDxCxuNyEPDaTBlXvj
      OWsAi6tr5VyagGq2xOmnw/U44QNBXeN5HiEtHjstaShL4/2+aLUQggJtlhETWWRRQEhGFgcA
      6rKG0BSGoDhrMXFLHMKBIFooTFShNOhRFAMRxMKyhIlmK6p83FxGRFAoiBrD0ihALKzFjEIe
      DAYWmhRkTREHOMmgCCQYliZMNFvRZElFgDpECbTXG1qsNAIR1spOovETzhiTaPwZ4xQm1RME
      8TAZr8ufXf9YZ4NzrNim59d82vWd6itXpj7dq/3dK8+P9rDi4TpPzFCD6tKVywQAe1u3IeN7
      +qIJ/9RQ33vnwx+9ci2eky+dD4v13MYRd+mZZ/wmaqA2C4fROulDBpErly0A7O5tQ4R46uoV
      M7vDJ+++9ezLL6YzncsX5pR+c3vvMLDy7MLUKEfwxweJUrtw87A9b0W8ly7YAEjED/uS8fQz
      V//6NYIeHY3HqKcuLf/rh7uERx143PXkQUeiv7yTbvZGTyAUuv1sP+kwlNh770Zotq52GZu5
      IszQGErdg/3DYrI8UC83jmICSixrpl5QWRCK+byI49uVd8/RbB7R7IjZolXysL+/d9Ao1TtC
      Q6zWNH3Azpry93VFqhYyOmu9WytfttrTioSr332Bqf8fylNCRtvDK7wAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Pit Scouting 2' width='191'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Score' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Assist' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAXQElEQVR4nO3dWYwb930H8P/cw5tcnksujyWXu9xLq1uWrfiQ
      bVm2GyS2YwRu0TR9KHqgQd+CPqSAgfahRdAWyPmSGE0QtM7l1EfsWPIRSZajc7X3yeWxPHZ5
      39dwhtMHOUbqeNcrzYxILv+fF8My9eN3iZ/J/2+H8/8jPM8DCLpbaLsDQN0NNhAkCGwgSBDY
      QJAgsIEgQWADQYLABoIEgQ0ECYLf/gfLsrVarb1RoG6E3P5NNM/zov9KupiMyOvb4taEOs1H
      70AIgiAIcnclWmwjtBk36jXReEJr7FdgTVJlpHHAbS/VL/2reFGhTiTCGig0e3lmYf7a8lY2
      vOgPBn7wve8mKsKrQt1BhAYyOTxYvVRv1mN55MShyWNTI8JrQt0CF6EESatNjqkJd6RPReKE
      c3hcRQmvCnUHRLqvc2Tn3yGuflui4lCHkLCBisWiWq2WqDjUIUT4CNtJq5xqbl2Vrj70h1DT
      CKZz3PvnFdRArWZ1dn7N6/OGAiG3xx1YX7O5hqIbizrb8IBJyyXXanCMv1eoz32t+xqoXi5y
      le2f/Pi60+1Y3/Cntrds28lEPPeMd0qsfFCHEzTG4zhy5VZg0mvFSaJWKhpt9lI67xuzvX/h
      ulj5oA4nqIEq5crImM/mPaCiFE889VR/n/bUI6dQlj958qBY+aAOJ+UYv3SBvPWSRMWhTyCP
      /BnpO3PvnxeO8ZAgUo7xhXgj8LZ09XsWMfwYKte1O8VHBDUQz/OhwIbV1r8wt2ixWoLBkM48
      UMslHL6DJo2MywQbl74jVlDoY7htCnRMAwlaROdjqz/++esrNz5cDMbqmJpmC9Vi6sb0jbm1
      mFj5oA4nqIF0A76jYw4AWka9emVleT3JOlTANjScT6TEygd1OKFroKlDR40mI7+wPDg8ksu7
      jBbdQGnO6YO/SOwVUo7xqx9Siy9LVLyX0ae/jmkH2p3iI3CMhwSRcIznsuH64hXp6u8/uOsk
      3j/R7hR3RuAY31pcWHAPOmZmFvoHbJFQQGsbVjTTBvchDQ1a+Shz4ydiBe0FiEzXdQ0kcIxf
      f/XtC6vTV/3xdIvUEkwZ4cpvvPZmviFWPKjTCRzjRw4OW3ES71PL1tdXQzkw4Rs9cXBIrHBQ
      5xO6Bjp24gFdn470BwacrmKpggDgO/IgJRclG9QFJJzCcuvXqPU3JCq+LxFjTxGu+9qd4s7A
      MR4SRMoxPu2v3XhPuvrdizrxl6hC3+4U4hD2nejC1sUrC0M+b8gf9AwNBv2rtNZSzWx7jzxg
      1ytbxURz8XWxgu4n5MHnwX5pIGHfiaa1BrJ67q3zgETXt+too2KxO01KPhjLipUP6nCCGqia
      Df/mxubRCVc+m5fhbKyMmymmgdPwanzvEPQRRijNX372KZ3BZCkWzBbTqMdBKWVmy+DYwU65
      1AdJTcoxPnCLDr8vUfGuRh3/Kqroa3cKccAxHhJEyjE+sVK99Jp09bsX/dA/oEpju1OIQ2gD
      zX7wrmHivuDMFd/42PUrN7xTRwKLt3yH73eYda1Khg1cEiXlPsOf/Kt2RxCNoCmsuO2/cPnm
      5mZwfnGdp/sGzTL/6kIwlq1UGbHyQR1O2K3NtaZOK2Nx7bDTWMsnEqVmrcoOeUyBYESsfFCH
      E/QR1j84+uWvOAFJc66zBEmpFEqFSlUpFhWaTrlrCZKahFNYPrxAww2mPg059Rwq07Y7hTjg
      GA8JIuEYz8bnK+f+R7r6nYN64G/x/vF2p2gPERqoxTbOv33uxMOPz1w6N/bAk8mFC+jAkTG7
      jq8Xua154fU7H98otjtC24iw0XgxsxWNbRdyyc1wPLMduj69UIBjfM8QoYG0ZpfL2qfQWr2D
      5iaH9OkUqTT8OkevEGcN9PDZL6AYpjv9eQTDJryDPAKPIesVUo7x0VV5ZkGi4h0FH3wAVVva
      naI94BgPCSLlGB+dLk//ULr6UiMPPEseeKbdKTqdCA1USgbfvTxnd9iC4bDb7Y2F1syeY8cn
      nTxTa+U2hddvF75WaHeELiDCajfmX8032EqpWK9W16L5AS2eq9SFl4W6gggNZLDaqBbTxGiV
      nDbJ6q+8tzQ4sE/uWYE+kwgfYQbX5AuuyY//9fSjbdjuGmoXKcf4+IaiHJKo+D2A6gcxvbvd
      KTodHOMhQaQc48NXS1e+JV19qZGH/5Q68kK7U3Q6ERqomIqeP3dONTBcTiftTkc0HPJMnTow
      ZOE5lq9382VqFm609tlEmMLUBgtKKF1KNlNlNlfm09VmodDNfQPdCTGuetbzqNZmdbj6ZLim
      36mXY0CydRXUacRYA8kMXzhjAAA89yWXCNWgriLhFFZIbCqYpETF7wFUbUU11nan6HQSTmGI
      TIOZumWbDgRBkHZn6EoSNlAz8GGpW479JuXqv36r3SG6kjhj/JtvvK60DeUS24O+A6u/e/vx
      v/i6QyO8MNQFRGggtcFMyA0+AxVUDKWTqX6LCc5gvUOUMb6osLj6na7ydsw7OmkfsJKYCFWh
      riDKGK8/+5AeAPDMcw4AAHDDq/E9RMoxPr2l5CsSFRcZisIL73dHwikMYCRC0RLWFxGc4e+W
      0AZiWRbDsBbHARRlGQbF8RbL4iSFoQgbvlaGY/x+J2yf6Fzs3/79W+Va/eXvfXtmZfFnv3oj
      uHzzRz966d1r62LlgzqcoHcglFCNeh3+GxcipYY2kVURYGYxQMrpVrMpVj6owwlqIFqpHui3
      DB86rlb31eTKcKVkNTm2t2P9ZrhDWa8QugY6fvIUAMBz8DgAYGJ4TIREUFeRcozPplWkRLXF
      hiD75vyle0zKMb7F8o2ahPVFhKD75vyle0xoA1UrFVpG53N5pUZTLRZppapaLCg0OorA2Oit
      Chzj9ztBDVROb/7nD37x5bMnpzdSHlufP5IaHRnOJzcquPPph6fEigh1MkG/ByIV+skRRymX
      5VrM8tIKw3GxVDEVidqc8It8vUJYA8kULqfTPXnIqFIdf/ARe5/KrAIMbVaT8MpAr5BwCsvM
      vEXANdB+J+WtzYW8SqmQqLjYEASTciDdvyR81fh6iSuFpKsvJhTFrQfaHaIrCWognmuEN7cs
      dgdbLnAIn0plVdo+plIyWu00gbJbC1X4EbbfCbsan09Pf/jebz+cfvWnPw3l6xvz16Pbyfnr
      F6fXt8TKB3U4QQ3EMeXVeMWiaLE8l89msk3FmL3P7LSnYtti5YM6nMBjv03PP/Ok3mwb9o4g
      FFV1OSil3GRyjU3ZxcoHdTipj/1+T6Li4kIwkn7wa+1O0ZXgDmWQIBIf+/3B69LVFxGCU7Iz
      32h3iq4kqIGq2cj5i7NjE16/P+zzedeWlu1Dvmhg2Xfo98d+b1wUK6i0SLms3RG6lKApjNb0
      W1XcytJKLpeeDeQcBnx+bjoYzVbheWE9Q1ADldORIoOgMrWSwpVI4ZfnZibHR70e00YAHvvd
      KwR9hKkMA1PH1BqNulgqKeX0gbExmUJlMZmV8NjvniHpsd/z3XLsN4KR1LGvtDtFV4JjPCSI
      lBuNb81Xzr8sXX1RIHK9/MkX252iiwlqoEo69OZ7NyemRteW172+sQ3/6qhveHVp0XPwQZ9D
      z9eKXHxOrKASQVQ9elSlWARNYQqDa8hENgiTVdlc869uJ/KBhVnKYlmbh/fG9wpBDVTY9kez
      9dDcxdc+DI14PfZ+TYlpJfx+jdkgVj6owwn6CFOb3Y8/Zcdx9IknWJwg3M5BnCTZZpMgu+WO
      VEgoKcf4yIqs44/9RkgFOfZku1N0MTjGQ4JIfez3S9LVFwI1euVP/FO7U+wHwm5tTgXf/u3N
      frstHo2PjI9vLMy4Jo4Gl2aPnDrtMOt4ptbKhcUKKi6EVrU7wj4haApTGpwGsra6tGq0mbfy
      rYmh/nh4PVeqbSfzYuWDOpygBkr6b7wzn5wcHQytB5VYbSmURFHKqJeVSl2yuy8kmKCPMJP3
      +D9/4zgA4OjJ239wRIREUFeR+NjvUlCi4gIhMg3uONbuFPsBHOMhQSQ99vtaBx77jTmOwQFe
      RCI0EFPNv/zTV85+8dn3X/vFicefvnrx4slHzjjMOp5r8vWC8PoiY+ACX0wiHPfENBiKIJgG
      Q+JErZhlWC4c7eKjUqE7IkIDKXWmgX69XNXnsJsJSqHTyBAe7lDWK8RZAz3w6FMAgL4HzwIA
      hgZdotSEuoLEx343EhIVv2uITIsZve1OsX9Ieuy3Fjc7pKsPdQJJj/2+XOyMHcrkz38Pt4y3
      O8X+JEIDZcKL71xd9Q45/P6Qc8A8v7DgPvz46aNDwitDnU+EBkrFIpVmY2N5Mc8RdCKFkjjb
      gOeF9QoRxnirZ7hPRtuHxy1qmVqr06g0GjXc66JXiPAOpDa7v/isGwAAjh0VXg3qLlKO8akt
      JShLVPyOoFo7QnTJ+dHdRsrt2XESoY0S1t87uAu9ZIS+shzLIhjGcxxAUa7ZxAmCbTYxguyo
      Y7/hGC8dYTvV8+x/f+ebR1/4u+mfvTRw5FA4FDdp1JvRiGvq0TP3DYsVEepkghrIf+3dSAWA
      d16LlRgDR2ppfDMaJ+UUD4/97hmCGshz9NEv4SrCOclFlppqnT+XPnn/yWBg3QyP/e4ZghoI
      xfDhI/cDAIDhBABg1DMMAJicnBQjGNQdJD32O9Uhx34jMi2CEe1OsT9Jeuw3xzN1Cet/FkSm
      Q2WaNgboBcKmsBabzRU1GlWhUFSr1aVinpKr2XqFVmo64dhv6v6/oY680MYAvUDYTvW57Xff
      PO+YPFaIrraovlQqc98B1/RSaOLoqQk33DquJwi6mCrTWqZ8rkaTT8S2TeY+o4a+fOl3DZ4P
      haJi5YM6nMCd6jf9SUaFVsi+ASVFohh+7JEzdp3S7YLnhfUKoVvcPf20GwBw+AgAAIyMjAIA
      gG9EhFxQl5D62G+5RMX3BMEQFGtngB4g5bHfjRJXvkcbTGHGIYTsljPq9xURGqjFMtHYtslq
      4+tlDqeKmVSf2UYTKBu/d8d+y5//Pm4ZuzfPBf0hERooGbj16/dmDt7/eOiDV3Xe8Wq9qtQW
      znxuQnhlqPOJcW98ndEbDf5bl1M1Lr4ZVer1jXJVeFmoK4jwDmSwe/RJxvfQGbqWyAM6tr4y
      duyQ8LJQVxChgeQ666OPWQEAAKj0AHjsA7f/HEExQNyjKQxBRHgrhe4C3KEMEkTCMb5VyTST
      t6SrDwDAnSfg7RbtJcYY36ytrAUdg65IYF1jGihlEgOeEQWJcYmVmsRjvPKrP4cN1F4iLB1q
      5UI5HT7/3oWrM36MZxLBpZurW8LLQl1BhAYicGxmMeQbcgy5jJevLbpG3Nk4bKBeIUIDVUpF
      h8dL0koUIEcO+qLx8olj8JfCvUKENZDO6jlr9QAAPC4nAMD58RhP0IjaKrz+buC10naDYzwk
      iJRjfHGbCb8vXX0AADFyBiHhVjLtJPDWZj4aCRsN+oWFFY9vJLS2ah/ybQXXnL4ptQzn0hv1
      S/8hVtBPhbtOwgZqL0GL6Hxs7Qc/eaVYKhNc/u1z71y9fuP9N9+I5PMXPpgVKx/U4QQ1kNY2
      fHzcifLsBzcD4y691eXOZ9IIggDJ1lVQpxH0EYYgyOTUYdDixid8KovX2orcd+LP44E119gB
      sfJBHU7oItrhGgQAPGx1AQBcA1YAgKnv+O3/hNAqzDwqsP5ngDtHtRsc4yFBpBzj85HGyk3p
      6gMAyKnnEAp+l76dBDVQs5q7cmN58sDI/Pyi0+3d2gwNeocDq4sO32GrXsllNxtXfyhW0E9F
      jJ6FDdReghqoxSPNQnRmtr4RLemolVimur72ZrmaL5NWqx7uVN8TBI3xTK1i7rdEtgqTHv1a
      skmzVbZZ7fcMFZJpsfJBHU7QO5BcrW1i2mc/f2hjPfj4I4c2A8GHnvCE1lYGvHBL1F4h4RSW
      W7tCrf6vRMVvox/7R1SmlfQpoN3BMR4SRNjFVLYRDMd0OnUqndUZzEw5rzFZ+XqBVBooHHCZ
      QH3molhBMdtBwvOgWNUgsQjboayYjm4srCndaGIupjXHk4UxX/63b/zq2b9/0akBrcIWM/tL
      sYKSAIEN1IEETWGUTL68tjk+bMkxMo+RQkk8kqwcnYL7A/UQQe9AhXTS4hpC6vXhyQP9bqMj
      M20d9qFFubozdveF7gEJF9HpeBAtxvbyyBbH8QBg2G5fcEYVBlRjBQAwDEOSe+rQvT+S53mW
      ZQliT3tJ771sq9XiOE70snf0SIIgEASRLkBHTGGNRoPneZre0y2Cey+790dyHFer1ZRKpbhl
      WZZtNBoKxZ4utkjxc5VKJaVSuccGursAEl5Mlcn2+mVTHL+DGHsvu/dHoii6x/a907IURYle
      du+P3PsPddcBJNzUgiCIZDSwForxAGTi4eWNyB+/1zHVwuzcQrMFWkxlbm6h1mztXI+PbKyE
      4mmCIADgEonULk+djAbWgjGcIMrZxEogust7LNeszc/OlhsshvLLc3MVZpcAgG8xyVSeIIhU
      LLi6a1kAQD6dZAGKtJi5mdkKw+3yyFI2VWV5giCYaiFbrO3yyHqlUKg0CAKPh/2xVGG3qDyf
      TKZu11xc9nOtncPy7OriXKpQJXA0sLIQTxd3KVtMxxdWAhhBlLOJ+WU/1+Kl3RVlfmUjvDRd
      Y8Hs8trW8mz5j17GtaWFRjm1HMpUK1WtnJtb2XHN1GIqq5Hk/PQNAEB4Zf79q7t9UWR+JRBe
      nq6y/PXr1zKJBLvzq5cILpWY6vRskMluzszNzW0kdikbWb5+6eYaAGBuxR9Zmqns3GxMLf/W
      q2+UmqBeKZlN9LWbGzs9kufr7/zylVStBfjWzQu/WQwnd37+5vV3f7Mez7PV/K2F5WRyt/+F
      ConNX5+/BADwL8zOz81lasxOj2TrFbWh79aNGaaU2Uznp2/sth9Gtck3E6tbFb7S4FrpzXip
      IW0DYThBEgQAAMVx8tPWkgiKUhSFIohMLk/lWwdGbbtUwwmSxHEA2OXVjXI+w3I79gWG4yRB
      IICv1jkmHy/v+OoBgKAURWEIUsgkXZOTlVRmlwAOj4dCUQAAht2uvyNSpnXaTAAAWqGMRkvH
      j3h2fH6E9gzZAQDVTCSSrWXSu1yHJjzeQQQAjmsCnI6FQ7tE1ZpsRrUMAFCoNdxWTbG84wlu
      GKXIbyenDk8BAHCCJLDdWkJOIKDP3S9HFDTGqfutagp78cUXd/kLAuFclZMZabzVJ8drlM5l
      0X/iRVcr5Ztb+cEBQ3IrmswVlVqDSvbpgwCC4mwprTI7kRY3efiIQavu0+14KhnO1TiZkcZ5
      m1FdJ3SDVsNO60iZQhULR4c8NlRpzG/FfZMTCnq3BRmKUxzX0NJoU6Z3mD/54/y/R6KoXE5s
      RyLbmbxcpdMod1yOICiqVMkanGxqfEinN6jkOy9cEISW0U0elyMN/YBHr91t1Y9iOM9zJr02
      XeaH3XYc+/SwTCW3srGJYRgmU7VKGZPL26feadXPB9eW8+Uqhssyic1csaq3WCWcwqBeAL+U
      3k6ZrVCTMln6PrkRINuobERSI0Ouj/8ksZ0zW3S1QroC5FgtNbPoVxgHjh8YAYCLRLbtdhvg
      auF40Wk35/KFf/nmd2//ra+88MzUhLT3NcAGahueb61thBEqFw8BDGkVsqliHX3s7BkaA4nw
      +upGXk1ULl3322zGVLaqQcDlWllOMOTA0dOH3cqFjeFx98V33+Jx0h/OHR/vj2YKJNXvtJsx
      DLP1mzEMO3P6lM0q+ZlJsIHaplnJxLbSTDM55LFlmjxT42iUa3IcjYKV1SCJ8csbKA5q5QZg
      CvkcR5BqtsmTht+fHsFxtQaQc9W8QSuLRreSxdKAo/+j0gigaWp05F58qxg2UPsg5Jk/+QLN
      FStNwKIy/9U3F5PoRKmg0qoOnnq0TyNPpRLxuG5wsD9sMpp1mnQq0W+31hkEADA0NakkVGNu
      C6I6xFayzXp1TKaSydUAgEaDmVtY+a/vf/Pe/BD/B6NvqhSDUJ6sAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Possession' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAW8klEQVR4nO3deXRc1X0H8N996+z7jEaakUbWYlmWJWGbnbIV
      CEtCEyAJSdqkJUkDJF1Oc05Pl5y2nOa/Nif5q+QkJZAmlK1sDmCDMXjBeJU32dq3Ga2zaGY0
      +7x5y+0fIvQEKLE810/j8f38ZeThfe8RP+7ce9999yGMMVDUhWLWuwHUpY0WEFUVWkBUVWgB
      UVWhBURVhRYQVRVaQFRVaAFRVaEFRFWFFhBVFe7DP+VyOUVRLl6SLMs8z1+861PrAul2LywV
      HjLN79cni9IN9/s/shalTPzcVKy7reHM0ARndG7vb5udW25rDQKAlo9XTj1PNo5ad4THQO+9
      +ZtMeu79sUzIicZm4++/8dyzO98nG0HVFMIF1N3Xl1xYXMllz56buvEPrtx63Y0+i0g2gqop
      hAtILhXKjHXbphaJNfnsZpvNYbWYyUZQNUXHQXR01laJ6ZNF6YbwIPpTIM7AmJp1i6P0oV8B
      qdGh/N7HdIuj9EFXoqmqEOuBopHxVMXQ1mQdm451dbXPTw7zrmazuhKOrmzq3WYRSOVQtYVU
      AcnRRG703MGznGb3NCzEFxcjEQVNBs355v5bRf2+Jym9kfoK4z0maS7PIlnzNTjzuQLD8QxW
      THbX6NG3J2IFQilUzSHUOaj5Ha+82dhza4endPrMzNbtVwyeHOCtbqQUZUa0GXkAYBt7LA+9
      RCaOqhk6rgMtRazSoj5ZlG70G55oyekSncbXHTqNp6pCC4iqCrECis9Pj88sSMXM8OikJMvh
      8eFYupCKRgbPnivIpEKomkNsHWhuITExMjwoYIPdvZQtmQvz505FmphEoPcmfrVKGRZEK6E4
      qlaQKiC+0QHvZKHVIge63fMF7qqezqHZ07zHeu7IHtHx1U1+M9vYa/vO64TiqFpBbB3oped3
      +LbctsFdPHFqatvVrjffPSqY3CwUNIY3iRwA4Hxcmt5FJo6qGfqtAy2f2yvQaXzdobMwqiq0
      gKiq0AKiqkLsVoamSIl0wWMXp8NLfr97bn6JFSwdbf54ItvY4AEAJFrYpj5ScVSNIDWIVnY/
      94sRpflaTyEt+jdsaMfLI/vGpF5Xev8M94/ffRAA0um00+kkkUXVEFI9ENp8zQ3RY7OxaDQj
      lHlboxZZvO32z7vUpaHEyOontPRs6fjjhOKoWkGqgFiPx8ky8xs3bTw8siSweL4E1zqtVq3M
      sezqJ3AxJY/tJhRH1Qq6DkRVhc7CqKrQAqKqouOTqWYP3/t53eIofRAbA60kFnMK73caF+IZ
      v8c6vxhneJPbymUlJtjoQXQaX6eI7QcaHZ2cnpo2mxmVM3lC/S45vG+0fMNm16mBc3/0rYc9
      AmjxsfxbTxCKo2oFsf1A7UHb/oFKSMVd29rmCpVKLPaZu77Q6cQTY+PFQgUEAcslLTFBKI6q
      FYQG0Wr+6Sd/7Qq0hlo8x06MNzc4YnnFbxcP7Hk7X1YAITIpVO0hNAb69KsghOg6UJ0i9BWG
      aCdzmdJvJTqdTjvsNn2yKN3oenAGYlg94ygdEC6gTDKWKUgWhxuXs5zZZTOy6UzR5bQBgLp4
      JvvMD8nGUeuOcAEpcvnQ7t/4urcuRBZUZOrxlvaM43/47oMAABiDdhFfpUCtC8L3wmw2syQ0
      9Pk43t8m51PNnZvd9Jzouka4gEqJMOdps3gby+FBgyvgb/DR2Vl9IzwLw5qqYsQySFFkxHAc
      gxRV5TgOAJZHDxsG6I7EeqPrNJ7eTK0/Oh4wlVksn3tGtzhKH/oVEM7HK6df0C2O0gexAipk
      UiWNE5GcL1VMVgeSi5g32Ux8Nl+22yykUqhaQ2w/0MnjAzNzi9uuv+bMvt3+3qvjswsuf8gH
      c2+NyH//6IOEUqiaQ+yc6C3dLdF0qdHnVoz+fi+aTa4szC94mtucJroOVM9InQ9UePqJJ339
      98ipGc7TZvX5g/aZoqo0BZoYFF79CDI6uPabycRRNYPUfiCtUChqgIwGQcVI4FipXAKWN/Bs
      uaIYRAHoNL5O6bcOlJwcMAw9p08WpRsdp/HlnDp7XLc4Sh/0wUKqKoR7IE2VM9mCxWarFHOY
      M/Aglypgt1nojtd6RbiAzh3cNZ5mOzqCw2dHHd5gcWk4lavc/fVHm620q6tPhAsoPBMu8O54
      uDyXylXwsoNlZGBYrAEwjM0vXv1nZOOodUe4gFpCoXKiXDE4g061UMxJIlgNbEFSADhk9Yst
      D5GNo9Yd4Wm8psjZfNFitUrFHHBGDiolGexWC0KwPHJQPPwTgllULSDcAzEc73DYAYCz2gEA
      QBCNv/07VcaFZbJx1LqjY1uqKrSAqKoQ+wrDmlqRVYFnCkXJIPKlsoQYVuCYiorNRiNdB6pX
      pAbR6rHdLx2NW28NqWejSs+WnnTkzNGpSqstn8zK937j0aCVSS2GrcUwiSyqhpDqgTSzu9Ga
      yk1PTVcETxmZWEW587O3Rw69poLKAAYAZLBwru2E4qhaQe6Aqc4NJyYHg83NckZdWUknkuXP
      ea3jCnKa2VypAlajung2R493qTeI2DqQpimFgmQycMl0zulylktFs8UiFbJ5CbtdDgbR84Hq
      EiI2iGYYzmrlAMDnEwGAt1oBwGixG+mG+rpGp/FUVWgBUVUhvaUVY0VVWZbFWMMYsQySFYXj
      eQSQTkRtXIVkFlUDCN8LS86P/OyZNx9+9Nv7X/i5oe+Bm1q1f//pjr/7l++bAEBTcGmFbByl
      P9bbifgPb3CSLiBJBp/LqWkVu9Mnq/KB98/YrYKmYWCQmpgo0lnYpc/81adYT9uH/0h4DNTU
      1ukwcpzg6GhvBKz6fD4pn15eKZJNoWoH8acyuDs+d6/FwJq7rnNhwWrq7ujutbnMpFOoWkG8
      gJDd4QAA1mgRAADA4XKRjqBqiM6ve/qCbnHURYIMv3PYNz2hjKoKuf1An1SICFZvxCMEgAvJ
      yvwBUnGU/hh3G9fU+5EfEjsfaPerr0SWi39461Uvvrz74b/4y6UTrx1YdHz9ttYfPf7K3/7z
      900A2spced+PCcVR60Dof+DjBUTsfKCOkFtmLXa7s8FlX5449vp7Q/Hw5H8/83KplI4lC4RS
      qJpD6nyg/N79A/7uG4w2V3NTQ0PXNX8dbNpzNnXPzVt3vfpKo8tEJoWqPfS98dT5EvofMNz0
      Vx/5oX7TeMYRNNzyN7rFUcQx7raP/5BO46mq6HjQ+Mp86cwvdYujyGLsAXHrlz/+c2IFNDc+
      mMaOdp9wcjjSv7U/PHyiJHjb3UwkDdu2dCAAXFiWz75KKo7SGdvY+4kFRGoaL2eKlZOH9i/E
      kqIc33Po5PEzUyG/c8+7R+MjByeS9DVhdYvYOlB3T7cZVN5iOnR0pLPV29LSvOPFV8sqWMxc
      uUwLqG4RKiCt/NZrb6g2z9TxA6wnwCqVdDLqbm5vb7JEsqZWLz1rvG7pOAuLzVuVpD5ZFHFI
      MLPejo//XMe3NjMcMtFpfM1h7E2IufAy0K+A1NhIga5E1x7LQy8ii/eC/3X6XBhVFWI90ML0
      8LJk6Gw0nxqabO3akpkfKwvurV2BmbnlttYgqRSq1hBbB0pm5NGje48c2pfUbBaufPjkWJPP
      +d4bzz27831CEVQtIrYOZOcyswXB6fCy6fF9A8ONDb7XXt3Vc92NPvre+LpGbD/Qrp17g5tv
      UdVSpiBvCNjnJsZsXr/T5rBaPnimh23qtf75a2TiKILEqs5P0W8dKLUUthYi+mRRH4EsHs7f
      czGurOPd+ORMiU7j1wnXfhN3zw8vxpXpNJ6qCi0gqirECkiVS3MLsXJ2+fTgSLkijw+dOjse
      waoUmVsiFUHVIHLPhb3w1Dhu/dJ1LeGh4yWWHzl27q7P3XNw1/MHZsUffPdBAACWR2YPoThq
      bT7yPDJBpAqI2XrjrYnDM01t3S2zU4lkzO10vr7jrfvvvX40dW71E6y/x/rNlwjFUbWCVAGx
      DqfDaBBHj+8dWshv7AlFFmctLo/T4TAZDaufwLmoNL6DUBx1XtiW7VzjR58lJYs+F1bPxOsf
      Frd/7aJG0FkYVRVaQFRVaAFRVSF8K0OR8uOT86H2DYm5KaMnJFRSSxm1q7OVRYAMVrb5KrJx
      1KdjbI0XO4LwIPrwzucyxoDfrJ2ey2r58lV9rVNDpzZ95k83+UT6aHNdItwDLccTeaOm+duc
      SBqKxT3u7l1L5ZtsPABoqXDxCH1rM0mG677DONZ5tyfhAurq6T40vGgxG6LzhU1btrz10kvO
      YD9WNAAGl1aUyf1k4y5zeOtX1rsJpAto41W3b1wd51x5BQDAPTeTvT5Va+gsjKoKLSCqKjoe
      NG7xCVd8wvkg1AVDZvd6N4HcNF5TpES60OB1pmMxweFKLoQrnNVrxPG81t4aZBA9oaw+keqB
      lD0v/nJEaX70vqv+8yf/cdf3vn3yvWO333Hbm7veKJVl4cFHQnZGjY3m33icUBwFAGC86zHW
      076+bSBVQGjzNTdEj80e3Pka53ImEzGR497Y+a7HxFZAA00BEEApa+lZQnEUAAAo0nq3gNgg
      mvV4nCzDXHHzXZ1+u8iLLIsFo5FBgBCDEKEQqvbQ/UCXMPOXfsr6N69vG3Q8HwghYFj94i4H
      NdC303Oiqaro2AMBYE3VM64OIYRQba39Ei4guZSNLMTdDYFyJmawN3BybkVigo0eBKAunM49
      /RjZuMsN4+uyPPjz9W7F7yBcQJHB94alwJV45K2TYZBUE+Q5nlHv/uNWh65dHaUbwv1hoaSl
      Z04PLpbNWFqYX3B6bMvxaCyZJ5tC1Q7CBSQajRzD8KKINLljS5+RRQZ7oK3xYj0WSa07wrOw
      T74aQgggOXZEPPkEwazLEOMKme78p/Vuxe+g03iqKvR1T5cSxtpwsZ80XSv9Coi+7ql6jK+r
      bgtIU+VMvmwRUSyVb2jwriSirMkp4tJKCTc2eJj1X3OnLgpi+4H27/j1YNF//5W+g0dPt2y5
      YvjUoIosLj6TL8m3ffWRkK221k8pUoj9d23t2erkoXnj1lCDXS5XQKswPC9ybFljWEzvYNQt
      Uj0Q19johdNLYyf3h5dLXlHCrKApFRlpIocqigYAyOTkuz5DKO4yhS7+o8prRWwaj7Gmqphh
      QFZUnudVWUYsi7CmasDzPKJ7ouuUfutAyYnjhsFf6ZNVPxjOfF9NPw+u4zReyquLg7rF1Ykq
      XgWnDzo5oqpCrMALmVRJ49wOaymXYwQunc4wnGg1skUZuZ02ugxUr4i9L+zk8YGdr768lEr8
      /Ec/noin5sYGntmx99yZEy8/+2yqQiiEqj2keiB+S3fL4cGpwf1vM3ZXBcRiJnfn3Z/t9jDT
      U5FySQaBZ+xN4vUPE4q7bNTYBtaPI/W+sMLTTzzp67+nbZMnHXu3lM8urFS2uUyH3ntbUdUP
      1oEsPrG5tu7jUNUjNI3HWqFQ1ACZTCZNqTAcr8iyIAhKRapoYDIaEMDy8AHx4L8RyLqssLz1
      W6+sdyM+DaEeCDFmywcvvmMFEQBYUQQAXjTwH35GU7GUIxN3+aDTeKq+0QKiqkKsh8SaWirL
      BpHNZAsWm61SzGHOwINcrGCHzVoDz+BSFwWpe2HqoZ3PD6SctzTL42m2oyM4fHbU4Qt5+Oz4
      xMz19z3U5hJSSxGrtEgi67KC+NZr17sNn4ZUD6S5Ahvs2XR4Jlzg3fFweS6Vk1Hq5jv7Dx05
      YxRYAECCibV1Eoq7XCCjY72b8HsQW0hs3dB8bDTdEgqVE+WKwRl0qsXiyou/+oUpdKWZBQBQ
      l87l6fEua2T+2lOsu229W/FpiI2BREvjF+/1GAS2NV+0WK1SMQecQasUZRWMAh2q1y1iBYQY
      1mRiAcDhsAMAZ7UDABhFUtenahPtG6iq0AKiqkJyT7QkVURRrFQqPM9LpSIjGBmtUq6oJrOF
      ZSC9HLMLOm2frRvI7EYs//s/t36IjYFSkTM//Z9j33jg+v96/u1HvvMnR995M8EFAnie8XZd
      c+21VgGwImnFGKm4ywRrsMHlUEBYzr1z4IzDLlY0PuhzcUbXDTdsf/XATLZSLuQnV/q2WgVR
      W54q0mn8GtX+NJ7MGEhTtA0drYV0yupvsYqsnIsNDM8ppUJTa7tNUPJl+mBh3SL3WA/WcvmC
      2WIp5vNGkymbTnImO6uWChVwuxwMoudEX4ja74H0ey4sPjuBogQe61EUheOq/eYlchFS11FV
      FTHMJx7oz4WuAcGsZ2PWepFL74ApItepqcYUCgWe5wVBqIXGrPUi+q0DEfk/ntR1aqoxLMsi
      Evtd1uU3o18PRNUl9rHHHtMtLDI0cODYGZsvaGGl/e++OxXNhVoaz7MPXJoc3Hd4QLA3Ok3w
      /p49kWQpGGhYa/+JsTZx+kiWdTjN4vjpw4dODLsDLSZhzW/w0JTykQMHHYFWEUnv79kTSZaD
      Ad+aG6PKJ4/sPzs229TSquWX3nrznQw2B7z2tTYmMnrq6IlBwd5gN8LBPXtmU+XA2htTzsb2
      vnOgxNl9TvPYqUOHT454As3n85vR9VbG4PRSX8g0M79STC6q9mB5cap03hP8sxNzWzc1TE0t
      KaXc+OyC0Wxm1t51ampxbmJqOVcBgLG5eJebm41n13wVgFw6FZmZkTT4bWNMF9AYQGxX3zVe
      lElJsBwebtjUOzM2dQGNcQc7tnX55xeTSjF7wb8ZTrQG3Hx4IQEA4/OJTieaWz6v0711LSCB
      YzXM8jzDsCwAMBx//kff8RynYsTzLBKs93/5K4XJE4m1v22N5Swtzb7VTI7jNGB47kJ+A3Zv
      k8tqAIDVxuQvqDGAIBMLM4G+oBk4nseqxvEXtOgs5yeXlO1bQki0PfDlr+QmBpbX3hhNlUN9
      V5ejEQDgOA4jluPO67+NrgW0fXPbWExuc+MV1mOTEs62buN552/b0jkynd7UYl5I5SfPDvDB
      HvcFbRWx+1t8Nn5+Mdrf2RIpsK2+NX9lrGpp32iQV1YbI1xQYzRFGhkZSyyGZ+ajpkBPbnai
      u7dr7Q3RpkeG0tnkwmxktTFisMe19sZgTR44PNCz7Yr5pWhfR/NsiW/1nNfx8HQQTVWl1p9b
      owAAMNYwRgh94mxf01SMASHmfF4uijHGGJiPDx0w1rC2ep3Vv8UY4/8ndCWTPXzs5OqfaQFd
      AjBoO559asstX/SYsMXA5iScz65Y7V6n3QQAL/76Z87GtrQk3H1jX7qoeW380nKhqcGxtLTs
      DwZWYguiwweldAkbGbXMi+JiPNXisRSxwcBUcoWKPxAQOQa0ygtPPWlvbsuVubtu6U+kilLs
      7FTe3tUWMrDY5HDzci5TVBsCAZGFbDa3972jq22jBXQJkNNhR+iK2emZpBzTMFrMFwIe2+JY
      5oE7+lY/oGoqArTvnXeMPHNcklNFZnOrfXA83re55dDh06Ld42FLom+DxCpeg60sJSeHGJ5X
      U7Gov8Wb1CzbNjgBAGOsairHGTLJ6L7X97uDljLI46cX0pxdkBGvrvBSse/+h0JmwBhUVQGA
      73/vW3RH4iXgzKnRspRZDI+5g03nYtIGO4cxBk3J5osAAEbnbXfc/aV7b2URaBh7m7uczEqB
      82xwspFotrP3yuuv7N3c27MyHw402GfCYYAPvp9YxhgKeVVFW00xOfxXb90sCNzAkeN2l100
      GDFgAOQNthgAA/zfYNlgEDvbN9x1+81Wq4UOoi8B2WzGZrNLhYzKGqSKLCWm3ti9f+MN9/W3
      e2xmYzqdcjicCKFiNpksaD67uJTI+htc8WjC09iYXY6KNi8jZfIqz2KZN5hZBpBcLGqikdUM
      RiEyOTYbTTEc39ndH2hw5FbSWFWKsmYzG/JFySQKIBqwVBk+vufEeObrj3zTwcHY5PQP/vVH
      L/7qcQD4X6qkrXSN3fd1AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Intake' width='192'>
      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
      ek9ijUuQqREAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Robot Job' width='191'>
      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
    </thumbnail>
    <thumbnail height='192' name='Catch/Truss' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dead!/Fouls' width='192'>
      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
      7p/ZAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Tele Accuracy' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nO2dd3Rc133nf/f16QPMoPdeCIAgCYBVbBItUc0W
      LVuxY8uJfVyTtVNPsjlnz3o3u5t1vHGyzklbx/KurC6ZKqYlWqJEURQLSKL3jhkMMAWY3l+7
      +wckkmicGYAoJN/nL2De+93ffW++c9v7vd9FGGNQUFgtxGZXQOHOhlqFjSiKPM/f9qoo3Ims
      RkCRSESlUqVkIggCTdPraiJJEkKIIFJoUzegVhvgYhUmoiiSJIkQWruL1QgIAFK9QozxepvM
      qyclAW1ArTbAxepMKIpKSUAruVDGQAprQhGQwppILCAsy3Gel2UpHo8rc36FRSQeA410XWob
      tGVlGz2zgboDD1bn6jegWgp3CokFJMmyTqsOB6O1FSWBSDQQgGg0ynFcSm4kSUp15p+qiSzL
      CKGUBoYbUKsNcLEKE1mWU+1MVnKRWEA6Qxrr4QsKssfHp5ortuu1NAAwDJOSe57n19tEFMVU
      Z2EbUKsNcLGSCcYY4iEsxRGtRrQKbvppCYKQ6ixspVolFlB+eV1+eR0AVFdvS96fwuaCxbgw
      dEaa6cJCFKmMdOl9ZEETSuXXlSSrXAdS2MpgjIWRD8TxjwEwAODQLN93imHUVE7dbfelTOPv
      RsS4NNU2r55PkHjRenU9XCkCuhvBEuYjiz+LBdbDlSKguxGSQdqMRZ8Rxvz1cKUI6G6EoOjK
      +4G8MWlC6nS6ZP96uFIG0XchCCEyp56lVaLlCo75CX0OVbKf0C1uk24LSgt0d+KZHj3T5x6U
      C952FfpKHxp3BgFSWPVJHkVAdyX41ZOnwiPXhJwaPuQOOyZ+9I//vk6eFAHdnTQ3Vg9Pz0mu
      YVXRrpLy2oq8tHVypIyB7k4yMrPqDhwry84r1GQCwJEjR9bJkSKguxJUWL2zsPrG/83Nzevk
      SenCFNaEIiCFNaEISGFNJB4DOSzDo1OuwuJih91V39ioohXNKdwgsRqyiyrVNDEzMUDJsQGb
      ewPqpHAHkbgFkqOzcdpkpMSYTCCEAoGAEtK6pVyswmRDQ1olma4oL9QSGd39k/X5JhWFQAlp
      3UouVmGyoSGttMZoBgBQtbSkJ+9P4R5BGRErrAlFQAprQhGQwppQBKSwJhQBKawJRUAKa0IR
      kMKaUASksCYUASmsCUVACmtCEdA9BsZYEoCPYFm6LeUpMdH3EBhjydEnDH8gx/ykNpOuPU4Y
      C1J6pLoURUD3ENg/zXe8AhKPZVmKh3Dbi9yB7wKrOffGL1HZwZn297S5pbzbYQ2IBtlPZdV9
      9cQDCctMIskmxqIoyrIsCKKSZPOORrT3gnQjpgdHvZJ7HGSJxILN1tPe54qJTG2Red+h+1wu
      r8fjSebLTtwCWQY7Rh1hHR232tz1h45X5yhJNu9clkgCA5BMRprBTuRkpw9YLFYIEI/Uad6n
      NfFIQAYgE5WIEjYql99/y+4XMKDqksKQrqA6UxWNRtPSUnvTUZIkkkxYmTWZrC4icb1rtQEu
      kjfBgRnh8s9AEjDGCCGkMtJ7vw2sDgBjQCDLgAgAjBDCsgyIuPleruQisYBc1pGOgYmCgpyJ
      CVvLofsztEwgENDrU2uHlIjErWCCMZacA+LwGSniJ/VZdM1xwpif5E9uJReJBbQURUBbykVK
      JhhjkEUxHiFZNUFQkHSDvfqQVoW7CYQQkDTQapSKem6BspCosCYUASmsCaULuyfBWA46QYoT
      2kxEcWvpyxQB3XNgLMuj7wuWyyCLhD6H2fEUsSSla/IoXdg9Bw44xLGPsBADWZJ9NmH03FpK
      U1qgLQvGfES0dYIQJbNrCX3ObZk0AQCO+jGWr5eFI961lKYIaIuChXi89ReyzwYAwsQFtvlp
      0lRyW0pGxjzE6iAenP+PzKpaS2lKF7ZFkd3j8+oBABCiovXK7SqZYHX0jt8hM6sJYz5d9QBV
      tGctpSkt0JZl4ROC2xEHgbFsGR1k0wti3hhV9CjDewQug7BZglhVVbLKjRAUAW1RCFMpYciX
      /TYAAJqjCm9DlkxZDE/PuK+c/rUY5kRSZHhfXJ2FvPYjn//a6uu59moprAeI4piWp+mah6ny
      w+zurxOm0rWXSVAao0rce/iIzpinBh9S5WiR/MDnnjj37jviqstce7UUbjtC1N/eM+SwTb4z
      QXbNwvNvXZwNha61d62xWCnm+fBid8BHFprDVbsfqys1ldRu981Yane2rLonUrqwrch477U3
      zw3nED46s+rhLz8yan09PDP04smzTTu3r6VYSmX+gz/6AQAIQgNFUQi1rL2qiVug2cnBM+cu
      TYz0njr1tsMfX7tLhYSUVjcYVGRI5oi5ybG+C8aaAyVVtVn61NIKbgyJW6BAKCgLsYkJT2le
      ltXl1RCaWCymUqlSciNJkiAI62oiy/J8UOKWqtXqXBCU6tiRQ2aO77BE0gyZzekmQUAPPXR0
      paJWUav5oMSUTJZ1kTigzGEdGRwaEYCKhqO1++4vNauDwWCqAWWCINA0va4mkiQhhFIKKNuA
      Wm2Ai1WYiKJIkmRKAlrJReIWKDOvWGfK4zgmFour1GoCoVRDj+fZAJNVVGxjarXeLlZhcrvu
      VWIBESSt0dAAoNEoI26FxSjTeIU1oQhIYU0oAlJYE4qAFNaEIiCFNaEISGFNKAJSWBOKgBTW
      hCIghTWhCEhhTSwUEJbH+rt6B0ZiorxJ9VG4w1j4eEsMD46OgQicKb88M7WADYV7k4UCwigt
      M8+cmVuaoahHISkWdmEEOdl75fSZs77IgtChWce03zN75Wp7VFC6NoUFLBoDCTnV+04cqJgL
      3YjSjwfn3j79247ODkpStv1WWMzCLozSZqj4AYd0uPpG+O3k6DCWBH+YN+iUbb+Vbb8Xs1BA
      QsjNq2py4pNzsYpPB9FVO/aZcosohh0esSjbft/pORLnWa9tv3mJMHGxK6OhRysXNDDmrDwA
      aGkxJ+9P4R5hwe+1u6tbEsQ8M2v1xDarQgp3FgsEpOVIRxgowEZNam8FKNyzLOjCqht3V29W
      RRTuTBYOomX+8kfneEKzranFpFbewVBIzMI5iyz5/J7JCUuMVxYMFZJiQTNjnRzXmfN1GaSG
      vj3p+BTueha0QIVFBX6vO+aZdQZTe51b4Z5l0Uq0rr66bCaAy5RH8QrJsaAFuvDx2TiwJoOa
      Vx6aKiTHghaIYdU6nQ4AkaQyBlJIigUCam5ZU8ZXhXuQRQFlciAQiIV8ImfONWk3qUoKdxIL
      14GE0AcfXhjqbT/90W1La61wd7NoFqYuzTMHeakhJ/36ZxjLsowJAkmSnGpaK4W7nsVdGEFT
      QjhWU1Z2/TOHZfhSW39Wpn562t2gbPt9N4IlAccCiNEgOuU8nosfeEmSxLIceVPPllNcnjM6
      5nQH66rKAuFoIABKROKWcrEKkwURiTG/2H0S+6eQykjWfx4Z8lJysUBAjmlrLBKLklote+Nz
      ++RojNBWV6WPjduaDzbodQwoEYlbycUqTG6OSBQmu8E7gQAgPAeTH9NNX1n2R5hURKJGpycI
      B5IFXpRVzCe7zOcUV+cUVwNAdU198lVU2CywLOLQLBA00qQjlPjnhCVh2b+TZIGAdGmZzfsy
      +FgUCGWkfEeCJYHvPinN9AJB0BVHqbL7EmqIymuUnAM4NIcYNV2yL1WPS4N+EMOpUy1FYYsg
      +2zSdBdgGWQQxs9TBTuB1d3aBOmyuN1fl0MupDIijTnVWbYSNXbPwr/x/IvTYaSnwo4o25iv
      HZiVi9RhKa3i8QcPUUmPJJXsHJsMxljyWOLtL/Hdr8thD2Dss4+99qu3pqfGXnj+ld6+rhee
      e/bS1Y7XX3/LG048zyKM+WTediBooFi67CAwmpXPZR498YRZDwEhTR3z7TlycHbahmnabrMK
      UgqP0hUBbTbxULz1F9J0p2hp5dtfxLIgAleXS/70pz/PSCe63dpcPas1pIXt/V0TiV8LRiTN
      NH6BO/iH3KEfUKW3HABJkb/94X+OkJms7HBj9tr5iyqGplUqn3tOkFMQkNKFbTJyYAbET16i
      koMOzEcoiPXPcZ89UBWQJJYlp4NQp6PSDh98b3TicF3OyiXh06/8ovb+p0699vIXjjS8+O7V
      I/c1f3ip+/HP/05RxnKDWlL9Vz/6BwAAOD7/wZFHAAAeeTS1+ist0CZDGHKB+mRVltBlI0bj
      np2Lh9wZDfdFec1DTZn79h0y6NUdY74nHmi6RTkzg9eudg/OecJTdoe5YmepKnCtd1QSpUA4
      vK71V1qgzYbRcnu+IUxeRBRHlR1EBFXWsLumiQGAipJSACgpUQPAY489fOtiwjE+HvJ44yhN
      TTlHerHOFAxTBQY8bHHUF2esX/UTb/e0lEAgkOp2T8pKdALmvwWEPjGhaTnsFq2tIPJkwS7C
      WABSvKen35ydNTVpNWQVcKKPSS80sUIY6dK1zLwXPhYlGFU8GlZzzJwnkJam8/mCxvQ0ask9
      Wa934xU2jYXfJRZjfMfLsm8KACTnILvvW+FoJB7xnjw93pwHHXPemf7B+n2HnBf/r+bwX57Y
      /cnTK4ZTAQCl0QBARoYJAMxm03pXXBHQ5hD12dtG5rLZcJct1lxmaB2aK8+gRl3xxx7+DAFY
      tFwRp9oQo0KMFsf8ss+myaqOhrsefPBo97nTx45U/Guvtbuz/bHduwc2+0IUAW0O1uG+D1sn
      9RGHOq/2naGLpKnc3HxoyvK2OySYRLs8+FscC+CojzAVI0aDNCa/Y6xvzM5kO4sr69Izqppr
      BlQF29OM0XJ6kwNHFQFtDiWVNZoOK4j6mG00pFZl+WbaOy+hzNpsAyM4YwBA6LPkiJfQZtHl
      hwh9Tpox/7vfrb1u/uDnfmf+j8zNqf4NFAFtDpTG9MTDD+nJ2OicWJ2j6psKaCSPPcjHBYlK
      KyRK9kmuYXpbLV1+GCh2S0WBjvW0Tse1aZLLjcyZhDfxLMw22jsw7szNM09Ozuy672i2nlVm
      Yet0PhaissciMXramA2yjAgSkpAOlkXeO0MhTOgyEZ3UG6GpzcIwloPOWO8pOrOCKm36yX//
      cUFtjcUWVkXsh778dOIWKK9sGx+LD05MluTlWZ1eDVK2/U7aROIlRz/PapCpDABOvfLy7sc+
      P9f1YURf1HXpXOPe/X2XzpfseuDAjnIAgHhQuPILOegEgsKNX8CmgrdeeKndxWuCTim9+GCh
      0Af13zlxYLELMS71viHM9AgICF0Wtf0LSJcNgC0WqwrFh52xhrKM7mH7trLMjv6pA/ftZYhP
      riL5bb9xyCVc+GfJ3iuN6eiYXSCNs+NjeQWFg/1kxD6SWEATPZc7reHyHNOYdbpmb7VGo5Zl
      maJS6/swxuttsoptv9e7VsLkx9LAaUzSTNNXSF3WxORUpXv6/Y8v5dWRoRDv9zgsNjuTM0s1
      VwOA6LTg8CxCCMsinulk8xvzssxNT+4980pPNDRc07B7fEBc6lq0XZMcfQgwAoSDTnnkfbb5
      q5bB9n967t3vPn3CM9L2q57YxJS322DMyqU6rQ37yg3zhsm/HyG4BkAWCUMuolWyfeKJB5qc
      KNcouSq3tbjHu5JogSq3m4tFTsWVVglqjbLtdyomQgwwBiyBxCN1WkGGPhwKYom3Ovx1VUUd
      ly/rs8uCfud8gYTKiEgaJAFjTGjMCEGISSsx5mvRG5qSerXWmGXil7rGQQcCjD+tFY64QRKK
      appyjWe1rKzKr9OPt++sLugani3VZCBEXC8h+XuFGA1CCLM6RBCIYit33FdFcwDbAADqK5WV
      6HWsFY75Y6PnKU5LFe9DFBMOBlmNBgtxERN+z5w+PSPkndWkZ2pYGgCwLEtT18TpDqzO4Go+
      g9ik5ufC5GWh501ZluYvnMyqYZq+Aoi4cuVKdM4yHWJ3bsvvG3W11Bd+3Db2uROPqSkEKY6B
      MB/mu06Ks6MEq6ZrHiZz6m42VAS0hQbRqzDBQpTvfkOw9xEII20W2/h5pM8FMQaIAJJZSSKp
      DqKxLPKBWUalBVa3yEqZxt9JYD4seayIURHGAkSQAIBoFdP4JBTuoZBM6LOB4sSRs6L1CpA0
      XXWMzKlfyxLAZPfHv3rvakP9ttGh3srK8gv9zoeaSt8/37r/sa8erC+YP0cR0Fbk7ZeeCepL
      VIHJMQ9UZdPD9ujXvv57RiIev/ac7LUAIqnyQ3TlA/PiQCSNDHkkwwCA5B4Xhs8AlgFA6P01
      kV6MuBX7Cjw/PgMCrdBsF9e1FF1u1ZY07qXCljBkMOL5810tB3dOWGzXBaTEA90+MMaxoDjd
      Jc2OYEkASDw2wLIsTrWJllYsizd/LGDkt1ktzrnZvr4eu90/OW4JRCT3uOy1AMYgi6LlyvUw
      tAUFRn3z6gEALMaAXzEYCGMsOwfjl/6d73hJjvqWPWei95pHIK++/cvnPhxK4zgaorqs9PNn
      LhUU5F8/R2mBbhs4Hoq3/lwOOAAQVbyH3vbofC9zC2T/NN99EmSJVZvIjPLrJel0ut6R0drG
      8qis212Zc02wFejUKMQCEAASACCKheXCVYn0EsTpcSwAAIQhH2lWfhovxvmh3+KAAwCQNoOp
      Orb0lJKGfd9q+ORFH57nDx77zNJzFAElAAtR0dIqB+xEWjFVeKuYQMk5IAcc80bidBdVeuBW
      3x8AACCVHmnMIAlInXbTx8TRR588elNo6aFjAACYLaVK9opT7YhW0bUPI2qZgTahMrJ7vyXZ
      2oFiqcImRK48GEcEIpn5RhJR7K3reQsUAQEA9H70+m+GxEYTf2UiVKAKaot27Srmfv5Wx1//
      xbf57telmW4AkKa7cMQDFcv8Uj/hpq8BkRQQie8tYvXcvu8AYEj0CALLkjh5GanTVUf+eP6l
      C4Clo2M8PTWVVVBgV1cXFhT4XNNYx6Spl990AJE0U/9ZYfIywRmowuaEVV0JZQwEAFBUVs2S
      6NCRwxAJFdXUjnS260ordATgmF+aHbl+mjTTBSu//EtmVZM5dUCxwGio8kOIS/BGHwAAYBwP
      4Jg/4YAJR33C8PvCyAeAMaK5ZedWkVnrf/1vP/F6bP/xr/8OS9F//Z//pc+xzBgoMGvrGZzw
      uKY6rUE+f99Vrz4Qibe1da0uL6bSAgEAsGpdpkn78flL5twcKRrVpKVrGC4724wIEhHUje+W
      ZG7xdBNRLLPjKRyeA5JB6rRk3kuXXUPxjlcAy0zDE2Tu9ltMuZHKSFc9gEgaVl5gVGcUNZTn
      qkwF2yvyRq+etcfAapmGUuPCs/D0jO2NX7372GPHx3quXQwG2JwdXsvrjhidUVZTaFy2y8NY
      ErB/WtYYkcq4qJLkD3/4w4TXuYh4PM6yqfWakiSRZIIR5RpNVpfeZd4FqdLXV5eXVtU276wv
      rajd3byDJpjGxm1AsiDxstcKWAaSYaqPYV3u0lpN9Vx84dXXAsjw7DM/333oM2dfe8bBlY6+
      9/wkmVWYrrnFVYhTbfLcKMgSYtRkVs185W++cCzx4+OTGq3aOmllsysdAYlk1fapcYHgNNyN
      L/u6CQLIKywkARr33b+zpjS/pNygWtxGMJzKPz5kqKjmZe7Anmbe1v3r871FOaq4tqwsaxl1
      Ylni+04J/b+R7b2kqWTRuoDSAt0KhBBVcYQwlcihWcKQSxjzZUFcelp+3Z4DXk9Uo1WrmNnx
      jgt9ljLmwlTvWG1B4NYhX1RuveQaAlki83cuK/ygc+KDU7+KkEaNhg0IbEOB5o133vHOBp/+
      1rczjMt82c379wPA/v37ASCrrG5Zp87JIZxV7h7q8MU1fh/nI81/+oOvX7zSv6N0hSG/EJUd
      /SDxOOqVZkcI44IEQoqAEoAIkjSXkeayW5wzePHXz7438M1v7zUbtKwhu6GyIMoZtlUWrpT0
      CWM54PNxWn1U4sgdv4fjYVllxkEfwWjU3IJORG0uOri3/p12NyUGCC5Lw6Kj9x/zT1veO3O2
      /GtPLlu4d3roudOdX31417OnWveWqnpnqS888YiGlCR7L2K1REZFZeP+km03HmU0NgEAlFeu
      nLuH4oj0YmmmB2g1kV64+OAt7ssWBGMZB12I0yFanUyw1cZQs/+zP97/WQCo/NZ3AeDJr/8R
      AAAcBYBlNcQH535z8pUIm20b6TnxhUfeev1jlRFFnQ4ut/HPvvelm8+Muqeujfj3NG0b6h/Y
      W6m/eLVvF5c2bXfu3LUkMOhTJFIT8TtlxhjxTMcLSmI+XyAucMFBvvNVoDnu4PdvLBlgjGH+
      Qf6t7iQiKWb7CchpoLUmpF/8amxiAWGMXXa7Vsf2DVobGrdz9GZO3GT3ePzqL0lTCdP0FYQ2
      Tf1yPPDO6bONu/f2dLRtr6s+d6nt/uOf9cyMV1ZWJjMIY3QZ+1p2vHl57EBT4/sXe4qy9WMT
      fVRaMUcvfitdl1Pxu1+pAIA9zc0AsHvvQQCA/bfK4pNuMpEI0k1mkkAqlTbiGw/GhCxWB4wK
      sfqbl3zkiFvoPYV0mXT1gyuteXptA6+dOle/s7Hj8pWGluarF1899MSXd5TceFMx8XcQ9jlP
      //bDbbXZFOb6bZ6dJZu5cypiNEhlRGrTcqsg6w6OBaSh9+WKw6FwpLG++P898zOeNDLhCWes
      BAesf/O/f/bMP/04mWrFA47LnSOVZUUOy0RtTY17qPvA8S86h3vV+UVr/3UStOrP/vj7APDn
      f/7nALDr0HEAwFjLHfwBImnE3HhPXnIOSq5B8ExQxXuQOn3Z0jo++iCImdYzH4hphrDX7nDN
      zXkjUHLjhMQC0qZl55h0JEWCTCAEm7ztN2cid38TCEoQpflF/etsQJJNHHBJU21CRiWtzbpy
      bvSpL33Z6opPz7qOmBwfjPHVhWaBFxb5X9YFoTKdeOrLAAAH9gMA7G4CANi9C8R4zDki01rQ
      pvZCYFIXQqoAAHgerifZNFWgzBqkzRBJNaxgbs7NgunxMEaqYOD8lWBunsnudPL8jY4sqV6g
      pr4+3azr65+sz09XUQRseJLNXz/3b25VYakmdqljZHvT9kvvv//k9/701//wk2/85EdZn56/
      AfFAOKMUHf4zWqP3TA8HI5FZT0Dy2e/fXn7xWvCRRypHdQ8yDL1Iwcm7wPFQvP2Xsm8Kkxy5
      84tkVs1tvBAcD4tTbYjTkrnbEUEG5mZGpv2N9dXevCMqDdff2dfYtJNbboOU+oNPFDWGNDqt
      1+1JM6WHgkGtXn/zu9JJCaigpBgAWnav+3uyK4BziorHLvUWf+Prvghu2dXo8cvB7vemfBGv
      P5Jl2MCEfCKPIx5gWFNe1dNPz28vux0APl9QDgA7duxYS9nS3JjsnQLAmA+L1qspCSghwuhZ
      cfxjQCTLaMjMqo9Ov3lhaFan/eK//N0/N+9piMfjEW3+oayQ5BwgcxsIY8GNyFeCNBgNgLFB
      ryYJwmhctCx5hzzKkASBYFWnX/rZ+FzM47AVV9bU7D66f0cVl3wqtjWDZYnvfFVo/T/xtucX
      Rl/cHhCjgU9HsihRYsNVFH/zH/6oUJNnOvnGm+FY2O4OZWeZhFg43v6yOP4x3/kqLLk6DCAN
      n8Eh19Jy74hpPNp99NHdR2/8Px/38JX/8IcbWgtZkrxWkGXZZwNJAPI274xOmEroqmOirYPU
      mKmKI7e3cLriMFIZEKslzGUA0Nzc1DY8+we//4i1t02brj/7UefjR7NRK40BgKSXnaCQJQeQ
      xrD0cyUmOunoY4wl65X4xCWmsIkq2ZfMo66kXeBIJEoREIqJejUz5w2a0/W+QCQ9PS3JdMsr
      eZke6brUN/PQ8WOWnjaJQt3dA5Xb6scnph9+5EEdt2C4hjHGAbs0N0pm1RAa8+JsIRgL0SDN
      aZbO9pVnYYldiFF/39hM2DnaPsvo88o/nuDVsu9i10RJcT6RyF0yLqaGOv7HP/4yRw/Pv3TS
      65x48bXfuGyjJ998u6DxUIYmqTuwkpcoLwuO4Qlv8NVnXzjypW/4xvoLymsHzr+hrtyfrZsX
      kPzuGy+euTZapBdePjcc9LvfujDgtfT+9nxb5bb6G2t+fDj+0T8gkElTySIXd0QXtskMXjt3
      ssOXh2cmwuykJk6Yys+NWwfs/J69u9NUt2E5qqBqZ67xTP3Olo6r3VNzwcIcs8MbKS7MDIdC
      kJmW2H5lxJDLwxUY/DZJjlnGR6JcpgqE4/e3fDRka8ytBAAA4r4jh1p/+nL4QJ3fZZ1hoz43
      nozEZ+dCU56QMe/TITPFEnk7ifTF6gFFQMlQuW2Hvv/dUMxYrIrYeKoyMNPvF+qLjJ5QLE11
      e+aAFRUVXVcuEul5zfn6zsHphtLs4UlnTvpaC/f5/FGvt+X4439R26TOMJeYM81q/nSf5sSx
      61IQWy9eVTGE1pSJAIsiZkQ+t6KKp505Nz2sRSRNVh4jl+sllTFQYhdSPDxkcaoE93iAqckk
      u6yhunx1/3T0/kMtVKIubOtvtiKJggyIIklJlgnAogwkAbIMFE3dfG0ruVAEdGe/WLg6k9uY
      I/HOWAdS2FywxIsdL0nOwaWHFAEpJAYLMdlyUXINLT2kCEghMQgwzAdgLRnwKLOwzQRjGYc9
      gGWkNSe5MrkpyGE39lplzyReskqtCGgzkT2T8WvPgSyzO75IZtcmNtgkEKsDmkXqZZ6mJysg
      jLEsywRBrCXbg8IiZN808BEAkLxTmy4gjLEsSUAQIMtAEIBlAIIgEMYYaczs5/6R1uiXfvvJ
      Cmis6+O2gZnGw8erlG2/bx9kbr3sHsOSSBXs2uy6AMaR1557eWLOV5iRZnEHmFjALWn+6Ev7
      //bFtv/1n74HrAbQMk9LkhVQNMbXV5f5P932WxAEv9+v1WpjsRhN0xhjSZJYlg2Hw3q93u/3
      63S6aDR6/RBJkvF4XK/X+3w+vV4fiUQYhplPi8kwTDQa1el0Pp/PYDCEw2GWZedD7NRq9c2H
      QqEQx3GiKAIARVHxeFyj0fj9fqPRGAwGGYYRRZEkyXlfNx9SqVQ8z8+vEs0XGwwGDQaD2+02
      Go3xeHw+YeDhXhYAAAhoSURBVKAgCCqVav5QIBDQaDSxWGw+LaEoihzHhUIhrVYbCoWuXx3D
      MIIgLHUnCMJ8wsb5+gcCAaPROF/mvDsh6pt284LXKunqt5eZL7SNQugjNruyNCd9PgPmvDuD
      wbD0Zi69z/M35OZDi24mxpim6es3c/7SOI67+ZBWqy0szpP1eeWZNK92zM7o0909P/n5C5YJ
      cXpuDnre4sr2BWXu+tXN3+dkFxLnbCOtnaPNh+7P1DHKQuJaz8fiyZ//2IYK4rOuxvuOML4r
      rWO6lgqq3cb8yTc/t1kLiTLv/Zu//vsdB/a3X77ceN+DoqvPjc1ffGj3Ox+0PXniYTE4R2vT
      0JIX/pWV6E0QkN8+8Pc//ZlfpvNza7Fg4yM+VzDzT37w5ZMn3/r+978rbr2VaDnqj3W/wWRX
      k4UtSoq7zceQU/OXf/UXo9Nh11inruR3m2vT269NjXS27j3yma05lceBGdnRJ4oxsqBp0UhI
      aYGUZ2GJwRIft3Yw6QVIn7PIamsqXmGLgIc6L82FpUtX2pE+69k3zw6NjL3y0is2d+j6GYqA
      FFYkOGt59hfPTFpnnnnx9cmu82Nz8tCVs7SaOHW27fo5ioDuXTDGGMsY45XSW431dfOS7BHY
      ynyTtrDlOw/m98xRYadNb7wRXa8Mou9dZN+UMPguoTHRNQ8tu81P4+HH8yvqGHNmEftZU6bx
      zLmJP/z9x69e7dl/8EYqD2UQfe8Oovm2FyR7DyCCafpdKnvb6lwoXdi9C5FWACSNOAOhNgGA
      zIcvXmiNxqNXLrUGQ8HLFz6anHa1Xb7o8kduUYjShd27UMX7SFMp0Kr51ByB2enhtjMTM5bO
      K53bJ0YGJ32PROf6nPLlQfv3vnYC4gFMGZeuRCsCuhfxOyf+5Zfv3FdvPttu2VFT2Nk3fuKb
      f1KhyzhyuOXv/u30/iPN7rjmqaO5v702ksFIETYXAKSJC1TJHqTLWlSU0oXdi7C6TBai9rlw
      c01+e6/lvt01Uw6PHA9c7vN89wffwnF8qKlyyOI6dvSg1mB67MHDCICsPIa0y+R7VFqgexFO
      rTHodcX5pvdaxw7uqb1wtf+L33lUk6F66ktFAFBTWQUA26qqAGB77adJQojlV66VWdi9OwtL
      4VEGxvxMH2MuXroNntKFKSSHGL++D9DNJCUgl90RCXqutXXGxJSbK4W7AIQQyqlfduuxxAIK
      eR3vvPPBwEAn4sP9U+51qJ7CHUyCQXRv+8XcqpYcs44gSIRIDJudZHNlNiDJ5ipMNsDFKkw+
      SbJ5O1wkNYi2jE+YMnS9fZMNu3aqaUIZRG8pF6swuY3vxic1jS8qLQGAPXs2M0O0wtZEmYUp
      rAlFQAprYjUr0RjjQCCQkskq0iqmaiIIAkEQKaVV3IBabYCLVZjwPE9RVErjxZVcrEZACKFU
      B9GrGHenahKNRkmSTGksuQG12gAXqzAJhUIqlSqlH9tKLlYjIJUqwQ6xm2LCMEyq7+1vQK22
      5r3iOC6l5ucWLlYzBqJpWooFOzp6omIy+7Ril8slx4MdXX1Jbusa8jh7B0ZjYV9Xz2CSJlNj
      A7P+6PTEkMWe7FJn0O2K8bGuzu5wPKm082LU39bWFgqHk71wLE8MD/jD8aHertlbxmRdZ2Zy
      5Nq1Drd7tqtnUEhumSbinx0YmYwG3T39I8k8JsAYTwz3unzhyZE+m8uXhAfscrmEiL+ndzAa
      DXV2dkf4BXvcrCZPNACMtF6OUzF7WJ1v0tz6zJDb8crbZ7loSMABL8rO0ifuYny+QGh2srV9
      TEWH4lyeSZsoJzwWnNO2noF+fxCmrWNVlRUJXWAp9tYLz3ujmKSFGT8qzFq8BcRSbP2Xh7wM
      MWuVmLg9rEl44cE567XeUYn3ecKEZXKioqw4oQuVRjs1MTo77ZRkr5DMhQN0Xb0wOD7lcXoE
      3kMZCpbukLoILMxebnfMjF32x7U260jCexX1zb741ruaWEiiwpdaJwxGsAfpgowbfdlqZ2GI
      YFk2mS5Da8rJSdcgRHBcsl2MiiUELrM4Q8dxTJKdUkZuKSVFEcXQdFL9+sxwbxiouTkfxzJE
      cungjfnbWvLkq0MujmNREiYiH2Y4nWVyimE4crmNcJYihecoU7GWpTj2VttD30w0hvNNurAo
      cyydzBZqiDYa2ZhEsBTN0knsNKIyZuaZ9QgIjmUQQXIss+jaVymgssZtXo9cW7j8LmWLqK2p
      rWio8YVUFdlJddWOGVsoGMgtL4kI+iJzMs9MCIdtrKx+f6GZKKpYfqfZReTVNH3u0eP3HzsQ
      DIg1JdnJmFCEPOnGTz551O2WawsT5/82ZJdnGaimfUdV4K+pa0zGhQRsWWFWRV1FVNIXmZOa
      VdXUVtD6zP3NNRJlyjYkM4EgdXrVzj0P5BqE0uqkalVbU1uxo27WSx1/sNnvk2qLM24+upp4
      IAWF6ygLiYtxWobmQkv2O5KEzqsXPvjgQ6cvAgD2mamY8MlYMhZwjU3NbnQttwxKC7QALEuX
      L54juEwG8RQhOF3eqMwcP36UAhCic5fapwrS5M7hGZVObWRIZ4A/+sD91p7LM1G6JpPtGHNl
      mbW+iMwS2KRVWWamSksrRoeG8gqLpp0eU2aGlpKr63cwyY2H7hSUFmgB8cC01R4cGx8FOeLw
      BmMiS0kxSboxcZ0YG1OxRCQujU9MUCTEo8FRqz3mGL/YO7WtrsI1F6gsLQh4PXaHwy8QZNQd
      CHr7Ruzb6io0JHYEefruUg8oLdAiIn43qNNxyCuSSASm+8NTE1Hd48f2mNPTZSnu9Ud1LB6Y
      nM3PTiewaPfEKoqzw3FJpyI9c96ZuUBpXprNHU3nZF8MaTSckYWp2UBmhsk2M6cVnNGMhrr8
      xOsFdxb/H+Yn7KCX24ZXAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Auto/Tele' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Min/Max Total' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Auto Accuracy/Mob' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Defense/Driver' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total Score Trend' width='192'>
      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
      n742PV9bl9X585NBGEye/6rjR2s3bFbnrk/PO82li9em1jVJE7m33PJuXZlcqK2jjY7c5hdf
      nHUc++y5yUCsQ69Vnbt1Z7Fxd+ba9DrSc/udxtkzZ2bmq5cvnK+315Et81lxIBDepevzl746
      s3aLS6c/PHv56pWp+uTZz9du5XScwSL+4z/+2gnsc5em1mqG6Hn++bOnz527fPf25aa7Vs9D
      lJNnf3/27Olb8/4Xpz5dezlnr55d6MDUuXMoa5MzrTWXM/r883OLi3NfXZm5MvnF2uU0q9Sf
      Z/WlmVo7/OLsl2s3fGYciBCmqJq6jiZ15+69KgVF0VR1HZ3oXMGaq/OXDo3ruh4niF0jVrFv
      IG+4SHRdXfueksJbvnWnVq/VVU1XlHXIlceOHh8Iz92sGYYGa2+mUXicthdmhaJq2jrSZVJK
      5xve/rGKpulsPU7xrPSBgOq7RvItHF67hV6s7B4nvHE70I+s3apVu9uy7f49exp3Zg4dX8cm
      Hk5zyRreeaBXuV31S7m1uqyS6/vg5z+/c8fu1G8au0+sXY5RMddif/4XPzg/efPkgTXnNqH6
      i8d3L7lKvxHWgqG1ywGIsfHdxf5edeaLQ4ePrd0s9cHUjO3NM9OEZayNxtKcHQgAuHHzxmaX
      BeAZasIyvoHTf/jNYtMhoOw9tP/axctOp1oZ3e/7YaM6M3O36S/dUMsjpmLkDLm0sBQIqWjF
      H733VtcmDGQ10LNOtePv7Cn3D5WuXbvZai5Ts2A3OvsP72VmEd2O0Apq5NcbS3fvLvqg9eSL
      JRW6mcwr6wM96ywu3jUVVVAIfL/RdHuLBjC13uj09uY1RRVSKJS6nUakWDlNUxkhAKVKt+a6
      A/x/eEF57IXZPPIAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
