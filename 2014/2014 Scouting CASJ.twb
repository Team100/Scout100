<?xml version='1.0' encoding='utf-8' ?>

<workbook version='8.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8100.13.1231.1350                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='Data#csv 2014CASA(Data.csv)' inline='true' name='csv.41692.410723206020' version='8.2'>
      <connection auto-extract='yes' character-set='65001' class='csv' directory='C:\Users\Student\Documents\GoogleRepo\Scouting\Regional Scouting\' driver='' filename='Data2014CASJ.csv' force-character-set='no' force-header='no' force-separator='no' header='yes' separator=','>
        <relation name='Data2014CASJ#csv' table='[Data2014CASJ#csv]' type='table' />
      </connection>
      <aliases enabled='yes' />
      <column caption='Auto Total' datatype='integer' name='[Calculation_0590308094936153]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Auto_High]+&#13;&#10;[Auto_High_Hot]+&#13;&#10;[Auto_Low]+&#13;&#10;[Auto_Low_Hot]+&#13;&#10;[Auto_Missed_High]+&#13;&#10;[Auto_Missed_Low]' scope-isolation='false' />
      </column>
      <column caption='Auto Total Success' datatype='integer' name='[Calculation_1540308095801239]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Auto_High]+&#13;&#10;[Auto_High_Hot]+&#13;&#10;[Auto_Low]+&#13;&#10;[Auto_Low_Hot]' scope-isolation='false' />
      </column>
      <column caption='Assist Total' datatype='integer' name='[Calculation_1960308111118024]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[2_Assist]+&#13;&#10;[3_Assist]' scope-isolation='false' />
      </column>
      <column caption='Total Fouls' datatype='integer' name='[Calculation_3410308111631177]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Fouls]*20+&#13;&#10;[Tech_Fouls]*50' scope-isolation='false' />
      </column>
      <column caption='Auto Low Total' datatype='integer' name='[Calculation_3520308094912519]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Auto_Low]+[Auto_Low_Hot]' scope-isolation='false' />
      </column>
      <column caption='Auto Score' datatype='integer' name='[Calculation_5710308094248893]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Auto_High]*15+&#13;&#10;[Auto_High_Hot]*20+&#13;&#10;[Auto_Low]*6+&#13;&#10;[Auto_Low_Hot]*11+&#13;&#10;[Auto_Mobility]*5' scope-isolation='false' />
      </column>
      <column caption='Tele Accuracy' datatype='real' name='[Calculation_6390308101604122]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(([Tele_Low]+&#13;&#10;[Tele_High])/&#13;&#10;[Calculation_8470308100954074])*100' scope-isolation='false' />
      </column>
      <column caption='Tele Score' datatype='integer' name='[Calculation_7890308094604704]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[2_Assist]*10+&#13;&#10;[3_Assist]*30+&#13;&#10;[Catch]*10+&#13;&#10;[Fouls]*-20+&#13;&#10;[Tech_Fouls]*-50+&#13;&#10;[Tele_High]*10+&#13;&#10;[Tele_Low]*1+&#13;&#10;[Truss]*10' scope-isolation='false' />
      </column>
      <column caption='Tele Total' datatype='integer' name='[Calculation_8470308100954074]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Tele_High]+&#13;&#10;[Tele_Low]+&#13;&#10;[Tele_Low_Miss]+&#13;&#10;[Tele_High_Miss]' scope-isolation='false' />
      </column>
      <column caption='Auto Accuracy' datatype='real' name='[Calculation_9170308095316098]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_1540308095801239]/&#13;&#10;[Calculation_0590308094936153])*100' scope-isolation='false' />
      </column>
      <column caption='Auto High Total' datatype='integer' name='[Calculation_9570308094839934]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Auto_High]+[Auto_High_Hot]' scope-isolation='false' />
      </column>
      <column caption='Total Score' datatype='integer' name='[Calculation_9690308093447497]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[2_Assist]*10+&#13;&#10;[3_Assist]*30+&#13;&#10;[Auto_High]*15+&#13;&#10;[Auto_High_Hot]*20+&#13;&#10;[Auto_Low]*6+&#13;&#10;[Auto_Low_Hot]*11+&#13;&#10;[Auto_Mobility]*5+&#13;&#10;[Catch]*10+&#13;&#10;[Fouls]*-20+&#13;&#10;[Tech_Fouls]*-50+&#13;&#10;[Tele_High]*10+&#13;&#10;[Tele_Low]*1+&#13;&#10;[Truss]*10' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' datatype-customized='true' name='[Robot_Job]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;0&quot;' value='Unknown' />
          <alias key='&quot;1&quot;' value='Offensive' />
          <alias key='&quot;2&quot;' value='Defensive' />
          <alias key='&quot;3&quot;' value='Off and Def' />
          <alias key='&quot;4&quot;' value='Nothing' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='integer' name='[matchnum]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
      </column>
      <column-instance column='[Calculation_5710308094248893]' derivation='Avg' name='[avg:Calculation_5710308094248893:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_7890308094604704]' derivation='Avg' name='[avg:Calculation_7890308094604704:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_9690308093447497]' derivation='Avg' name='[avg:Calculation_9690308093447497:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_9690308093447497]' derivation='Max' name='[max:Calculation_9690308093447497:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_9690308093447497]' derivation='Min' name='[min:Calculation_9690308093447497:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_0590308094936153]' derivation='Sum' name='[sum:Calculation_0590308094936153:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5710308094248893]' derivation='Sum' name='[sum:Calculation_5710308094248893:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_7890308094604704]' derivation='Sum' name='[sum:Calculation_7890308094604704:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='false' units='records'>
        <connection class='dataengine' dbname='C:\Users\Student\Documents\Scouting\Scouting 2014.tde' schema='Extract' tablename='Extract' update-time='2/22/2014 5:52:38 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='18' timestamp-start='2014-02-22 17:52:38.253000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41692.410723206020]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[csv.41692.410723206020].[sum:Calculation_0590308094936153:qk]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[csv.41692.410723206020].[sum:Calculation_7890308094604704:qk]&quot;</bucket>
            </map>
            <map to='#c13c01'>
              <bucket>&quot;[csv.41692.410723206020].[max:Calculation_9690308093447497:qk]&quot;</bucket>
            </map>
            <map to='#fda25a'>
              <bucket>&quot;[csv.41692.410723206020].[min:Calculation_9690308093447497:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[csv.41692.410723206020].[avg:Calculation_9690308093447497:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[csv.41692.410723206020].[Multiple Values]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[csv.41692.410723206020].[sum:Calculation_5710308094248893:qk]&quot;</bucket>
            </map>
            <map to='#ff800e'>
              <bucket>&quot;[csv.41692.410723206020].[avg:Calculation_7890308094604704:qk]&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;[csv.41692.410723206020].[avg:Calculation_5710308094248893:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Pit Scouting 2014CASJ(Pit Scouting.xlsx)' inline='true' name='excel.41706.516013356479' version='8.2'>
      <connection auto-extract='yes' class='excel' driver='Ace12' filename='C:\Users\Student\Documents\GoogleRepo\Scouting\Regional Scouting\Pit Scouting2014CASJ.xlsx' header='yes' imex='1'>
        <relation name='Sheet1$' table='[Sheet1$]' type='table' />
      </connection>
      <column aggregation='Sum' datatype='real' name='[# of CIMs]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='real' name='[High Goal Distance]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='real' name='[Wheel Number]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='real' name='[teamnum]' role='dimension' type='ordinal'>
      </column>
      <extract count='-1' enabled='false' units='records'>
        <connection class='dataengine' dbname='C:\Users\Student\Documents\GoogleRepo\Scouting\Regional Scouting\Pit Scouting (Pit Scouting.xlsx).tde' schema='Extract' tablename='Extract' update-time='3/14/2014 4:51:05 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='55' timestamp-start='2014-03-14 04:51:05.699000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='csv.41692.410723206020'>
      <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
      </column>
    </datasource-dependencies>
    <datasource-dependencies datasource='excel.41706.516013356479'>
      <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
      <column aggregation='Sum' datatype='real' name='[teamnum]' role='dimension' type='ordinal'>
      </column>
    </datasource-dependencies>
    <datasource-relationship source='csv.41692.410723206020' target='excel.41706.516013356479'>
      <column-mapping>
        <map key='[csv.41692.410723206020].[none:teamnum:ok]' value='[excel.41706.516013356479].[none:teamnum:ok]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <shared-views>
    <shared-view name='csv.41692.410723206020'>
      <datasources>
        <datasource caption='Data#csv 2014CASA(Data.csv)' name='csv.41692.410723206020' />
      </datasources>
      <datasource-dependencies datasource='csv.41692.410723206020'>
        <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
        <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
        </column>
      </datasource-dependencies>
      <filter class='categorical' column='[csv.41692.410723206020].[none:teamnum:ok]'>
        <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:teamnum:ok]' />
          <groupfilter function='empty-level' member='[none:teamnum:ok]' />
        </groupfilter>
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Assist' tab-color='#fff6be'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data#csv 2014CASA(Data.csv)' name='csv.41692.410723206020' />
          </datasources>
          <datasource-dependencies datasource='csv.41692.410723206020'>
            <column caption='Assist Total' datatype='integer' name='[Calculation_1960308111118024]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[2_Assist]+&#13;&#10;[3_Assist]' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_1960308111118024]' derivation='Avg' name='[avg:Calculation_1960308111118024:qk]' pivot='key' type='quantitative' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <sort class='computed' column='[csv.41692.410723206020].[none:teamnum:ok]' direction='DESC' using='[csv.41692.410723206020].[avg:Calculation_1960308111118024:qk]'>
          </sort>
          <slices>
            <column>[csv.41692.410723206020].[none:teamnum:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f1923e' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41692.410723206020].[none:teamnum:ok]</rows>
        <cols>[csv.41692.410723206020].[avg:Calculation_1960308111118024:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Auto Accuracy/Mob' tab-color='#fff6be'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data#csv 2014CASA(Data.csv)' name='csv.41692.410723206020' />
          </datasources>
          <datasource-dependencies datasource='csv.41692.410723206020'>
            <column datatype='integer' name='[Auto_Mobility]' role='measure' type='quantitative'>
            </column>
            <column caption='Auto Total' datatype='integer' name='[Calculation_0590308094936153]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Auto_High]+&#13;&#10;[Auto_High_Hot]+&#13;&#10;[Auto_Low]+&#13;&#10;[Auto_Low_Hot]+&#13;&#10;[Auto_Missed_High]+&#13;&#10;[Auto_Missed_Low]' scope-isolation='false' />
            </column>
            <column caption='Auto Score' datatype='integer' name='[Calculation_5710308094248893]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Auto_High]*15+&#13;&#10;[Auto_High_Hot]*20+&#13;&#10;[Auto_Low]*6+&#13;&#10;[Auto_Low_Hot]*11+&#13;&#10;[Auto_Mobility]*5' scope-isolation='false' />
            </column>
            <column caption='Auto Accuracy' datatype='real' name='[Calculation_9170308095316098]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_1540308095801239]/&#13;&#10;[Calculation_0590308094936153])*100' scope-isolation='false' />
            </column>
            <column-instance column='[Auto_Mobility]' derivation='Avg' name='[avg:Auto_Mobility:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0590308094936153]' derivation='Avg' name='[avg:Calculation_0590308094936153:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5710308094248893]' derivation='Avg' name='[avg:Calculation_5710308094248893:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9170308095316098]' derivation='Avg' name='[avg:Calculation_9170308095316098:qk]' pivot='key' type='quantitative' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <slices>
            <column>[csv.41692.410723206020].[none:teamnum:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[csv.41692.410723206020].[avg:Auto_Mobility:qk]' palette='tableau-orange' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41692.410723206020].[avg:Auto_Mobility:qk]' />
              <size column='[csv.41692.410723206020].[avg:Calculation_0590308094936153:qk]' />
              <text column='[csv.41692.410723206020].[none:teamnum:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41692.410723206020].[avg:Calculation_5710308094248893:qk]</rows>
        <cols>[csv.41692.410723206020].[avg:Calculation_9170308095316098:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Auto/Tele' tab-color='#e5e4f6'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data#csv 2014CASA(Data.csv)' name='csv.41692.410723206020' />
          </datasources>
          <datasource-dependencies datasource='csv.41692.410723206020'>
            <column caption='Auto Score' datatype='integer' name='[Calculation_5710308094248893]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Auto_High]*15+&#13;&#10;[Auto_High_Hot]*20+&#13;&#10;[Auto_Low]*6+&#13;&#10;[Auto_Low_Hot]*11+&#13;&#10;[Auto_Mobility]*5' scope-isolation='false' />
            </column>
            <column caption='Tele Score' datatype='integer' name='[Calculation_7890308094604704]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[2_Assist]*10+&#13;&#10;[3_Assist]*30+&#13;&#10;[Catch]*10+&#13;&#10;[Fouls]*-20+&#13;&#10;[Tech_Fouls]*-50+&#13;&#10;[Tele_High]*10+&#13;&#10;[Tele_Low]*1+&#13;&#10;[Truss]*10' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_5710308094248893]' derivation='Avg' name='[avg:Calculation_5710308094248893:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7890308094604704]' derivation='Avg' name='[avg:Calculation_7890308094604704:qk]' pivot='key' type='quantitative' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_5710308094248893]' derivation='Sum' name='[sum:Calculation_5710308094248893:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41692.410723206020].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41692.410723206020].[avg:Calculation_7890308094604704:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41692.410723206020].[avg:Calculation_5710308094248893:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[csv.41692.410723206020].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[csv.41692.410723206020].[avg:Calculation_7890308094604704:qk]&quot;</bucket>
              <bucket>&quot;[csv.41692.410723206020].[sum:Calculation_5710308094248893:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[csv.41692.410723206020].[none:teamnum:ok]' direction='ASC'>
            <dictionary>
              <bucket>971</bucket>
              <bucket>1678</bucket>
              <bucket>254</bucket>
              <bucket>846</bucket>
              <bucket>368</bucket>
              <bucket>192</bucket>
              <bucket>1323</bucket>
              <bucket>1868</bucket>
              <bucket>604</bucket>
              <bucket>3256</bucket>
              <bucket>2035</bucket>
              <bucket>2489</bucket>
              <bucket>1967</bucket>
              <bucket>114</bucket>
              <bucket>670</bucket>
              <bucket>1700</bucket>
              <bucket>852</bucket>
              <bucket>2144</bucket>
              <bucket>840</bucket>
              <bucket>100</bucket>
              <bucket>2473</bucket>
              <bucket>668</bucket>
              <bucket>1351</bucket>
              <bucket>1388</bucket>
              <bucket>1662</bucket>
              <bucket>4543</bucket>
              <bucket>4990</bucket>
              <bucket>1280</bucket>
              <bucket>256</bucket>
              <bucket>2135</bucket>
              <bucket>8</bucket>
              <bucket>766</bucket>
              <bucket>2854</bucket>
              <bucket>3669</bucket>
              <bucket>5027</bucket>
              <bucket>295</bucket>
              <bucket>2813</bucket>
              <bucket>3045</bucket>
              <bucket>4047</bucket>
              <bucket>5171</bucket>
              <bucket>841</bucket>
              <bucket>115</bucket>
              <bucket>1072</bucket>
              <bucket>4171</bucket>
              <bucket>4765</bucket>
              <bucket>4904</bucket>
              <bucket>5104</bucket>
              <bucket>581</bucket>
              <bucket>692</bucket>
              <bucket>751</bucket>
              <bucket>2141</bucket>
              <bucket>5023</bucket>
              <bucket>5026</bucket>
              <bucket>4186</bucket>
              <bucket>2367</bucket>
              <bucket>5311</bucket>
              <bucket>3482</bucket>
              <bucket>4255</bucket>
              <bucket>1671</bucket>
              <bucket>2085</bucket>
              <bucket>2073</bucket>
              <bucket>2761</bucket>
              <bucket>4135</bucket>
              <bucket>3250</bucket>
              <bucket>1458</bucket>
              <bucket>701</bucket>
              <bucket>599</bucket>
              <bucket>3925</bucket>
              <bucket>3598</bucket>
              <bucket>2551</bucket>
              <bucket>3189</bucket>
              <bucket>5274</bucket>
              <bucket>253</bucket>
              <bucket>4498</bucket>
              <bucket>4669</bucket>
              <bucket>5134</bucket>
              <bucket>5250</bucket>
              <bucket>4643</bucket>
              <bucket>4711</bucket>
              <bucket>3257</bucket>
              <bucket>4698</bucket>
              <bucket>2204</bucket>
              <bucket>4159</bucket>
              <bucket>4185</bucket>
              <bucket>3554</bucket>
              <bucket>3013</bucket>
              <bucket>585</bucket>
              <bucket>3859</bucket>
              <bucket>2156</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41692.410723206020].[:Measure Names]</column>
            <column>[csv.41692.410723206020].[none:teamnum:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41692.410723206020].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41692.410723206020].[none:teamnum:ok]</rows>
        <cols>[csv.41692.410723206020].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='Catch/Truss' tab-color='#f2e6e6'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data#csv 2014CASA(Data.csv)' name='csv.41692.410723206020' />
          </datasources>
          <datasource-dependencies datasource='csv.41692.410723206020'>
            <column datatype='integer' name='[Catch]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Truss]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Catch]' derivation='Avg' name='[avg:Catch:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Truss]' derivation='Avg' name='[avg:Truss:qk]' pivot='key' type='quantitative' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <slices>
            <column>[csv.41692.410723206020].[none:teamnum:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[csv.41692.410723206020].[none:teamnum:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='190' />
                <format attr='mark-color' value='#f1923e' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41692.410723206020].[avg:Truss:qk]</rows>
        <cols>[csv.41692.410723206020].[avg:Catch:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Dead!/Fouls' tab-color='#e5e4f6'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data#csv 2014CASA(Data.csv)' name='csv.41692.410723206020' />
          </datasources>
          <datasource-dependencies datasource='csv.41692.410723206020'>
            <column caption='Total Fouls' datatype='integer' name='[Calculation_3410308111631177]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Fouls]*20+&#13;&#10;[Tech_Fouls]*50' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Dead_Bot]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_3410308111631177]' derivation='Avg' name='[avg:Calculation_3410308111631177:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dead_Bot]' derivation='Avg' name='[avg:Dead_Bot:qk]' pivot='key' type='quantitative' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <slices>
            <column>[csv.41692.410723206020].[none:teamnum:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[csv.41692.410723206020].[none:teamnum:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='188' />
                <format attr='mark-color' value='#f1923e' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41692.410723206020].[avg:Calculation_3410308111631177:qk]</rows>
        <cols>[csv.41692.410723206020].[avg:Dead_Bot:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Defense/Driver' tab-color='#d6f2f8'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data#csv 2014CASA(Data.csv)' name='csv.41692.410723206020' />
          </datasources>
          <datasource-dependencies datasource='csv.41692.410723206020'>
            <column datatype='integer' name='[Defense_Rating]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Driver_Rating]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Goal_Defense]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Defense_Rating]' derivation='Avg' name='[avg:Defense_Rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driver_Rating]' derivation='Avg' name='[avg:Driver_Rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Goal_Defense]' derivation='Avg' name='[avg:Goal_Defense:qk]' pivot='key' type='quantitative' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <slices>
            <column>[csv.41692.410723206020].[none:teamnum:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[csv.41692.410723206020].[avg:Goal_Defense:qk]' palette='tableau-orange' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41692.410723206020].[avg:Goal_Defense:qk]' />
              <text column='[csv.41692.410723206020].[none:teamnum:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='188' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41692.410723206020].[avg:Driver_Rating:qk]</rows>
        <cols>[csv.41692.410723206020].[avg:Defense_Rating:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Intake' tab-color='#eaeed3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data#csv 2014CASA(Data.csv)' name='csv.41692.410723206020' />
          </datasources>
          <datasource-dependencies datasource='csv.41692.410723206020'>
            <column datatype='integer' name='[Pickup_Rating]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Pickup_Rating]' derivation='Avg' name='[avg:Pickup_Rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <sort class='computed' column='[csv.41692.410723206020].[none:teamnum:ok]' direction='DESC' using='[csv.41692.410723206020].[avg:Pickup_Rating:qk]'>
          </sort>
          <slices>
            <column>[csv.41692.410723206020].[none:teamnum:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f1923e' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41692.410723206020].[none:teamnum:ok]</rows>
        <cols>[csv.41692.410723206020].[avg:Pickup_Rating:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Min/Max Total' tab-color='#eaeed3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data#csv 2014CASA(Data.csv)' name='csv.41692.410723206020' />
          </datasources>
          <datasource-dependencies datasource='csv.41692.410723206020'>
            <column caption='Total Score' datatype='integer' name='[Calculation_9690308093447497]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[2_Assist]*10+&#13;&#10;[3_Assist]*30+&#13;&#10;[Auto_High]*15+&#13;&#10;[Auto_High_Hot]*20+&#13;&#10;[Auto_Low]*6+&#13;&#10;[Auto_Low_Hot]*11+&#13;&#10;[Auto_Mobility]*5+&#13;&#10;[Catch]*10+&#13;&#10;[Fouls]*-20+&#13;&#10;[Tech_Fouls]*-50+&#13;&#10;[Tele_High]*10+&#13;&#10;[Tele_Low]*1+&#13;&#10;[Truss]*10' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_9690308093447497]' derivation='Avg' name='[avg:Calculation_9690308093447497:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9690308093447497]' derivation='Max' name='[max:Calculation_9690308093447497:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9690308093447497]' derivation='Min' name='[min:Calculation_9690308093447497:qk]' pivot='key' type='quantitative' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41692.410723206020].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41692.410723206020].[min:Calculation_9690308093447497:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41692.410723206020].[avg:Calculation_9690308093447497:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41692.410723206020].[max:Calculation_9690308093447497:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[csv.41692.410723206020].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[csv.41692.410723206020].[min:Calculation_9690308093447497:qk]&quot;</bucket>
              <bucket>&quot;[csv.41692.410723206020].[avg:Calculation_9690308093447497:qk]&quot;</bucket>
              <bucket>&quot;[csv.41692.410723206020].[max:Calculation_9690308093447497:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[csv.41692.410723206020].[none:teamnum:ok]' direction='ASC'>
            <dictionary>
              <bucket>254</bucket>
              <bucket>1678</bucket>
              <bucket>971</bucket>
              <bucket>368</bucket>
              <bucket>846</bucket>
              <bucket>192</bucket>
              <bucket>1323</bucket>
              <bucket>1868</bucket>
              <bucket>1967</bucket>
              <bucket>2489</bucket>
              <bucket>670</bucket>
              <bucket>114</bucket>
              <bucket>604</bucket>
              <bucket>3256</bucket>
              <bucket>2035</bucket>
              <bucket>2854</bucket>
              <bucket>1388</bucket>
              <bucket>2135</bucket>
              <bucket>840</bucket>
              <bucket>668</bucket>
              <bucket>2144</bucket>
              <bucket>100</bucket>
              <bucket>1700</bucket>
              <bucket>4047</bucket>
              <bucket>852</bucket>
              <bucket>4990</bucket>
              <bucket>5027</bucket>
              <bucket>1351</bucket>
              <bucket>1280</bucket>
              <bucket>3669</bucket>
              <bucket>2473</bucket>
              <bucket>766</bucket>
              <bucket>1662</bucket>
              <bucket>256</bucket>
              <bucket>8</bucket>
              <bucket>4543</bucket>
              <bucket>4765</bucket>
              <bucket>295</bucket>
              <bucket>5171</bucket>
              <bucket>2813</bucket>
              <bucket>4171</bucket>
              <bucket>4904</bucket>
              <bucket>841</bucket>
              <bucket>3045</bucket>
              <bucket>5104</bucket>
              <bucket>1072</bucket>
              <bucket>581</bucket>
              <bucket>751</bucket>
              <bucket>692</bucket>
              <bucket>2141</bucket>
              <bucket>115</bucket>
              <bucket>5023</bucket>
              <bucket>3482</bucket>
              <bucket>4255</bucket>
              <bucket>5026</bucket>
              <bucket>4186</bucket>
              <bucket>2367</bucket>
              <bucket>5311</bucket>
              <bucket>2085</bucket>
              <bucket>1671</bucket>
              <bucket>3250</bucket>
              <bucket>2073</bucket>
              <bucket>2761</bucket>
              <bucket>3925</bucket>
              <bucket>4135</bucket>
              <bucket>701</bucket>
              <bucket>1458</bucket>
              <bucket>3189</bucket>
              <bucket>3598</bucket>
              <bucket>599</bucket>
              <bucket>5274</bucket>
              <bucket>2551</bucket>
              <bucket>4669</bucket>
              <bucket>5134</bucket>
              <bucket>4498</bucket>
              <bucket>5250</bucket>
              <bucket>253</bucket>
              <bucket>4643</bucket>
              <bucket>4711</bucket>
              <bucket>4698</bucket>
              <bucket>2204</bucket>
              <bucket>3013</bucket>
              <bucket>4185</bucket>
              <bucket>3554</bucket>
              <bucket>3257</bucket>
              <bucket>4159</bucket>
              <bucket>585</bucket>
              <bucket>3859</bucket>
              <bucket>2156</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41692.410723206020].[:Measure Names]</column>
            <column>[csv.41692.410723206020].[none:teamnum:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41692.410723206020].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[csv.41692.410723206020].[none:teamnum:ok]</rows>
        <cols>[csv.41692.410723206020].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='Pit Scouting 1' tab-color='#eaeed3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Pit Scouting 2014CASJ(Pit Scouting.xlsx)' name='excel.41706.516013356479' />
          </datasources>
          <datasource-dependencies datasource='excel.41706.516013356479'>
            <column aggregation='Sum' datatype='real' name='[# of CIMs]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Drive Train Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Kitbot]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Shift]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Speed (ft/sec)]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[# of CIMs]' derivation='None' name='[none:# of CIMs:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Drive Train Type]' derivation='None' name='[none:Drive Train Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Kitbot]' derivation='None' name='[none:Kitbot:nk]' pivot='key' type='nominal' />
            <column-instance column='[Shift]' derivation='None' name='[none:Shift:nk]' pivot='key' type='nominal' />
            <column-instance column='[Speed (ft/sec)]' derivation='None' name='[none:Speed (ft/sec):nk]' pivot='key' type='nominal' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='real' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([excel.41706.516013356479].[none:teamnum:ok] / ([excel.41706.516013356479].[none:Drive Train Type:nk] / ([excel.41706.516013356479].[none:Kitbot:nk] / ([excel.41706.516013356479].[none:# of CIMs:ok] / ([excel.41706.516013356479].[none:Shift:nk] / [excel.41706.516013356479].[none:Speed (ft/sec):nk])))))</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Pit Scouting 2' tab-color='#d6f2f8'>
      <table>
        <view>
          <datasources>
            <datasource caption='Pit Scouting 2014CASJ(Pit Scouting.xlsx)' name='excel.41706.516013356479' />
          </datasources>
          <datasource-dependencies datasource='excel.41706.516013356479'>
            <column aggregation='Sum' datatype='real' name='[High Goal Distance]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Pickup]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Special]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='real' name='[Wheel Number]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Wheel Type]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[High Goal Distance]' derivation='None' name='[none:High Goal Distance:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Pickup]' derivation='None' name='[none:Pickup:nk]' pivot='key' type='nominal' />
            <column-instance column='[Special]' derivation='None' name='[none:Special:nk]' pivot='key' type='nominal' />
            <column-instance column='[Wheel Number]' derivation='None' name='[none:Wheel Number:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Wheel Type]' derivation='None' name='[none:Wheel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='real' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([excel.41706.516013356479].[none:teamnum:ok] / ([excel.41706.516013356479].[none:High Goal Distance:ok] / ([excel.41706.516013356479].[none:Pickup:nk] / ([excel.41706.516013356479].[none:Wheel Number:ok] / ([excel.41706.516013356479].[none:Wheel Type:nk] / [excel.41706.516013356479].[none:Special:nk])))))</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Possession' tab-color='#fae7c8'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data#csv 2014CASA(Data.csv)' name='csv.41692.410723206020' />
          </datasources>
          <datasource-dependencies datasource='csv.41692.410723206020'>
            <column datatype='integer' name='[Possession_Rating]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Possession_Rating]' derivation='Avg' name='[avg:Possession_Rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <sort class='computed' column='[csv.41692.410723206020].[none:teamnum:ok]' direction='DESC' using='[csv.41692.410723206020].[avg:Possession_Rating:qk]'>
          </sort>
          <slices>
            <column>[csv.41692.410723206020].[none:teamnum:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f1923e' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41692.410723206020].[none:teamnum:ok]</rows>
        <cols>[csv.41692.410723206020].[avg:Possession_Rating:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Robot Job' tab-color='#d7e9ff'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data#csv 2014CASA(Data.csv)' name='csv.41692.410723206020' />
          </datasources>
          <datasource-dependencies datasource='csv.41692.410723206020'>
            <column datatype='string' datatype-customized='true' name='[Robot_Job]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;0&quot;' value='Unknown' />
                <alias key='&quot;1&quot;' value='Offensive' />
                <alias key='&quot;2&quot;' value='Defensive' />
                <alias key='&quot;3&quot;' value='Off and Def' />
                <alias key='&quot;4&quot;' value='Nothing' />
              </aliases>
            </column>
            <column-instance column='[Robot_Job]' derivation='None' name='[none:Robot_Job:nk]' pivot='key' type='nominal' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <slices>
            <column>[csv.41692.410723206020].[none:teamnum:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[csv.41692.410723206020].[none:teamnum:ok]</rows>
        <cols>[csv.41692.410723206020].[none:Robot_Job:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 16'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data#csv 2014CASA(Data.csv)' name='csv.41692.410723206020' />
          </datasources>
          <datasource-dependencies datasource='csv.41692.410723206020'>
            <column caption='Assist Total' datatype='integer' name='[Calculation_1960308111118024]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[2_Assist]+&#13;&#10;[3_Assist]' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Pickup_Rating]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Possess_Number]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Possession_Rating]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_1960308111118024]' derivation='Avg' name='[avg:Calculation_1960308111118024:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pickup_Rating]' derivation='Avg' name='[avg:Pickup_Rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Possess_Number]' derivation='Avg' name='[avg:Possess_Number:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Possession_Rating]' derivation='Avg' name='[avg:Possession_Rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Possess_Number]' derivation='Sum' name='[sum:Possess_Number:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Possession_Rating]' derivation='Sum' name='[sum:Possession_Rating:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41692.410723206020].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41692.410723206020].[sum:Possess_Number:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41692.410723206020].[sum:Possession_Rating:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.41692.410723206020].[none:teamnum:ok]</column>
            <column>[csv.41692.410723206020].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[csv.41692.410723206020].[avg:Pickup_Rating:qk]' palette='tableau-orange' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41692.410723206020].[avg:Pickup_Rating:qk]' />
              <size column='[csv.41692.410723206020].[avg:Calculation_1960308111118024:qk]' />
              <text column='[csv.41692.410723206020].[none:teamnum:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='196' />
                <format attr='mark-color' value='#f1923e' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41692.410723206020].[avg:Possess_Number:qk]</rows>
        <cols>[csv.41692.410723206020].[avg:Possession_Rating:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Tele Accuracy' tab-color='#fae7c8'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data#csv 2014CASA(Data.csv)' name='csv.41692.410723206020' />
          </datasources>
          <datasource-dependencies datasource='csv.41692.410723206020'>
            <column caption='Auto Total' datatype='integer' name='[Calculation_0590308094936153]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Auto_High]+&#13;&#10;[Auto_High_Hot]+&#13;&#10;[Auto_Low]+&#13;&#10;[Auto_Low_Hot]+&#13;&#10;[Auto_Missed_High]+&#13;&#10;[Auto_Missed_Low]' scope-isolation='false' />
            </column>
            <column caption='Auto Total Success' datatype='integer' name='[Calculation_1540308095801239]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Auto_High]+&#13;&#10;[Auto_High_Hot]+&#13;&#10;[Auto_Low]+&#13;&#10;[Auto_Low_Hot]' scope-isolation='false' />
            </column>
            <column caption='Tele Accuracy' datatype='real' name='[Calculation_6390308101604122]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Tele_Low]+&#13;&#10;[Tele_High])/&#13;&#10;[Calculation_8470308100954074])*100' scope-isolation='false' />
            </column>
            <column caption='Tele Score' datatype='integer' name='[Calculation_7890308094604704]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[2_Assist]*10+&#13;&#10;[3_Assist]*30+&#13;&#10;[Catch]*10+&#13;&#10;[Fouls]*-20+&#13;&#10;[Tech_Fouls]*-50+&#13;&#10;[Tele_High]*10+&#13;&#10;[Tele_Low]*1+&#13;&#10;[Truss]*10' scope-isolation='false' />
            </column>
            <column caption='Tele Total' datatype='integer' name='[Calculation_8470308100954074]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Tele_High]+&#13;&#10;[Tele_Low]+&#13;&#10;[Tele_Low_Miss]+&#13;&#10;[Tele_High_Miss]' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_6390308101604122]' derivation='Avg' name='[avg:Calculation_6390308101604122:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7890308094604704]' derivation='Avg' name='[avg:Calculation_7890308094604704:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8470308100954074]' derivation='Avg' name='[avg:Calculation_8470308100954074:qk]' pivot='key' type='quantitative' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_0590308094936153]' derivation='Sum' name='[sum:Calculation_0590308094936153:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1540308095801239]' derivation='Sum' name='[sum:Calculation_1540308095801239:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41692.410723206020].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41692.410723206020].[sum:Calculation_0590308094936153:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41692.410723206020].[sum:Calculation_1540308095801239:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.41692.410723206020].[:Measure Names]</column>
            <column>[csv.41692.410723206020].[none:teamnum:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[csv.41692.410723206020].[avg:Calculation_8470308100954074:qk]' />
              <text column='[csv.41692.410723206020].[none:teamnum:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='180' />
                <format attr='mark-color' value='#f1923e' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41692.410723206020].[avg:Calculation_7890308094604704:qk]</rows>
        <cols>[csv.41692.410723206020].[avg:Calculation_6390308101604122:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Total Score' tab-color='#d7e9ff'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data#csv 2014CASA(Data.csv)' name='csv.41692.410723206020' />
          </datasources>
          <datasource-dependencies datasource='csv.41692.410723206020'>
            <column caption='Total Score' datatype='integer' name='[Calculation_9690308093447497]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[2_Assist]*10+&#13;&#10;[3_Assist]*30+&#13;&#10;[Auto_High]*15+&#13;&#10;[Auto_High_Hot]*20+&#13;&#10;[Auto_Low]*6+&#13;&#10;[Auto_Low_Hot]*11+&#13;&#10;[Auto_Mobility]*5+&#13;&#10;[Catch]*10+&#13;&#10;[Fouls]*-20+&#13;&#10;[Tech_Fouls]*-50+&#13;&#10;[Tele_High]*10+&#13;&#10;[Tele_Low]*1+&#13;&#10;[Truss]*10' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_9690308093447497]' derivation='Avg' name='[avg:Calculation_9690308093447497:qk]' pivot='key' type='quantitative' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <sort class='computed' column='[csv.41692.410723206020].[none:teamnum:ok]' direction='DESC' using='[csv.41692.410723206020].[avg:Calculation_9690308093447497:qk]'>
          </sort>
          <slices>
            <column>[csv.41692.410723206020].[none:teamnum:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f1923e' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41692.410723206020].[none:teamnum:ok]</rows>
        <cols>[csv.41692.410723206020].[avg:Calculation_9690308093447497:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Total Score Trend' tab-color='#f2e6e6'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data#csv 2014CASA(Data.csv)' name='csv.41692.410723206020' />
          </datasources>
          <datasource-dependencies datasource='csv.41692.410723206020'>
            <column caption='Total Score' datatype='integer' name='[Calculation_9690308093447497]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[2_Assist]*10+&#13;&#10;[3_Assist]*30+&#13;&#10;[Auto_High]*15+&#13;&#10;[Auto_High_Hot]*20+&#13;&#10;[Auto_Low]*6+&#13;&#10;[Auto_Low_Hot]*11+&#13;&#10;[Auto_Mobility]*5+&#13;&#10;[Catch]*10+&#13;&#10;[Fouls]*-20+&#13;&#10;[Tech_Fouls]*-50+&#13;&#10;[Tele_High]*10+&#13;&#10;[Tele_Low]*1+&#13;&#10;[Truss]*10' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_9690308093447497]' derivation='Avg' name='[avg:Calculation_9690308093447497:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[matchnum]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[matchnum]' derivation='None' name='[none:matchnum:qk]' pivot='key' type='quantitative' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <slices>
            <column>[csv.41692.410723206020].[none:teamnum:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f1923e' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41692.410723206020].[none:teamnum:ok] * [csv.41692.410723206020].[avg:Calculation_9690308093447497:qk])</rows>
        <cols>[csv.41692.410723206020].[none:matchnum:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='1' name='Pit Scouting 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41706.516013356479].[none:# of CIMs:ok]</field>
          <field>[excel.41706.516013356479].[none:# of mini CIMs:nk]</field>
          <field>[excel.41706.516013356479].[none:Drive Train Type:nk]</field>
          <field>[excel.41706.516013356479].[none:High Goal Distance:ok]</field>
          <field>[excel.41706.516013356479].[none:Kitbot:nk]</field>
          <field>[excel.41706.516013356479].[none:Shift:nk]</field>
          <field>[excel.41706.516013356479].[none:Speed (ft/sec):nk]</field>
          <field>[excel.41706.516013356479].[none:Team #:ok]</field>
          <field>[excel.41706.516013356479].[none:Wheel Diameter (in):nk]</field>
          <field>[excel.41706.516013356479].[none:Wheel Type:nk]</field>
          <field>[excel.41706.516013356479].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Pit Scouting 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41706.516013356479].[none:High Goal Distance:ok]</field>
          <field>[excel.41706.516013356479].[none:Kitbot:nk]</field>
          <field>[excel.41706.516013356479].[none:Pickup:nk]</field>
          <field>[excel.41706.516013356479].[none:Shift:nk]</field>
          <field>[excel.41706.516013356479].[none:Special:nk]</field>
          <field>[excel.41706.516013356479].[none:Speed (ft/sec):nk]</field>
          <field>[excel.41706.516013356479].[none:Team #:ok]</field>
          <field>[excel.41706.516013356479].[none:Wheel Number:ok]</field>
          <field>[excel.41706.516013356479].[none:Wheel Type:nk]</field>
          <field>[excel.41706.516013356479].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Total Score'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41692.410723206020].[none:teamnum:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41692.410723206020].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Auto/Tele'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[csv.41692.410723206020].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41692.410723206020].[none:teamnum:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41692.410723206020].[:Measure Names]</field>
          <field>[csv.41692.410723206020].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Tele Accuracy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41692.410723206020].[avg:Calculation_8470308100954074:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41692.410723206020].[none:teamnum:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41692.410723206020].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Auto Accuracy/Mob'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41692.410723206020].[avg:Auto_Mobility:qk]' type='color' />
            <card pane-specification-id='0' param='[csv.41692.410723206020].[avg:Calculation_0590308094936153:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41692.410723206020].[none:teamnum:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41692.410723206020].[avg:Auto_Mobility:qk]</field>
          <field>[csv.41692.410723206020].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 16'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41692.410723206020].[avg:Pickup_Rating:qk]' type='color' />
            <card pane-specification-id='0' param='[csv.41692.410723206020].[avg:Calculation_1960308111118024:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41692.410723206020].[none:teamnum:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41692.410723206020].[avg:Pickup_Rating:qk]</field>
          <field>[csv.41692.410723206020].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Assist'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41692.410723206020].[none:teamnum:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41692.410723206020].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Catch/Truss'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41692.410723206020].[none:teamnum:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41692.410723206020].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Possession'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41692.410723206020].[none:teamnum:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41692.410723206020].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Intake'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41692.410723206020].[none:teamnum:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41692.410723206020].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Defense/Driver'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41692.410723206020].[avg:Goal_Defense:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41692.410723206020].[none:teamnum:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41692.410723206020].[avg:Goal_Defense:qk]</field>
          <field>[csv.41692.410723206020].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Robot Job'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41692.410723206020].[none:teamnum:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41692.410723206020].[none:Robot_Job:nk]</field>
          <field>[csv.41692.410723206020].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Dead!/Fouls'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41692.410723206020].[none:teamnum:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41692.410723206020].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Min/Max Total'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[csv.41692.410723206020].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='127'>
            <card param='[csv.41692.410723206020].[none:teamnum:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41692.410723206020].[:Measure Names]</field>
          <field>[csv.41692.410723206020].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Total Score Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41692.410723206020].[none:teamnum:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41692.410723206020].[none:matchnum:ok]</field>
          <field>[csv.41692.410723206020].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Pit Scouting 1' width='191'>
      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
    </thumbnail>
    <thumbnail height='192' name='Pit Scouting 2' width='192'>
      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
      /wfP6+2H2zKDNwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total Score' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAWOElEQVR4nO3dWWwj930H8P9c5PAmRfGQeErUSV17au29bO96
      1/a2ceIEQWHkQII+FSj6UCDoQ1sgKAq0RYCiaJv0JTHSpInd2O46cZyNvcm6Wa331Oq+KUoi
      Kd6keF/DGU4f1ihy2NTa/xmRFP+fFxvE7Jc/UT9x5ieO/n+M53mAIJ8W3ugCkNaGGgiBghoI
      gYIaCIGCGgiBghoIgYIaCIGCGgiBQj76D8uypVKpsaUgrQh79JtonucF/5V0NhaQlyPCZiLN
      5sN3IAzDMAz7dBE1trLjDxn0mt1QVGvoUhBVicpAk4CLrJSn/lG4UpFmJMA10M78B3NLi/dX
      w3u+5c3tre9+59vRAnwq0hoEaCCj3UWUc+VqOZjGTh0dOzkxCJ+JtApSgAgJrTbaJ0Z7Ax0q
      CUk5BkZUUvhUpDVg4t3Osbf4K+rev4kUjjQJERsom82q1WqRwpEmIcAp7OPU8vFq+J54+Ugz
      EKCBOKa4tOLp7e/b3ljVW/vVeImRaPUqmottlNAYf9gJMIWVizk2H3nv1795uOyjqdrVH39/
      I5SBj0VaggANROLgwfz22JBj0GV+80evVnA6ntiDj0VaggCnsGKx6BocIKUqnM+8+PJX5Wwq
      T3bAxyItQcwxfuU3ktlXRApHmgQa4xEoYo7xmVBl613x8pFmANVAPM/vbHm7LV1LC8vmbvP2
      9o7OZC2lovahI0aNjEtuV6b+XahCkeYENYWlg+s/eP3ttenby9vBMqGm2UwxG5+emV7YCApV
      H9LkoBpIZx064bYDUDPo1Wtrq54Ya1cBS99AOhoXqj6kycFeA00cPWEwGvil1Z6BwVTaaTDr
      rLkFx9CEIMUhzU/MMX79tnT5NZHCkSaBxngEiohjPLfnKy/fFS8fERwmUUqPv/yJ/okADVTJ
      Je7NrAxNnOCSflbVGd1cNfVP2AzqWnqXmf4v+HzkwGBKQwMaKBPdXlxeJpQda1O/NPYPxFLl
      U+YBmwGdvNqCAJ/G5zNZm8O+tboiVcjTmVynQbOxtgkfi7QEAd6BnOOnK7Jtx7MDoJytEPRe
      0Ndp64OPRVqCAA2EU7JhtxsAAKQdcgB0g8MfPq7Qk66n4PORA4PJNJ/4n6AxHoEh5hif2CxN
      3xAvH6mPMA1LRv5I7GcRoIH4Gjs7/cDR61pYWOrt799aX7UPn3BZOmrZaHX5bfh85NPhq6UD
      aCABprB01HfrzsNIwBtNpe7NeS0d5OK6Hz4WaQkCNJCuyzXi6tIYbWoSyMjK1Xdnjk+gKaxd
      CHMNdPLsBVquGD82qdWq3QN9MkKQVKQFiDiFpbZmad/7IoUj+yJMQxL3FbGfBY3xCBQxx/jo
      WnHqZ+LlI78HV5vpc39+wE8qQAMVkrs3bs+NHzu6ubTQ2W0P+b2OkSfdTkOtkGS3puDzkceE
      d7oa8KTwETJtl0UNFh7c29krVnLJQMAfjqO/jW8XArwD5RK7qTJf5XG1hN/c2FR1GorZHHws
      0hIEaCBVZ/fREyq1VpPPZmQKVTGfVah18LFISxBxCkv7lmi0wNQBwuV6yfjnDvhJ0RiPQBFx
      jGdDi4X3XhUvH/ltkokvUP3PHPzzQjVQjau88857T5wYmbo96z4yvrmybLY6Q9ue/lMXh60d
      fDnLhReFKhSpr9b3dEOeF2qMz8aCvkic1tn7zLICr+7plMTLkjGXIRrPClUf0uSgGkjb1dtj
      1mSiW75EMeKZfvWXszYt2AjtlXN5oepDmhzsNdBzVz5L4Lihy0GSxMULFwmSHHC5SEoiSHFI
      8xNzjN9dlyeXRApHfg/RPUEYGnAbFhrjEShijvG7M/mZ74mXf7hRg5elJ7/S6Cr2J8RnYbHt
      X3+w4HQ5tzyegSNnSzv3pK6z4049z5RqKXRz9KfEF1tjrW0BPo0Pbq6nK2zIu6EyWxbu3phd
      3kzny/CxSEsQoIE6uy3SGoPJVJGtTZOt3+Uwl0pF+FikJQhwCut0jr3sHPutB07CZyKtQswx
      PuRV5HdECj/0cK2VMLbA5qFojEegiDnG++7l7v6rePktTTLxBenk1xpdhQAEaCCmmHr1tasv
      fO7zN95+49xnv+KdelPhvnTcZeA5li+jT1U/Gl89JIOqAFMYU6nSEoqpMjRJxX0ri57ddA5N
      Ye1CgAZS6ozWrk65ssNuM6v0lsmjwxSOwcciLUGYa6AzF18AAHScfw4A4LJ+RpBMpCWIOIVl
      on4FExMpvNXhKjOutTa6CgGIOIVhMg1hPAyvERwMww7zCV3EBqpu3c61/bbf1Mgfyy58o9FV
      iAiqgcrZ2Ldf+clLl05en5rvG3YnoxGH1biwtNx77NLFE2iNqbYA91cZPGHp6qyxHCGhkrvb
      aY6QRhOEhOQqVaHqQ5ocVAPJNXqr2SiVqzRqtb2nhw741FodW2O1arlQ9SFNDvYa6OxTFwAA
      tv4xAAA4fgy+IKS1iDnGJ8JKviBSeKvAaDWuMja6ChGJOIUBQoJJaRHzmxyG459854CWA7nt
      d61SqUokFMMwEomkyjA4SfEcS1ASAsdY3/18G4/xmMqk+tpPGl2F6KAaqJgMvPX29d6Jyfj2
      iqzDEolEJ8d651e33cfPjPaahSoRaWZQH6YqOh3H3E4elxZSSaVGoaLA3Q/uZMplfyAsVH1I
      k4NqoEzYsxEp48VomTZoZRKKpkdPnbV1qLpNBqHqQ5qciFNYcu4aha6BDjsxx/i9hKqdF1nA
      cVze0egiRCfmGF9j+UpJxPwmhsm0uLwtVhoVYr8wnkvtpWUyOpvLyxQqjikpNTqKwNnd2UK7
      nsKkk1+Tnvp6o6s4CAI0UHh95uZyeHx8YndpqkTpKpWCvnv84pND8MlI8xPgnuhcKsnVmEgq
      m61IJ+w6ncVSSKGV6tuFAA1kdx8xqFROk87SN9jtGsLSmdGj6O2nXQhwCpNpzJefNwMAeh1W
      AMCzz4u+RxXSPMT80+ZMWqVUiBTe7DAcw9ti30YRx3i+nONyO+LlNydca8GVbfSLeLhP47mK
      zx822+xMPi1T6dhihqMURLXAkgqVjGLDS8X2G+Ol5/9COvGFRldxcKAuoovpxMztG1MPl6++
      8UY0Gv3Fm6/PrHmuXX1tyd8ay7Mh8KAaiGPy66HCkeF+q1mfSyWYGuff2GRqfDyBGqhdQJ3C
      KKXxiy+9QGL8ybPPyFS6Xqe9SsioWonBZELVhzQ5qAaSqXR9qkef+MgAAEChlgIAACUFAACA
      q83U6Itw5bUeQt/T6BIOFFqhDIEi8rbft94WL785yS7+FSZVNrqKgwN5T7T/xu3F0VPncpuz
      MovNs7RisfeEg76BiTM9XZpaIcl6bwpVaKvgn/7Lw7yWwh+AmsJobXeXvDw/+/Dm7ZlYIuoP
      BLzr64ls5s79eaHqQ5oc3D3RwZWf3ws4jGqtWhr0h1QdnRit7JBRZnRPdNuAOoUpjK4/+1OT
      QqNzDw3zJFXIZhQqTSGXVWsP/62cyCOibvu92IbbfkuPfwmj2ujXYGiMR6CIudB4eLFw/TXx
      8puQ5NjLVM/pRldxoKAaKB/fvn5z3tnn9O/4h9zD64vzfRMnt5fnxk6dt5t0fCnLhRaEKrQl
      8IOXG13CQYOawpSGHouyMn1vRmvs8CWqw069b3NlN5ZJpdt9VZf2AdVACe/0T+8Fjo44/V4f
      zRc2Q2mWI51WXSSSEKo+pMlBncJ0ziN/840RkqLGTnAURVWrYyQlYRmGlEiFqg9pcmKO8YE1
      WZtt+03ajhH63kZXcaDQGI9AEXvb71fEy28sXN0lf/GfGl1F40E1EFvJv371nWfOPXH/9i1F
      V082GrI5Xbs7m71Hzo+7TDxTqqV8QhXafMR6524tcDfVZ1K5UlnRYeYB2U1XlWbL3K2bSpt1
      Z21bqPqQJgfVQGqjzW7QYOW9stTY1WWKbG063KORjQ29FS2Q2C7QCmWfEq6zK7/8w0ZX0Xgi
      b/udO7znMom83T72+khojEegiLrt9/1DvO03rrUqvvidRlfReFANxBRT3//xW5dOj99Z9Pb3
      9QV2dmw9fbGtedI++dzkIM9V+fKhXWmKrxz+bQweB9QUxpQqUlrCYxjGlu/dmkoWmSom4WqS
      00f7haoPaXJwt3PozTajTqFUS2nFE+fOdtAEx5SASq+iBFj4DGkJsNdAFy5fAQB83tYHADhx
      7LgAFSEtReRtvytRkcIbj5KRXaONLqLxRN32W0ua7OLlI81A1G2/P8ge3t9EK778Q0KHfjyE
      aKByLv7Kf/738889c/vuTFeXJRIJ9Iw9dXrCCZ+MND8BxqUaT3QZ9Jl4zNTbt7W8YBoYSOxG
      4GORliBAA8nVHZZuo9HuzEWCR86ezwUCjkEnfCzSEoS5Bpo8dxEA8HlrDwDgJNr8u52IOcbH
      w0qQFym84XCdAyPbeTu0D4m5XxgpwehDtc4LhpNttfrY4xBkv7Aaw1QpiqpWGYKkahxLkIdz
      22/S+aT8M4fqK4InQAPlE4EbN+8oOixhtO13+xFgClPqjKV0UqGWK0n+7gd30qWSP4DG+HYh
      QAPF/RsliUErl0pkstFTZ+16VZepEz4WaQkCnMKMvRNf750AAAwPjwIAwJEJ+EykVYi67Xf8
      sG37TUhwGboR8XeIuu03xzNlEfMPHEbVAEAN9DtgG6hSLGAUlc1kFCotwVdrOFnK5w7rtt9o
      jP9DUBfRPFf50Xf+ZW5p4Rfv38uXij/7wXcfrHju3rh2ZzUkVH1Ik4NqIM/0/0YZPBzLdNLc
      tatv+vaKmQI/NjGYR/uFtQ2oU9jAqee+pDIWKfm2d+fs8y+pypEYgy97fX0jTwhVH9LkYK+B
      7O6jAICh/kEAAAA6AwAjg4PQVSEtQ+xtv+UihTcIjhFizq0tSMxtvys5Ln+oFpjCdXZMrmt0
      Fc1FgAaqscxuMGI0mWKRoEJrKGWSOrNVISXZ0GHb9pu+9NeSobZbSrw+AT4Li23NvnPt2u37
      0+9/MFsppHf9a7++tQgfi7QEARqIKTN6Q2cuV7CZ1NNLXu+at3/ICR+LtAQBGqjT5tJrtKPD
      fRhO9HZp6E67FHDwsUhLEOAaSK7rvvhsNwDA1dsLABgdP/rocQwnAHWopjAMRyPY70MrlCFQ
      RPyRqhWS1disePkHjDC7ceWh+hsBQQhxU32t6lnf7Hb2RP07+m5bNLDd5RxUyykuulY6RGO8
      7IW/w/ueanQVTUeABvIt3H2wmeqJBb3hzGAiOre01JOTXjqFFilrCwJMYVWmrJCR6xtbMoV8
      eXFZb7Xm02n4WKQlCPAO5BybTMwsTZ48uevdMB55MbTjdQwPwcciLUGABqJkmifPnAEAdBsN
      AACnzfrocYyiMXU3fH6TwCi60SU0IzTGI1DEHOOzEcb3vnj5YsOkKmrgQqOraHYCNBBbyc8t
      rA6MTtQyMUaqju54HEMTahnJJbzlqX+Gz28UXGdHDbQvARoo6V+592CmKtGs3rhqHHTjMvnO
      rfnPXEJL/rYFAcb4fCbr7HWuPbwPaEU8lsQwDIh2XYU0GwHegewjk8mFtTPnniGKyQIui2x7
      nO5x+FikJQgyxqsnT00CAICiWwWAWT/56HGMVhGmYfj8RsHUaIWa/aExHoEi5hifDlTWHoqX
      Lx7ScbKl3zsPElQD8XxtfW3NZjHPLa65R0fWFuct/WN8ZlfnGFNLAbfnr9z7nlCFHiRMqkAN
      9JigprB00PP6z6+XqzybCS2trCx7QrVC9H/eeCt1qNbkQOqBaiCddfDYoJUpFzvNpnAoMTbS
      M+/Ze/LYgFDFIc0P9hro+MkndFpNPJG+8sKxHc/m0+eGuZydPlR3QiP1iDiFpTbuStffEilc
      VNToi2hL78eExngECtwUxla2fcFuu4PNZ1iMj8WSKp2+WsgaLQ6awrnkVnnuplCFHgC8s0/i
      vtLoKloMVAMVs4ld75I3XtiZunbqT76a8c7HjMOV4PJOnjo/aq1lwsz8m0IVegDIvqdRA31S
      UFOYVCZf3fCTud0ChqfSmXAGOzHaN+DuS0diQtWHNDmod6BMImZ29vUfOT3c2wt0nWp8DKsW
      tgLpI2MnhaoPaXIiXkQnQtt4NviYB1cZhpI87qrSIh2M0RpO2SV5vIM5jgMAEATxmGUwDPP4
      yTzPk+Rj/Ww/fqxIBzfLFNZyB1cqFZ7nafpx77QXKbnhL4WIH6bKZLJDfDBFUZ/oZ0+k5Ia/
      FALckfhxKIpKx3ZXNnZq+7wafCwWqxbT84tr7H6vW7WUnZ1bYqvlubmFYnWfRWSKmcTqxg5T
      zMwvrlX3/Y7wfDQaze1FVj2+/QoGu9vr69vBaMC7tbv/uFBMx1Y3/bm9yMq+yTVmZX52acUb
      Cni3AtH6sRxTXFhY5tjy7Oxiia3VP7iQji2tekr51MLS+n4vMh+LxdhSdnFprVjKz80tFJg6
      rzNPfPOb36yfB+PB3fvpdETf1UNTH9upmVjwrfdukcVcqbrHyCx6BVUnMLuXkvHJn747qzcQ
      4ZzEZlDVOTizF1+cnwmHUhifqtAWvbJe8l5482e/mq4W86m9sMnqkpJ1frTY6+9etzmtHk8o
      uLs9OFD3sz++dnvqZpEF4UAwvX8yLpcCXygcjWaDwX2SY97ZuzOrwUBSoWYjRblVr6hz8P2p
      KbZSuD+/KaMKNblF9/EvcjmT+NFb76rKhSpVunt3U6MBoSxpM370uWwv4hfxHQgAgBOkVFLv
      2wYA0BitRi2NYTgtlWAAq3+wUi33p4nJARMtleL4PgfTCk1vd+deriSlJVj9Y3luaXmDK6TL
      PCmVUPvk8uDM+Yvr87M1SiKh9r2I5nMlrpKMlHFi35cCYFg0FHQNDpIUtW9yKpEfHe1J7OVo
      Wort8+UBu6M7uZchcZKWUqDuwbTGYDNpAYbTtATHCSktqfM6d5gd4r4DyUgux8mcNhNet2gC
      J+wOUzBRdffbiLpHJoJboUSmu6cnGkmPuvvr/jSDQjoWyYMTE72RBOseqJuM4Q5Xf2en3mZQ
      FjGlw2Ko/y0J+zdVXX0meZXusJn02jpHAgzTKakSqRqydpQeI7larXUYjHglRXdY6ycr1Up/
      KH3u3FG/Lznu7pPUfSlYpsRKtMdHHZEUN9Rnrf8iEzjR2+9Y39o7e3Yi4IuPuPvpj+9mEacw
      pB2gNdsaqZgMR6vSHnPH7z7Mrc7OhFL5gdGjNqO2nInksA6DWrK74zM7HbHttZ1obuzIURX9
      0d+7VDrz99/69qP//+rLL02MintrJWqgxuH5tQ1vDpNmQjsSAosl49kSe/HyFQVFDLsHgw/W
      ldXYOz+/TXAZzDBS3gspSMrgdHg8HqXBkdhd/82a39JtCEbitFQil9GJWNx15PSI00gQhKXL
      RBDE5QtnLd2i/2GJuBfRSB1cteAPhuNbHpatrscK+WJFRXFVlvv/S4r47q69x7yXYWrFdCoe
      rrI1ADi7yy3jUg+n5+0DI+FA2GVRLXnjNMFUAFkulT78lxigaenwYJ9aJfou9+gaqGFYppAv
      42qaSxWqVRYPLk892Mm/dOVyp7GDqFXjqbxeTS+vel291lgyU2GBRi4zdBnTYV8gXhgacG56
      tnpdDo832GXSabQa7/qmfWBQKaXiib1v/O0/fP8/vnUwX8X/Af8mNrffj+uyAAAAAElFTkSu
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Auto/Tele' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tele Accuracy' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Auto Accuracy/Mob' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 16' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Assist' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Catch/Truss' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Possession' width='192'>
      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
      7O4BAPwvRT26/X3Ytz4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Intake' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Defense/Driver' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAehUlEQVR4nO2dW2wbWZrfv3NO3XinSJG6S5Zl+Ta2u3vG3b3r
      2V1jtwebmWywSQbY7CIzCyR5yUOCIECeEiDIBAsEEyBveUkWyOVlEiCzSLLBzDbS07s9PZmZ
      9rTdvskX2bJsWXeR4p0ssqrOJQ+S3ZYsk1WlIkVS9XsiRJ5Tp6r+OnXqO98FCSHAx8ct+KgH
      4NPbSI5+bVmWZVltGopPL+JMQLquB4PBN327uro6Pj7uqEPLsmRZbncTxhhCCGMH0y1jDGOM
      ELLfhFJKCHHUxMW5CCEYY5Lk4MYJITjnhBBHB7I5NmcCQgg16VRVVReXowNNEEIIIUdXcEdw
      jjQHAJIkORKQu9Nvfhdeh3POOXekOftj83IN5Oja+fQHXgrIXx4dQ7wUUCAQ8LA3n57ASwFV
      KhUPe/PpCbwUUCwW87A3n57ASwGVy2UPe/PpCbwUUCgU8rA3ny6Bm7qZXaDljQN3vZzZBppj
      GIaHvfl0A0JwY+ULrucBYXXqfSmS3vcDL2cgp7ZOnx5AADeqAACCC0t//XvfkOjTFISUobNI
      CZLIkBQdef17Lx9hviGx/0AISYkTUnwCEEYHbex4KSDfkNiXIISAvFEnviHR51D4hkSfQ+Eb
      En0ORWsBrS4+/B8/+MFqod7yl74h8RjSehE9NjUxnjVGokq5XK7X65qmvemX1Wo1Ho87Ojxj
      zDTNdjfhnCOEGGNOmzgyTDDGnEYouDgXFwcSQuw4JTo9ip2xtRaQns8mJ6YIIdFoFAAURXnT
      LzVNa/LtgZim2YEmlNKWHolCcLp8j+dW5dn3cDhJGXPqkWhZllOPRBfn0jGPRJtja91pKD19
      xt4he9qQyNbmqz/8E7Aa5N4nke9+/6iH0zP4Hom7sPw6WA0AYJkl4A4edscc3yNxF3nmsjR1
      CQUi2pW/A8SZo3u3IQRneoHpBSGcrXtc4KUlulKppFIpDzvsJDgUD//h94BSUNSefhYDAC2s
      mOtzAEIZPi8PzrT1WL4h8UsQkZEaQKjno3VZJQOCgeCskmn3sby8WKVSycPefFwjxceAyIBl
      Ke4sztPNsTzsKxwOe9ibj2tIdCQQiAMAktu+KvVSQI1Gw8PefFyDEELKGyPQvcVLATk1VR1z
      BDVZ7omJkZQ8iSUFoCdX7v18y4XgwCngLj1Ha/sJzTziGAtqKqOXevTNz8uLSyn1sLdDIjg3
      N++x8iaJDJHU2SYuUc27ad/EIKix78ObfyoAALpSYl4KqMk+a+cRZpXml0AIWniOoqMkmHDQ
      lhrW+n3gljp8FmvRNmlIHjxFjRpGoKTPNDkAq5eszCMkKXL6LJa76Arv4KWAqtVqOr0/7OPI
      IAqSNGHVEVERcbZhaW0vsuIyABicBqavHEI/X+6av26cxFpEnniv5YaluXGP17YBABFFGT7v
      eihtwksBdZUhEUmqOvU+r23jYFIoDh2VXtgSD2lUFJxZmQVuVOTBUyQ44PIZ9LJVV1o4vRRQ
      qVRKJpMedngYEEIkECOBGDhfnMmDM5yawKmSPnOYxxctrlvZxwDAjUrg1G+72yFRRy9Z2QUk
      KfLgSfdDaRteCigSiXjY2xGCiCwNnXeRoey1jg745BSshtXxdw41jHbipYDq9dZur8cKKToq
      0jXeqMiDp7rzHerweCkgp+n++h5EJGXo3FGPor14uS7zc5YfQ1oLiDOrVK5wG+Jw5LXu0x+0
      FtDC3I0vbs2V661fZFRV9WJIPr1E6zVQZnOrbuJMqYYpbh7WUywW/bAeRwM7FmE9Z75yYe7x
      WioWjAYVaBrWk0wmezes5/UmfliPN2E96YlTH0ycsnPIrjIkHlsEZ8bKF6yakRPT8vC5dnvo
      etl73xgSexpWy7HyBnBm5Z4Kq+0ufl4KyDckdgNYCe64QCE5gFw6sTjANyT2G1gNa9NXuJ4n
      kSGE235HvBSQb0jsEkhwgAQHOnMsLwXkGxKbI4Tget7KPcNqRB6c6cDzpQN4eQ6+IbEFgpnr
      c7xRYoCQEpAHJo96QB7g5SK6Vqt52FsfIuBFsLoAV497IQQIsWMZ9HZorvFyBtpJIOTzJhAm
      6uglK7eIlYgUG3XRg6ANc32OmToePo/DqW6I4fdDmzsIQjiUVCffk4fPIVcJQGhhmZbWuV4w
      Nu8DdMUk5HskdpRDzhlIUgEhEAJLWpcEIvoeib2EFB8HzqlRU1Ld4h/tGxJ7CYQlKTkNlOKu
      udS+IdF7hBCCNoAzpAT7INtQc3xDovfwetF4/rlgppyaVYbOHvVw2ouX/x9OXVv6FVbeFLQB
      gtPC8lGPpe14KSBdP6AgWZ8hmEXLm9yoNHlek/AgYAkAkchwZwe2xRvlDi8kfEOiA4TgjeXr
      vJoFogSmr6DAwaHcJDwYOHVVUAN3akdTcGas3mbldcCSduLXSchBJolD4uUMVCwWPeytG+GM
      1/IAAMxkjSZWU4TVMAklO7eC5ozX8wAAnPJ6oUMHBQA7Atp6/uiTX1yvm60XyH0/AwGWpMQU
      IIwDcRIatNNCCMH0vJldYPViGx8uRJLik4AIUiOdfG6CnUfYdjbDLGJSJqhhmmaTRAXVanVg
      wNmkzTl3mvnAXRNwaGXYiXx4PZKBpM7ggWkgEscS3zuMnYHtszULSzeXfiWogeSgMn0FSdrr
      TRydy86oXm+Fk6eU2ARgwom8b2AuQjLsj621gBLp0VLlabbcmEoGCCFNAhVUVXWajQAh1IEm
      O5EMjlpxzjHGB+084DclOzuwCWeWYBYACGogzvaNwd25CCEObkUOTqzZrMmbsTm21gIaTI+Q
      4MBgMoIRai6g9o3ykE12grwctdqRwv4mQjA9TwvLOBCXBiYRJi/+LISps+wCyKqcnEHSl+YM
      FIzLiSlWyUixUaKFkRcC2lGq/SY7vz8yAclaMK3Zyhnb95ZoIZixelOYOhRXkRKUIkMvvzI3
      79PiGsMYEFbSX5Y3QpgooxeBM8CkL63Sx3ovTAixk0bzgEfVC7+tPV8J2C3kI8T+ij6cvvj7
      /nUDQhgIbn3E3uT47sYLIWj+GS2uS9EhKTnz6sOFW3VrfQ44VYbOkUD8ZWofhIkyctHKPcXB
      ARLekw2SxMas/DJIComMNDkiq2Ss7SdYjSjDZ51mbuxOjq8/kDCr5uZD4NSsF3Bo8NUwBpp7
      xkrrAGAKEZi+8mUbhKT4mBQfe703WlwDSQWEWHnjjXY8zszNe8Ko8to21qJy8oSnJ3Q0HGND
      IsK7aStffnjJi9zkyHaS8hchFqhZXnP0skP0cgHe6/RtltaWIDmojr/DypskksbaHhOonJzm
      jCJO5dQpm35/ysgFQVQiq/Lg9JsPSZSxt2l+Cath4sonugvxUkC1Wm1w0JZ9thtACEnRYSl6
      gN0WEVlKnbb/6rtT3EQaOt88O8du4tixt9wPuvvYKyCz8r9+9BMVmeXAxB998+tO+2pTXJjg
      TFh1JGndFoknOBNWA0mKOw/5/mDvLSHKcCppUstdTHU7HMoEp8bqLVbJ4OCANnH5VRvd0SI4
      M9fv0tI61qLq5LtdWISgM+yztPKGYUpq+Ncvu0lM3A5DorDqrLwBnPLqNm+2Ad5pBG3Q0jpw
      yvV8hzfAu4p9AmKlctV1X+0wJCKiYi0GAEgJIqcVC5wgOGW1nH2HLERUHIgBAJIDWLVrv+CG
      bi7N0exK31jt9zzCsvnSxPhw3eJ2crK+TlsMiURWp97n9SLWou0r4CgEN7fmae4pYEmbuEwi
      rUvGICJpk+8yvYDVMLanbMFo5S/+Q/32X+JQLP5H/1KZ7IcU0ntmIFbJ3Hm8Qhu1BnUjoHYY
      EhFCWNak6DBWgm00/+8UOBYCmMVq23bHJqlSdBirYZtZ6IVlGIu3gDNeyVvLDw4x3C5ij4CG
      J0/FJOPJwpOK4WY53GOGRABWzRprd2llExCW4mOACJI0ctCLvScgRdMu/BZIMkmMKqe+2qaj
      dJi9b2GSOnv2Yj6zFlbcWKh7y5DIjao+/xNh6UhSg+d/T07NSrExwBKS2pWkBmES+cbfC17+
      60gL4pCzfMhdyx6h3L1+bXl900RKwJWAeiu9i7B0QRsAIKgpzBpCGKthLGtt3SdHkiwNjpHw
      QH/uxle4fGowED339UTIjcmutxJM4UBCSpygpVUpMozDqaMeTq+yRyipiLK2pWfmbpQS6VNn
      Tzp9Ke+tyFREpJ3gG0SUbrNx9xB7LtzpC187fQEA4OYvP6PgWEA9Z9tAmCDFlrOlz5vYu9ah
      RiZfAoD0yMhLZQlOf/rRjyutKlODp4ZEwSxj415j6Rqr5TzqkOY//bOVP/3npS8+7qTQBWe1
      a/8n/1//hX7zI8F7aYa2yd6pm5s//ejD1Mj4O5fff6mFlcf3sqVaw6LC0JsXW3ER1vOmih68
      uGxlFgCANSryyat2mjSBc248f7D1o/8kLFN/Pi9PnJXiLUyFXhVbYZtPyx/+qaCmsfwAjZ4m
      idF9Tfqr2ArGYRXrpVKxweKhXQmpoQiYtbpJU4koNM2gEI/HvaqcYkkSwxgAEMb7fuCu2AqV
      JIyxwBhjLMuK3LQHIQStlxEIEoja94Q/sNiKJSsIY4QxwkSWZenQ59LdxVaIOjKUWi2yZPjL
      lkMTM3/wnRk7hywWi14VW5HiE8JqcLMmD9o6dEsCk2eHvv2Pa49uRr/621K8xTsXq2w1nv4C
      BFNHLynpM4cpdyoNn4j9/j9pPPpV4OJVkniju3TvsldAiCQGIrcXHjcsGlGP0nECYSKnz4CH
      eQAxib33zdh73wQbiQqt7UWu5wHA3Jp/NUbHBQhh7e0PtLc/sHPcXmTP/FzKbT1ZK1y8dCEg
      uTEkersXtrsE8e6ioxe0/CUJDSJJRUTeF3rhAiEE3Vqqf/F/2fZqz72l2mHPDBRQJTmUmDkx
      qcpuBNRotL24UGeQB2c4AOJUTk4fUsGslCn84F/xYoakJhJ//9+SSOcSr3SGPUIhsppbefSz
      z67XGm5eOJ0u07oWRCQpOSMPncOHthLxco6XtgGA5Te5Xn71K8EpLy5b2093gud7lD0Cmrtz
      98LlK1MJpWI6TubgFCEEq5do9hEtrr4oAND1CGFtLFY++s/1uU8Fs5VVQxqa1i78Jg7FA29/
      IA3s2ee3sk+sjTlzY87cmu/Q000IVssbG/dpedOra75nziiVizULGuWCqpsw4Hhjy1mmEk7N
      tdusljcKkkrkV+PMuxZBzeIPv8+yKyApOBhVZ1o7/mI1EPv2P+P1Kg5EkLTn3ZubuxkBhdmh
      TWjBTGPlhrDqNL+kTV/xpCTUHgFd/cbvHaavJjbGAxBcUHPPB1utBLywhTgd3osOBOy83Dnv
      QXDGq0UAAGbxml0HbSQpBy59lMEZphcREnJqtjOvZ4Kz3celYF49Nw9YLFt6qVhz03u16sSf
      mihy+gxSIyQ+bn/64Y0yXbtlbtx3d/6CMyszbyxfZ3rexVMDKYHI7/4DkprQ3v6GevqyiwHs
      QVJRIEYC8fa56u4DyQE5fQapYSkxTYLeLOf3Lntp/eOPf8qZKaVmfue9C077cuRQhhCSE5Mi
      POzAFCuEsXaH1XICYySrSmrW6Qhpac3KPAYAXi8Fznzg1MyEEApe/lbw8recHvdArMwjVlgW
      GAsh1ImvdWASQggpqVNKylYNbpvsm4E4ltVwSFvfzLjoqxPVeg57mV+07wqbXjeM4bDss0TL
      qWRMjqQuT7qJ3G57dg6ElNG3xOY80UJy4sSbfrVTle1AI6QUGxVmjTfK8uCMi/snhKD559b2
      IgkOKKMXDxmQKqdPM2YRhOShs70rpX0CwjIWi4/up4aGk84vTgfyA5FATBp7p8lTT1DDWLnJ
      jYqcPv26yBAmh6o9wJm59QCYRc0qiaSl+Lj7rgCwrEnDF3s9vf/esB5qCkSisbiE3fxLdEOG
      MlpaZ9WMsOrmZhviZhDaTbOKcPt873uLPTPQ8uL889Xt5OSJaNCNFLphrwcpwd2SbG0IY0UY
      a5OXaXEVazEc8sbvoNfZI6Dpc18dO1F5vrJW1q2Ycw11g080CafViXe5UT0wj9ihQViLKsPn
      29Bzr7J/90oJRGZPu1wldENUBkJIirXL7UYIAYLD7pZ+7y58vcTjBFMe9tZtCCFocXUnRaY6
      eql7Es0cLV7mSOz3WhnC3LgnGmVWWqPljaMeTLfQWkD1cu7h42fcxvq4LYZEIbhVp6U1btSO
      epGO0G4WqZcfOo0QgusFXtmy6QvQAVo/wmp67cmD2+mxiWSrcNV2GBIFsxpL10SjjOSgdvJK
      W1MEtUSbvEwLK1iLkiOKZGWVTWP5BucM9Cll7O1u8JFtLSAtGJsZGcwWKzIjzcN6KpWK0/wK
      LWNHhFlj9TIIDmbN0ssIZHdhPQghRy+JB4f1IBUSpzgAtw6YAJxG24DzsB5WyXFGhRBWdRtZ
      ps2FfAfDeg7CqpeqJHppKKZJGJqG9QQCAa/Cel4iJAID47S8SUJJJZxEkuIurEfUCzTzCEmK
      MnoR29j9ppQ6LVByYFhPc5yeC0uMi9oWtxrq4ElJVmweq4NhPQcxMDT53tCknUO2Y42CMFHG
      3paHDCQp9tN+v465+QAaRQCgarh3DTlYi2knf4NapqSFu+H5BT1R9vvgCHYheKNC1x+TgRE8
      MNryaiIi76q7l1PyIoSAKEgcWMjsaPBSQJ00JApGa3/+7+jSbRQaiHz3+2SghfFQGb3ECs+R
      JMuJN2eSfwGvV2uf/nfRqIV/8w+kxGh3+H50Kb1qSBRWgy7fAyFENc82n7QUEJID6shXbHau
      X/tz/ed/BgCiko9/91/78mlCrxoSkRJQvnIVMCGpE9KEY+fJ5gjLfPHBADj6HeJuxssZqFQq
      eRUb3xKESfCb/0i78oc4GAXlsD7FQghWzVqZR0gOqCMXglf+Ni1vi0Yt8sEfo1dflXd2M3JP
      cWBAGT53nCscvKRn64UhhIhEBjzKqCq4tTW/k3De0qJK+nTkb/5TjDHC+NUFkODM2LgHzOT1
      Egkl27Ph32N4+QjrrYqF+3g5newWEkQIDjAkot2fIdTTb3Mecqxrpn4JwsroBSv/HMuaNPBG
      R1WEsDrxNVpcwVqMhHqmsFVb8VJAR73Z6R6EEFIj6kirxThCJDjgSUBn3+DlI6wbPBJ9OoyX
      Aur1AAMfF3gpIF3XPezNpyfoVUOifYQQol4UjVLvLtG6mf4v+21tPzGWftF4+nOaXzrqsfQh
      /T8D8WoWhADBWdVuITAf+/T/GkiKTwKRkaS2jETmepltr3SPu3FP0KvuHPYh8TEtEAeESdMt
      M1bcrP7wT3gpo178ncDv/sOODa/X6X87EEIIJA1JanMnLPr8Lt9eBqth3P0Y/EnINq0FVNha
      /uW161Wj9TXtntccIfja/Vu//MF/XLp5zaYzORmZRaE4ICRPfxUO4Tt73Gh9peRAbDi8tb5d
      PTkU3nHPfmNfkuTU9R8A2tGkVsj97L/8+3q5+PT6z7+VGo6NjLcMS8CDU+G/+294KUPGzghX
      kQziBfabgKvTdzewNt0aG1EZejFrBN4eihhGw7KsJp3WajWno2yuSNdNLKNhGXUhBDVNs6Ez
      xmw5EcdHcHxEAAjOOedCCEdRGZxzuwd6pYnT09+RgqNWO+fi1I3a5lFaC8i0KBFm3aDxUIgx
      1iQ6JB6PO40dcRFuYqdJfGj0a3/rO4vXPp1469309KwAhBAihDg6kNOwHiGE07AeF6e/M8M5
      auUurMdmE+Royi2Xy02MPYuLizMzzorruAjychcX5lRA3RkXBjs5HijtnnJPXr6F9UbZbyGg
      axb7fYCXAur+9C6CGo2la/r8R1b+efe8M/Y0XgqoOw2Jr7KbQZE2zM2HfriFJ3RLZKoQQlAD
      AUAri99hQHIAAAEIrAb9FGOe0BUurUIIVt401u8ghJTRt6SoR7EWr0EiaXXyXW5UpPh490QH
      9zTd4lRPC8tADQFAC8vtExBCWIqNAPRh7dKjolvCenAoAYAAkJ8+t7foisBChJA8OIO1GEK+
      gHqMbvFIRAhLkTQJp+zXaffpBo6fIdHHU46XIdHHc46XIdHHc/rfI9GnrXgpIH936RjipYB6
      ODuHj1u6xZDo06N4KaCOZijz6Q66xZDo06PYERC/8Vf/89qD1gWOWhoSheDG2h390cdmdsFf
      cfcHdvbC0NjE2FKdlcvl5sVWCoVC8/B4oefN3DMQgm/OQzANcsBF5ZSjLLbSamDtLrbi7kBH
      XGwFAKnBSBRrO+Jo4mgdiUSau2FzHqRYAsGQrMqq5q5yiu9UjxDqHqd6W50mxs4nbPyM0hbR
      q0iNqJOXWS0nxUaA+OnM+oGOxvAihKTocPv8xXw6j5dvYU4nSZ8+wEsBNRoND3vz6Qm8FFA4
      HPawN5+ewEsBeVa1WQheL9PyhmCWNx36tA0vVy3xeNyTfpiebyxdA05JZEides93cu1mvLw3
      lUrFk354vQScAgDTC8B9H6OuxksBBQKHrdu1A4kMYS0GWJITJ/xkYV2Ol7fHsrxZsmA1pJ38
      uuAMSXYrW/scFV4KyMObjYjs1wPsCbx8hDlNAebTB3gpIMMwPOzNpyfwUkChUMjD3nx6gq40
      JPr0Dl4KyCtDok8P4ZmAhBDVSkkIx9msfXqa1gIyaqWnSyuUN/OhFJybm/fD+TvGyk3h246P
      E60FdP/OjaX5e8/zzRInCKtOc8+Amay0xvWCd8Pz6XZaC0gAHohFWFOXbEQkJAcBISAKkr3Z
      0PDpCVoL6OTMTJlKEwPNfH0QUbSpdyExq514H6v+y/wxwm6pA8ZYrVajlDbxW83lcsmkswR1
      hmE4TQrjoomLqAzLsgghjqIyTNOUZdnRfo6LcxFCWJblKJZjpwqM08wFNsfmrFZGc5pX0jjC
      JvV6nRDi6KLruq4oiiMv72q1GgwGHWnOxblwznVdd+T8SSk1TTMYDDo6kM2xebmZ6sKdozNN
      FMXxrr6iKI6kAACapjk9iotzQQg1ie08EIyx0+gzsD02T+xAfOnx/dVMQZak5cWHzzdyNuY0
      vvhwbn27LMvk2aP7T5a37BxGcCuTLciyXNhaufd4yebMmctmABNqVG9/cauktw611EvZu/cf
      AyZWvXzn7n3Dam3Zqha27j54gglpVPI3b97VzdbVHauFrYdPlmVZ1kvZ2/cfNbeS7MCs+oN7
      9w0mCOFzN25sFW2VOK4Ut+smx2DdvXWr0rBlYWGmni3s3prFlRa3xgMBsVr+yVbx9vWbjDYW
      Vrbmbnze8qlIy5tL+drNz29xU//81pyq2fr/2Fi888lncwBw69789uO5oo2rUStmfvzjn5gc
      Np7cWykZitx6GVSpW0pt9dl24/GDu41Sdn4117JJtUFxbmG5Ihbu3ixRkEjrq1qp1R9+cb0O
      cOvOnLGxtFJqHdBi6NXi5tKjlYKZXbz5LK8prdc0zKx9/OGPNoqN7ad365x+dmuxZRMAcf9X
      n1x/uMKN2ue37qlqi1vjjSVaVlSZEARIkmTZxk0CAElRZIIBK1ev/sbcFzftNBmdnA4qEgAQ
      IqmKYudpEYqnR1NRAEiMz14Ylefm11o2iQSUmpyeHtQwxqpqq3BHWJOMyNRkBE2cfWsYFZ+s
      t94TDEXip0YCmRJ7cZTW50JkbebsbDmzBYH0X/utmV9du9+yycbSo0rDyhZKCCFV0+zcbLOS
      Xdwo5HPbQJSrV79+t9WtId/73vdsdNsMLGuN3HpyfFqAkGktMjydSkSbXxCsBGtbq0NT05Sz
      7fWV9NRsMmZjVYgQkVTGzMGIWkLhmdGUHQ1hQmSCLMtc2SieOz+rttC3WH32KFusYCUwlEqs
      Z8vnTp9UpOZXXiw/mc9XqqAEFWisF+nZ2Sm51SRUyW9kzUAyLI2lYqtlenZ6nOAWZ8NM/dHi
      2umT4waHpYXlc29dDGktlrDR5MjUxEg0qEjR9Nbz5+ffuhhUWvx7EzV0+tTJRCxiMra9tjI0
      NZtoemu8fAvzOYb4ETMAAMzU5xeevf73an7905/+7OWCfWt5YWkj36SfL375yf/7+WdF3QQA
      alRWlpa2y30erevHPAAAZFefLjze1KBKpeCDuwsEVc/+2t+YSWuV7FpwZLa+evPTzGoxV6lW
      t6ZPzNy+XosFhIS5ZTJ5YNwsrEqJE1ffvwQAy5u5d06PPVxYMrcWTES31utDI3G9YQ6mh0u5
      raHT735ttt8SS/gzEIAQ8/NPFKyvV8S1v/wZJXwyHakZlAsBANQyTQbLz55pkggMThY3lhUC
      uUptdnJQUZXMxvP1bNkyd6eZerUw93g1qhjb+VLFEFEVb29vz5w8ceP6g5HxdFXvQ5dffw0E
      IGguX0sMhHPFMjVNXN/6b//7r7717e9Mjgwgs3z/4dPB8RNJlT7fbqQToaAES1uVVDwYDQe2
      tzZFKCWqGYak9Y0tIIGJyeHx1MBGtlAuFOOpwUa5KGuBaDSaz258+KMPf+33//id6cGjPluP
      +f9FNfG12BvkEAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Robot Job' width='191'>
      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
      5bcnhtDscAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dead!/Fouls' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Min/Max Total' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Score Trend' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
