<?xml version='1.0' encoding='utf-8' ?>

<workbook version='8.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8100.13.1231.1350                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='Pit Scouting (Pit Scouting.xlsx)' inline='true' name='excel.41706.516013356479' version='8.2'>
      <connection auto-extract='yes' class='excel' driver='Ace12' filename='C:\Users\Student\Documents\GoogleRepo\Scouting\Regional Scouting\Pit Scouting.xlsx' header='yes' imex='1'>
        <relation name='Sheet1$' table='[Sheet1$]' type='table' />
      </connection>
      <column aggregation='Sum' datatype='real' name='[# of CIMs]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='real' name='[High Goal Distance]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='real' name='[Wheel Number]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='real' name='[teamnum]' role='dimension' type='ordinal'>
      </column>
      <extract count='-1' enabled='false' units='records'>
        <connection class='dataengine' dbname='C:\Users\Student\Documents\GoogleRepo\Scouting\Regional Scouting\Pit Scouting (Pit Scouting.xlsx).tde' schema='Extract' tablename='Extract' update-time='3/14/2014 4:51:05 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='55' timestamp-start='2014-03-14 04:51:05.699000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Data#csv (Data.csv)' inline='true' name='csv.41692.410723206020' version='8.2'>
      <connection auto-extract='yes' character-set='65001' class='csv' directory='C:\Users\Student\Documents\GoogleRepo\Scouting\Regional Scouting' driver='' filename='Data.csv' force-character-set='no' force-header='no' force-separator='no' header='yes' separator=','>
        <relation name='Data#csv' table='[Data#csv]' type='table' />
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Auto_Container]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Auto_Stack]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Auto_ToteScored]' role='measure' type='quantitative'>
      </column>
      <column caption='Auto Score' datatype='integer' name='[Calculation_2120201164018813]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='4*[Auto_Container]+&#13;&#10;2*[Auto_ToteScored]+&#13;&#10;8*[Auto_Stack]+&#13;&#10;20*[Robot_Set]' scope-isolation='false' />
      </column>
      <column caption='Total Score' datatype='integer' name='[Calculation_3080205185507348]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='4*[Auto_Container]+&#13;&#10;2*[Auto_ToteScored]+&#13;&#10;8*[Auto_Stack]+&#13;&#10;20*[Robot_Set]+&#13;&#10;2*[Tele_ToteScored]+&#13;&#10;4*[Tele_BinStacked]*[Tele_BinLevel]+&#13;&#10;6*[Put_Litter]*[Tele_BinStacked]+&#13;&#10;[Landfill_Litter]+&#13;&#10;5*[Coopertition_Scored]+&#13;&#10;40*[Coopertition_Stack]' scope-isolation='false' />
      </column>
      <column caption='Tele Score' datatype='integer' name='[Calculation_4060205175802235]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='2*[Tele_ToteScored]+&#13;&#10;4*[Tele_BinStacked]*[Tele_BinLevel]+&#13;&#10;6*[Put_Litter]*[Tele_BinStacked]+&#13;&#10;[Landfill_Litter]+&#13;&#10;5*[Coopertition_Scored]+&#13;&#10;40*[Coopertition_Stack]' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Coopertition_Scored]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Coopertition_Stack]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Dead_Bot]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Driver_Rating]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Fouls]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Landfill_Litter]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Malfunction]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Pickup_Rating]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Put_Litter]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Robot_Set]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Stacks_Knocked]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Tele_BinLevel]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Tele_BinStacked]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Tele_ToteScored]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[matchnum]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
      </column>
      <column-instance column='[Calculation_2120201164018813]' derivation='Avg' name='[avg:Calculation_2120201164018813:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3080205185507348]' derivation='Avg' name='[avg:Calculation_3080205185507348:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4060205175802235]' derivation='Avg' name='[avg:Calculation_4060205175802235:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3080205185507348]' derivation='Max' name='[max:Calculation_3080205185507348:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3080205185507348]' derivation='Min' name='[min:Calculation_3080205185507348:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Auto_Container]' derivation='Sum' name='[sum:Auto_Container:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Auto_Stack]' derivation='Sum' name='[sum:Auto_Stack:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Auto_ToteScored]' derivation='Sum' name='[sum:Auto_ToteScored:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2120201164018813]' derivation='Sum' name='[sum:Calculation_2120201164018813:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4060205175802235]' derivation='Sum' name='[sum:Calculation_4060205175802235:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Coopertition_Scored]' derivation='Sum' name='[sum:Coopertition_Scored:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Coopertition_Stack]' derivation='Sum' name='[sum:Coopertition_Stack:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Dead_Bot]' derivation='Sum' name='[sum:Dead_Bot:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driver_Rating]' derivation='Sum' name='[sum:Driver_Rating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fouls]' derivation='Sum' name='[sum:Fouls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Landfill_Litter]' derivation='Sum' name='[sum:Landfill_Litter:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Malfunction]' derivation='Sum' name='[sum:Malfunction:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pickup_Rating]' derivation='Sum' name='[sum:Pickup_Rating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Put_Litter]' derivation='Sum' name='[sum:Put_Litter:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Robot_Set]' derivation='Sum' name='[sum:Robot_Set:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Stacks_Knocked]' derivation='Sum' name='[sum:Stacks_Knocked:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Tele_BinLevel]' derivation='Sum' name='[sum:Tele_BinLevel:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Tele_BinStacked]' derivation='Sum' name='[sum:Tele_BinStacked:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Tele_ToteScored]' derivation='Sum' name='[sum:Tele_ToteScored:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='false' units='records'>
        <connection class='dataengine' dbname='C:\Users\Student\Documents\Scouting\Scouting 2014.tde' schema='Extract' tablename='Extract' update-time='2/22/2014 5:52:38 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='18' timestamp-start='2014-02-22 17:52:38.253000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;[csv.41692.410723206020].[sum:Tele_BinStacked:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41692.410723206020]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[csv.41692.410723206020].[sum:Calculation_0590308094936153:qk]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[csv.41692.410723206020].[sum:Calculation_7890308094604704:qk]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[csv.41692.410723206020].[sum:Robot_Set:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[csv.41692.410723206020].[sum:Fouls:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[csv.41692.410723206020].[sum:Dead_Bot:qk]&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;[csv.41692.410723206020].[sum:Auto_ToteScored:qk]&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;[csv.41692.410723206020].[sum:Tele_ToteScored:qk]&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;[csv.41692.410723206020].[sum:Auto_Container:qk]&quot;</bucket>
            </map>
            <map to='#c13c01'>
              <bucket>&quot;[csv.41692.410723206020].[max:Calculation_9690308093447497:qk]&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;[csv.41692.410723206020].[sum:Landfill_Litter:qk]&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;[csv.41692.410723206020].[sum:Driver_Rating:qk]&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;[csv.41692.410723206020].[sum:Pickup_Rating:qk]&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;[csv.41692.410723206020].[sum:Stacks_Knocked:qk]&quot;</bucket>
            </map>
            <map to='#d14201'>
              <bucket>&quot;[csv.41692.410723206020].[max:Calculation_3080205185507348:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[csv.41692.410723206020].[sum:Coopertition_Scored:qk]&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;[csv.41692.410723206020].[sum:Tele_BinLevel:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[csv.41692.410723206020].[sum:Malfunction:qk]&quot;</bucket>
            </map>
            <map to='#f26a17'>
              <bucket>&quot;[csv.41692.410723206020].[avg:Calculation_3080205185507348:qk]&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;[csv.41692.410723206020].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;[csv.41692.410723206020].[sum:Put_Litter:qk]&quot;</bucket>
            </map>
            <map to='#fd974b'>
              <bucket>&quot;[csv.41692.410723206020].[min:Calculation_3080205185507348:qk]&quot;</bucket>
            </map>
            <map to='#fda25a'>
              <bucket>&quot;[csv.41692.410723206020].[min:Calculation_9690308093447497:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[csv.41692.410723206020].[avg:Calculation_9690308093447497:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[csv.41692.410723206020].[Multiple Values]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[csv.41692.410723206020].[sum:Calculation_5710308094248893:qk]&quot;</bucket>
            </map>
            <map to='#ff800e'>
              <bucket>&quot;[csv.41692.410723206020].[avg:Calculation_4060205175802235:qk]&quot;</bucket>
            </map>
            <map to='#ff800e'>
              <bucket>&quot;[csv.41692.410723206020].[avg:Calculation_7890308094604704:qk]&quot;</bucket>
            </map>
            <map to='#ff800e'>
              <bucket>&quot;[csv.41692.410723206020].[sum:Calculation_4060205175802235:qk]&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;[csv.41692.410723206020].[sum:Coopertition_Stack:qk]&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;[csv.41692.410723206020].[sum:Auto_Stack:qk]&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;[csv.41692.410723206020].[avg:Calculation_2120201164018813:qk]&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;[csv.41692.410723206020].[avg:Calculation_5710308094248893:qk]&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;[csv.41692.410723206020].[sum:Calculation_2120201164018813:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='csv.41692.410723206020'>
      <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
      </column>
    </datasource-dependencies>
    <datasource-dependencies datasource='excel.41706.516013356479'>
      <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
      <column aggregation='Sum' datatype='real' name='[teamnum]' role='dimension' type='ordinal'>
      </column>
    </datasource-dependencies>
    <datasource-relationship source='csv.41692.410723206020' target='excel.41706.516013356479'>
      <column-mapping>
        <map key='[csv.41692.410723206020].[none:teamnum:ok]' value='[excel.41706.516013356479].[none:teamnum:ok]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <shared-views>
    <shared-view name='csv.41692.410723206020'>
      <datasources>
        <datasource caption='Data#csv (Data.csv)' name='csv.41692.410723206020' />
      </datasources>
      <datasource-dependencies datasource='csv.41692.410723206020'>
        <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
        <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
        </column>
      </datasource-dependencies>
      <filter class='categorical' column='[csv.41692.410723206020].[none:teamnum:ok]'>
        <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:teamnum:ok]' />
          <groupfilter function='empty-level' member='[none:teamnum:ok]' />
        </groupfilter>
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Auto/Tele' tab-color='#e5e4f6'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data#csv (Data.csv)' name='csv.41692.410723206020' />
          </datasources>
          <datasource-dependencies datasource='csv.41692.410723206020'>
            <column caption='Auto Score' datatype='integer' name='[Calculation_2120201164018813]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='4*[Auto_Container]+&#13;&#10;2*[Auto_ToteScored]+&#13;&#10;8*[Auto_Stack]+&#13;&#10;20*[Robot_Set]' scope-isolation='false' />
            </column>
            <column caption='Tele Score' datatype='integer' name='[Calculation_4060205175802235]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='2*[Tele_ToteScored]+&#13;&#10;4*[Tele_BinStacked]*[Tele_BinLevel]+&#13;&#10;6*[Put_Litter]*[Tele_BinStacked]+&#13;&#10;[Landfill_Litter]+&#13;&#10;5*[Coopertition_Scored]+&#13;&#10;40*[Coopertition_Stack]' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_2120201164018813]' derivation='Avg' name='[avg:Calculation_2120201164018813:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4060205175802235]' derivation='Avg' name='[avg:Calculation_4060205175802235:qk]' pivot='key' type='quantitative' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2120201164018813]' derivation='Sum' name='[sum:Calculation_2120201164018813:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41692.410723206020].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41692.410723206020].[avg:Calculation_4060205175802235:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41692.410723206020].[avg:Calculation_2120201164018813:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[csv.41692.410723206020].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[csv.41692.410723206020].[avg:Calculation_4060205175802235:qk]&quot;</bucket>
              <bucket>&quot;[csv.41692.410723206020].[sum:Calculation_2120201164018813:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[csv.41692.410723206020].[none:teamnum:ok]' direction='ASC'>
            <dictionary>
              <bucket>971</bucket>
              <bucket>1678</bucket>
              <bucket>254</bucket>
              <bucket>846</bucket>
              <bucket>368</bucket>
              <bucket>192</bucket>
              <bucket>1323</bucket>
              <bucket>1868</bucket>
              <bucket>604</bucket>
              <bucket>3256</bucket>
              <bucket>2035</bucket>
              <bucket>2489</bucket>
              <bucket>1967</bucket>
              <bucket>114</bucket>
              <bucket>670</bucket>
              <bucket>1700</bucket>
              <bucket>852</bucket>
              <bucket>2144</bucket>
              <bucket>840</bucket>
              <bucket>100</bucket>
              <bucket>2473</bucket>
              <bucket>668</bucket>
              <bucket>1351</bucket>
              <bucket>1388</bucket>
              <bucket>1662</bucket>
              <bucket>4543</bucket>
              <bucket>4990</bucket>
              <bucket>1280</bucket>
              <bucket>256</bucket>
              <bucket>2135</bucket>
              <bucket>8</bucket>
              <bucket>766</bucket>
              <bucket>2854</bucket>
              <bucket>3669</bucket>
              <bucket>5027</bucket>
              <bucket>295</bucket>
              <bucket>2813</bucket>
              <bucket>3045</bucket>
              <bucket>4047</bucket>
              <bucket>5171</bucket>
              <bucket>841</bucket>
              <bucket>115</bucket>
              <bucket>1072</bucket>
              <bucket>4171</bucket>
              <bucket>4765</bucket>
              <bucket>4904</bucket>
              <bucket>5104</bucket>
              <bucket>581</bucket>
              <bucket>692</bucket>
              <bucket>751</bucket>
              <bucket>2141</bucket>
              <bucket>5023</bucket>
              <bucket>5026</bucket>
              <bucket>4186</bucket>
              <bucket>2367</bucket>
              <bucket>5311</bucket>
              <bucket>3482</bucket>
              <bucket>4255</bucket>
              <bucket>1671</bucket>
              <bucket>2085</bucket>
              <bucket>2073</bucket>
              <bucket>2761</bucket>
              <bucket>4135</bucket>
              <bucket>3250</bucket>
              <bucket>1458</bucket>
              <bucket>701</bucket>
              <bucket>599</bucket>
              <bucket>3925</bucket>
              <bucket>3598</bucket>
              <bucket>2551</bucket>
              <bucket>3189</bucket>
              <bucket>5274</bucket>
              <bucket>253</bucket>
              <bucket>4498</bucket>
              <bucket>4669</bucket>
              <bucket>5134</bucket>
              <bucket>5250</bucket>
              <bucket>4643</bucket>
              <bucket>4711</bucket>
              <bucket>3257</bucket>
              <bucket>4698</bucket>
              <bucket>2204</bucket>
              <bucket>4159</bucket>
              <bucket>4185</bucket>
              <bucket>3554</bucket>
              <bucket>3013</bucket>
              <bucket>585</bucket>
              <bucket>3859</bucket>
              <bucket>2156</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41692.410723206020].[none:teamnum:ok]</column>
            <column>[csv.41692.410723206020].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41692.410723206020].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41692.410723206020].[none:teamnum:ok]</rows>
        <cols>[csv.41692.410723206020].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='Dead!/Fouls' tab-color='#e5e4f6'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data#csv (Data.csv)' name='csv.41692.410723206020' />
          </datasources>
          <datasource-dependencies datasource='csv.41692.410723206020'>
            <column datatype='integer' name='[Dead_Bot]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Fouls]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Dead_Bot]' derivation='Avg' name='[avg:Dead_Bot:qk]' pivot='key' type='quantitative' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Fouls]' derivation='Sum' name='[sum:Fouls:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <slices>
            <column>[csv.41692.410723206020].[none:teamnum:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[csv.41692.410723206020].[sum:Fouls:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41692.410723206020].[sum:Fouls:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[csv.41692.410723206020].[none:teamnum:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='188' />
                <format attr='mark-color' value='#f1923e' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41692.410723206020].[sum:Fouls:qk]</rows>
        <cols>[csv.41692.410723206020].[avg:Dead_Bot:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Driver' tab-color='#d6f2f8'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data#csv (Data.csv)' name='csv.41692.410723206020' />
          </datasources>
          <datasource-dependencies datasource='csv.41692.410723206020'>
            <column datatype='integer' name='[Driver_Rating]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Driver_Rating]' derivation='Avg' name='[avg:Driver_Rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <slices>
            <column>[csv.41692.410723206020].[none:teamnum:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='188' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41692.410723206020].[none:teamnum:ok]</rows>
        <cols>[csv.41692.410723206020].[avg:Driver_Rating:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Intake' tab-color='#eaeed3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data#csv (Data.csv)' name='csv.41692.410723206020' />
          </datasources>
          <datasource-dependencies datasource='csv.41692.410723206020'>
            <column datatype='integer' name='[Pickup_Rating]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Pickup_Rating]' derivation='Avg' name='[avg:Pickup_Rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <sort class='computed' column='[csv.41692.410723206020].[none:teamnum:ok]' direction='DESC' using='[csv.41692.410723206020].[avg:Pickup_Rating:qk]'>
          </sort>
          <slices>
            <column>[csv.41692.410723206020].[none:teamnum:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f1923e' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41692.410723206020].[none:teamnum:ok]</rows>
        <cols>[csv.41692.410723206020].[avg:Pickup_Rating:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Min/Max Total' tab-color='#eaeed3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data#csv (Data.csv)' name='csv.41692.410723206020' />
          </datasources>
          <datasource-dependencies datasource='csv.41692.410723206020'>
            <column caption='Total Score' datatype='integer' name='[Calculation_3080205185507348]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='4*[Auto_Container]+&#13;&#10;2*[Auto_ToteScored]+&#13;&#10;8*[Auto_Stack]+&#13;&#10;20*[Robot_Set]+&#13;&#10;2*[Tele_ToteScored]+&#13;&#10;4*[Tele_BinStacked]*[Tele_BinLevel]+&#13;&#10;6*[Put_Litter]*[Tele_BinStacked]+&#13;&#10;[Landfill_Litter]+&#13;&#10;5*[Coopertition_Scored]+&#13;&#10;40*[Coopertition_Stack]' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_3080205185507348]' derivation='Avg' name='[avg:Calculation_3080205185507348:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3080205185507348]' derivation='Max' name='[max:Calculation_3080205185507348:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3080205185507348]' derivation='Min' name='[min:Calculation_3080205185507348:qk]' pivot='key' type='quantitative' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41692.410723206020].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41692.410723206020].[avg:Calculation_3080205185507348:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41692.410723206020].[max:Calculation_3080205185507348:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41692.410723206020].[min:Calculation_3080205185507348:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[csv.41692.410723206020].[none:teamnum:ok]' direction='ASC'>
            <dictionary>
              <bucket>254</bucket>
              <bucket>1678</bucket>
              <bucket>971</bucket>
              <bucket>368</bucket>
              <bucket>846</bucket>
              <bucket>192</bucket>
              <bucket>1323</bucket>
              <bucket>1868</bucket>
              <bucket>1967</bucket>
              <bucket>2489</bucket>
              <bucket>670</bucket>
              <bucket>114</bucket>
              <bucket>604</bucket>
              <bucket>3256</bucket>
              <bucket>2035</bucket>
              <bucket>2854</bucket>
              <bucket>1388</bucket>
              <bucket>2135</bucket>
              <bucket>840</bucket>
              <bucket>668</bucket>
              <bucket>2144</bucket>
              <bucket>100</bucket>
              <bucket>1700</bucket>
              <bucket>4047</bucket>
              <bucket>852</bucket>
              <bucket>4990</bucket>
              <bucket>5027</bucket>
              <bucket>1351</bucket>
              <bucket>1280</bucket>
              <bucket>3669</bucket>
              <bucket>2473</bucket>
              <bucket>766</bucket>
              <bucket>1662</bucket>
              <bucket>256</bucket>
              <bucket>8</bucket>
              <bucket>4543</bucket>
              <bucket>4765</bucket>
              <bucket>295</bucket>
              <bucket>5171</bucket>
              <bucket>2813</bucket>
              <bucket>4171</bucket>
              <bucket>4904</bucket>
              <bucket>841</bucket>
              <bucket>3045</bucket>
              <bucket>5104</bucket>
              <bucket>1072</bucket>
              <bucket>581</bucket>
              <bucket>751</bucket>
              <bucket>692</bucket>
              <bucket>2141</bucket>
              <bucket>115</bucket>
              <bucket>5023</bucket>
              <bucket>3482</bucket>
              <bucket>4255</bucket>
              <bucket>5026</bucket>
              <bucket>4186</bucket>
              <bucket>2367</bucket>
              <bucket>5311</bucket>
              <bucket>2085</bucket>
              <bucket>1671</bucket>
              <bucket>3250</bucket>
              <bucket>2073</bucket>
              <bucket>2761</bucket>
              <bucket>3925</bucket>
              <bucket>4135</bucket>
              <bucket>701</bucket>
              <bucket>1458</bucket>
              <bucket>3189</bucket>
              <bucket>3598</bucket>
              <bucket>599</bucket>
              <bucket>5274</bucket>
              <bucket>2551</bucket>
              <bucket>4669</bucket>
              <bucket>5134</bucket>
              <bucket>4498</bucket>
              <bucket>5250</bucket>
              <bucket>253</bucket>
              <bucket>4643</bucket>
              <bucket>4711</bucket>
              <bucket>4698</bucket>
              <bucket>2204</bucket>
              <bucket>3013</bucket>
              <bucket>4185</bucket>
              <bucket>3554</bucket>
              <bucket>3257</bucket>
              <bucket>4159</bucket>
              <bucket>585</bucket>
              <bucket>3859</bucket>
              <bucket>2156</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41692.410723206020].[none:teamnum:ok]</column>
            <column>[csv.41692.410723206020].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41692.410723206020].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[csv.41692.410723206020].[none:teamnum:ok]</rows>
        <cols>[csv.41692.410723206020].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='Pit Scouting 1' tab-color='#eaeed3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Pit Scouting (Pit Scouting.xlsx)' name='excel.41706.516013356479' />
          </datasources>
          <datasource-dependencies datasource='excel.41706.516013356479'>
            <column aggregation='Sum' datatype='real' name='[# of CIMs]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Drive Train Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Kitbot]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Shift]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Speed (ft/sec)]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[# of CIMs]' derivation='None' name='[none:# of CIMs:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Drive Train Type]' derivation='None' name='[none:Drive Train Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Kitbot]' derivation='None' name='[none:Kitbot:nk]' pivot='key' type='nominal' />
            <column-instance column='[Shift]' derivation='None' name='[none:Shift:nk]' pivot='key' type='nominal' />
            <column-instance column='[Speed (ft/sec)]' derivation='None' name='[none:Speed (ft/sec):nk]' pivot='key' type='nominal' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='real' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([excel.41706.516013356479].[none:teamnum:ok] / ([excel.41706.516013356479].[none:Drive Train Type:nk] / ([excel.41706.516013356479].[none:Kitbot:nk] / ([excel.41706.516013356479].[none:# of CIMs:ok] / ([excel.41706.516013356479].[none:Shift:nk] / [excel.41706.516013356479].[none:Speed (ft/sec):nk])))))</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Pit Scouting 2' tab-color='#d6f2f8'>
      <table>
        <view>
          <datasources>
            <datasource caption='Pit Scouting (Pit Scouting.xlsx)' name='excel.41706.516013356479' />
          </datasources>
          <datasource-dependencies datasource='excel.41706.516013356479'>
            <column aggregation='Sum' datatype='real' name='[High Goal Distance]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Pickup]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Special]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='real' name='[Wheel Number]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Wheel Type]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[High Goal Distance]' derivation='None' name='[none:High Goal Distance:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Pickup]' derivation='None' name='[none:Pickup:nk]' pivot='key' type='nominal' />
            <column-instance column='[Special]' derivation='None' name='[none:Special:nk]' pivot='key' type='nominal' />
            <column-instance column='[Wheel Number]' derivation='None' name='[none:Wheel Number:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Wheel Type]' derivation='None' name='[none:Wheel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='real' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([excel.41706.516013356479].[none:teamnum:ok] / ([excel.41706.516013356479].[none:High Goal Distance:ok] / ([excel.41706.516013356479].[none:Pickup:nk] / ([excel.41706.516013356479].[none:Wheel Number:ok] / ([excel.41706.516013356479].[none:Wheel Type:nk] / [excel.41706.516013356479].[none:Special:nk])))))</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Total Score' tab-color='#d7e9ff'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data#csv (Data.csv)' name='csv.41692.410723206020' />
          </datasources>
          <datasource-dependencies datasource='csv.41692.410723206020'>
            <column caption='Total Score' datatype='integer' name='[Calculation_3080205185507348]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='4*[Auto_Container]+&#13;&#10;2*[Auto_ToteScored]+&#13;&#10;8*[Auto_Stack]+&#13;&#10;20*[Robot_Set]+&#13;&#10;2*[Tele_ToteScored]+&#13;&#10;4*[Tele_BinStacked]*[Tele_BinLevel]+&#13;&#10;6*[Put_Litter]*[Tele_BinStacked]+&#13;&#10;[Landfill_Litter]+&#13;&#10;5*[Coopertition_Scored]+&#13;&#10;40*[Coopertition_Stack]' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_3080205185507348]' derivation='Avg' name='[avg:Calculation_3080205185507348:qk]' pivot='key' type='quantitative' />
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <slices>
            <column>[csv.41692.410723206020].[none:teamnum:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f1923e' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41692.410723206020].[none:teamnum:ok]</rows>
        <cols>[csv.41692.410723206020].[avg:Calculation_3080205185507348:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Total Score Trend' tab-color='#f2e6e6'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data#csv (Data.csv)' name='csv.41692.410723206020' />
          </datasources>
          <datasource-dependencies datasource='csv.41692.410723206020'>
            <column-instance column='[teamnum]' derivation='None' name='[none:teamnum:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[teamnum]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <slices>
            <column>[csv.41692.410723206020].[none:teamnum:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f1923e' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41692.410723206020].[none:teamnum:ok]</rows>
        <cols></cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Pit Scouting 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41706.516013356479].[none:# of CIMs:ok]</field>
          <field>[excel.41706.516013356479].[none:# of mini CIMs:nk]</field>
          <field>[excel.41706.516013356479].[none:Drive Train Type:nk]</field>
          <field>[excel.41706.516013356479].[none:High Goal Distance:ok]</field>
          <field>[excel.41706.516013356479].[none:Kitbot:nk]</field>
          <field>[excel.41706.516013356479].[none:Shift:nk]</field>
          <field>[excel.41706.516013356479].[none:Speed (ft/sec):nk]</field>
          <field>[excel.41706.516013356479].[none:Team #:ok]</field>
          <field>[excel.41706.516013356479].[none:Wheel Diameter (in):nk]</field>
          <field>[excel.41706.516013356479].[none:Wheel Type:nk]</field>
          <field>[excel.41706.516013356479].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Pit Scouting 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41706.516013356479].[none:High Goal Distance:ok]</field>
          <field>[excel.41706.516013356479].[none:Kitbot:nk]</field>
          <field>[excel.41706.516013356479].[none:Pickup:nk]</field>
          <field>[excel.41706.516013356479].[none:Shift:nk]</field>
          <field>[excel.41706.516013356479].[none:Special:nk]</field>
          <field>[excel.41706.516013356479].[none:Speed (ft/sec):nk]</field>
          <field>[excel.41706.516013356479].[none:Team #:ok]</field>
          <field>[excel.41706.516013356479].[none:Wheel Number:ok]</field>
          <field>[excel.41706.516013356479].[none:Wheel Type:nk]</field>
          <field>[excel.41706.516013356479].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Total Score'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41692.410723206020].[none:teamnum:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41692.410723206020].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Auto/Tele'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='5' param='[csv.41692.410723206020].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41692.410723206020].[none:teamnum:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41692.410723206020].[:Measure Names]</field>
          <field>[csv.41692.410723206020].[avg:Calculation_2120201164018813:qk]</field>
          <field>[csv.41692.410723206020].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Intake'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41692.410723206020].[none:teamnum:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41692.410723206020].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Driver'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41692.410723206020].[none:teamnum:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41692.410723206020].[avg:Goal_Defense:qk]</field>
          <field>[csv.41692.410723206020].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Dead!/Fouls'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41692.410723206020].[none:teamnum:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41692.410723206020].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Min/Max Total'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='3' param='[csv.41692.410723206020].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='127'>
            <card param='[csv.41692.410723206020].[none:teamnum:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41692.410723206020].[:Measure Names]</field>
          <field>[csv.41692.410723206020].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Total Score Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41692.410723206020].[none:teamnum:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41692.410723206020].[none:matchnum:ok]</field>
          <field>[csv.41692.410723206020].[none:teamnum:ok]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Pit Scouting 1' width='191'>
      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
    </thumbnail>
    <thumbnail height='192' name='Pit Scouting 2' width='192'>
      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
      /wfP6+2H2zKDNwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='181' name='Total Score' width='192'>
      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
    </thumbnail>
    <thumbnail height='181' name='Auto/Tele' width='192'>
      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
    </thumbnail>
    <thumbnail height='181' name='Intake' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAC1CAIAAACGUWciAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAALkElEQVR4nO3df1CT9x0H8E+XHE6yyCEUtDHL8EpDsT8sldOt
      VM/Tq2u91qNdHwxCD06c7ND01FKstqV01YEMtVAUz3DFgzM2w3GlB7fSsVqFlhvOOjU0aSwK
      MV6g2iykgZrlWfcHv8Wql2/g8Xl8v/4yT54nfuK9/TzfyCdf7/nxxx8JIFA/E7oAEDcECJgg
      QMAEAQImCBAwQYCACQIETBAgYIIAARMECJggQMAEAQImCBAwQYCACQIETBAgYIIAARMECJgg
      QMAEAQImCBAwQYCACQIETBAgYIIAARMECJggQMBE/lNPWCyWqawDROoebK4wyGKxxMXFCV2F
      +OAWBkx+8hZ2F+orWyJ0CeKDDgRMECBgIolbWHspV9wy+lCj21OcHNpUsN5gHnNARUS8vW57
      nvG+TSZ9oiCFSpAkApSoN5n0RMSbK7ML2h7mlquIzPaLNC/rQP5T4UMn8e6O+tI9xk4/3Sdk
      rVIjoVsYf/5IxcfehPTMRCWR8xubVzFHFT7yrKP+nbeM3RFzIwWsUIqkE6CBL+oaeqJXpSxW
      EhFdvtRN15p3cFxqRl7VGQ8RhaiXbd6Rs1AhcJlSI5kAuU40t/u1Ty+PISIi57eu0KhF+v3G
      mvyl/Y2Fe5tdqpX69YuiJPN27xiSWAMR0cDZU2bS6B6NGHw4a8V2wwoiIgqLj6UGe18/UfhN
      LodASeWvZKfNSvIYjWrooa0mm8vc2+rmfdYOGynUc2YKWp2ESaUD9Xu9pJodPfwwdtUm3eWy
      inW6d6dFLdBtzUycLmRxUoYfpg6xWCz3fbJe6CrERyq3MBAIAgRMECBgIpVFdDDM2PiZ0CWI
      DzoQMEGAgAkCBEwQIGCCRfQozEQHAB0ImCBAwES8AeLtdVtTudw6x/ABT3vputHHrqYCblhu
      nYPIc6YqLyOV49I37Gqy80JVLTmiXQM5Gsr/0uknzeAjn7PVUFje4h5+THR5/Ez0QEtxYWP/
      yp3GF/maLW/sqo0tS4kRpG6pEWkHctSXHfFGjExvtFfo3235+S81oydcPxP93be9fop94H5Z
      iDY+lnpOnnYQBIMoA+SoLzviXfnymtjhA7KZ83X5219Qj55y/Uz0zHuj5GTrsPp4e5edqMt+
      WYjCJUiEARqKz+r7ZSOHEtK2JWuVY86ZMBP9Q1L21mdC/v5GWkbROVkkyeWyiS8MARDfGsjx
      zxOd/p7ObboPiYjIuCmXhr42OMYNZqKVj2SUVGcQkbkys4Dm4MthwSG+DqRKLjYNyk0a86XT
      8SbORNs+eDk9c/+XPt+Z1javZuHjswQoXYrE14Fuy8SZaGVcWtKJ0j+lnQiNWbI597mJmYOA
      YCZ6CGaiAyO+WxjcURAgYIIAAROJLqIDgpnoAKADARMECJggQMAEAQImWESPwkx0ANCBgAkC
      BExEGaDh8WYufUPp8V6eiLc37dqQznFcetbbH1g9I+eNnZIevig1eydmooNHjAGyfbivsXdh
      bo2xjAtvqThwzOVsKDecDOfKjJWZMeeOvtd4gYh8ztZ9b+xpcY9c1Hjo2Hfz9ZWVWerThvIG
      p4D1S4oYF9GxaRWmNCKigTAF+a/29U+boZCTb+hZeWT4jMEp6ba5czXUOXxRSklVChHf89EP
      JFcopglTuvSIsQMN8bQfrD5F8qh7Z4Yvy1k3v7t6o25txdfxa9Yui7jRlDQREbWXb6zujl/9
      0pPYsjVIxBog38XaHXta3PK5L67+9fSrTWUHzz2YfdBYufmxrkNFtRduMCVNRER8Qo6x5Flv
      zWtFzS4hqpYgcQbIUf/mNlOnPyxp0/ZktYw6LWa/SqsNkynVmsibfWdHJpPJ1Bo1+c+az09p
      wdIlxgBdbTIc6fQrfrN5tz5RSUQUGR1NDqvVzXvsXVcobF7cxIFVz/Fd6VxurZ3n7V12kicm
      PDTlZUuTCBfRztZ/mP1E/s93r/2cBsfqf/dqVlfR++t0FdOiFuheeeHBiRcpn8jI+aqkIk9n
      otD4F/Kzk7BxdHBgJnoIZqIDI8ZbGNxBECBgggABExEuoicNZqIDgA4ETBAgYIIAAROsgUZh
      pDUA6EDABAECJuIN0E23+W0v5cYaPmvwmtJ2gUqWItGugW6+zW+i3mTSExFvrswuaHuYW64i
      3t1RX7rH2Okn7G4XRCLtQLfc5peIiPjzRyo+9iakZyYqyVH/zlvG7oi5kVNcqdSJMkC3sc0v
      EdHAF3UNPdGrUhYriYhC1Ms278hZqJjaUiVPhAG6nW1+iYhcJ5rb/dqnlw/uSK9aqV+/KEqE
      b/cOJ74/0cFtfj/cpuOKW4i6jJvGrKPHGjh7ykyahEcjprrAu4v4FtGq5GJTMhERtZdyxfYb
      b/NLRJ02K8kTNdiOdXKJrwPdrn6vl1Szo299IrDASOsQjLQGRrodCKYEAgRMECBgIr5PYZMH
      I60BQAcCJggQMEGAgAkCBEywiB6FmegAoAMBEwQImEgoQOM29b3BEXNl5siQNMaig0Uia6Dr
      Z6JvcMTluORVrMh/f+08gWqUJml0oIkz0ROPXDhvpV+pMVAfZNII0MSZ6AlHnJe6/WStyuG4
      9A27sFV90EgjQBNnoicccV79z4wHnt9ZZTyYOee04e3qr6a4RKmSyBro1uZnVhgGf6XVquhU
      3/fCliMZ0uhAt+b5dGcql/vBRR/vtlodpMFiKEjulg6kXJyl/7qkYlvaUQqNWbI59zkM2wcH
      ZqKHYCY6MHfLLQwmCQIETBAgYHK3LKJvB2aiA4AOBEwQIGCCAAETBAiYYBE9CjPRAUAHAiYI
      EDAR5S3Mc6bqnd1NF/pp5vyM7XlPqWW8vamkqPpk7zV5aPyq17akaJXkaipYbzAPnq/R7SlO
      Vg1fJYtakJ635Sm17Oa/CdwWMXYgW+OhY9/N11dWZqlPG8obnOQ5Xl11MpwrM9bkLuw6+uej
      XxHRZftFmpd1wGQymUzFySq62rS78LPZ2QeMO397z+nDplaP0O9CIsTYgWJTSqpSiPiej34g
      uUIxjZRLtx1eSkREnhnTyd33PZHzG5tXEasKH77G9a8vzP7HchcpZbSm7PAawWqXHDF2oEHt
      5Ruru+NXv/TkSEh4e52h4QpFR0cSXb7UTdead3BcakZe1RkP9Xu/p0jXJ1vSMRMdXKINEJ+Q
      Yyx51lvzWlGzi4iId7eVv23s9IclvfRMDDm/dYVGLdLvN9bkL+1vLNzb3EdEV66ofl9pLOPC
      Txp21V4QuH6pEG2AZDKZTK1Rk/+s+TzRwKkDr+xuccvn6t7MSVQSzVqx3fCeflGYLEQbH0v+
      vj5S/IIoNl4bIotOSNBQT88Vod+ARIgwQJ7ju9K53Fo7z9u77CRPTHiINx/ef8xNGq5oR/Lg
      hytbTTaXubfVzfusHTZSqOf86vFELX3Z2ubh3eaOLsxEB40YR1r53jZDScVnF/pp6EO7bV9q
      4TH/yPNJuSZ9nLVuf9lfT/Zemxa14PmNf0jWKkeukkUlrXszZ3HU+I/xGGkNjBgDNCkQoMCI
      8BYGdxIECJggQMBEjP8SPVkwEx0AdCBg8pOfwiwWyxSXAmKEj/FDLBZLXFyc0FVMheC+U9zC
      gAkCBEwQIGCCAAETLKKBCToQMEGAgAkCBEwQoOs5Gt7KSOU4LjXj5QPtkvzyj896aGPQ/rcQ
      BOg65r/V9i7NN5pqXl/y3+ajnzqFrifIfM7Wfa8WNPQE7QURoPGc39i8cfFaGYXEPxRHfR6J
      7Ufu+MR07tGtOUnBe0UEaDyeH/uNsStXXYJVMilUK/Xrn5gVEsRXRIBuRi7HF+hvAQEab2ZE
      BP1vpAupZkcLWo0IIEDjTZ/3iPbfX57xkc/aYZOr58wSuqA7HUZarxOxdPWy1wvTuGvy0PjV
      f0zALewW8LMwYIJbGDBBgIAJAgRMECBgggABEwQImCBAwAQBAiYIEDBBgIAJAgRMECBgggAB
      EwQImCBAwOT/oZdYMFKJT2UAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='181' name='Driver' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dead!/Fouls' width='191'>
      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
    </thumbnail>
    <thumbnail height='181' name='Min/Max Total' width='192'>
      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
      Jv8Dy4byeUYd4/MAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='164' name='Total Score Trend' width='144'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
